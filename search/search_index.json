{"config":{"lang":["en"],"separator":"[\\s\\-\\.]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u300a30 \u5929\u81ea\u5236\u64cd\u4f5c\u7cfb\u7edf\u300b\u5b66\u4e60\u603b\u7ed3","text":"<p>\u3010\u65e5\u3011\u5ddd\u5408\u79c0\u5b9e \u8457</p> <p>\u5468\u81ea\u6052 \u674e\u9ece\u660e \u66fe\u7965\u6c5f \u5f20\u6587\u65ed \u8bd1</p> <p>\u5b98\u65b9\u7f51\u7ad9\u300c30 \u65e5\u3067\u3067\u304d\u308b\uff01 OS \u81ea\u4f5c\u5165\u9580\u300d\u306e\u30b5\u30dd\u30fc\u30c8\u30da\u30fc\u30b8</p> <p>\u7531\u4e8e\u7248\u6743\u95ee\u9898\uff0c\u4e66\u7c4d\u53ca\u5149\u76d8\u8d44\u6e90\u8bf7\u5927\u5bb6\u81ea\u884c\u83b7\u53d6 \ud83d\ude18</p> <p></p>"},{"location":"%E7%AC%AC10%E5%A4%A9/","title":"\u7b2c10\u5929 \u53e0\u52a0\u5904\u7406","text":""},{"location":"%E7%AC%AC10%E5%A4%A9/#_1","title":"\u5185\u5b58\u7ba1\u7406(\u7eed)","text":"<p>\u6628\u5929\u7684\u65b9\u6cd5\u867d\u7136\u4e0d\u9519\uff0c\u4f46\u662f\u6709\u4e00\u70b9\u4e0d\u8db3\u2014\u2014\u5728\u53cd\u590d\u8fdb\u884c\u5185\u5b58\u5206\u914d\u548c\u5185\u5b58\u91ca\u653e\u4e4b\u540e\uff0c\u5185\u5b58\u4e2d\u5c31\u4f1a\u51fa\u73b0\u5f88\u591a\u4e0d\u8fde\u7eed\u7684\u5c0f\u6bb5\u672a\u4f7f\u7528\u7a7a\u95f4\uff0c\u8fd9\u6837\u5c31\u4f1a\u628a<code>man -&gt; frees</code>\u6d88\u8017\u6b86\u5c3d\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u8981\u7f16\u5199\u4e00\u4e9b\u603b\u662f\u4ee5<code>0x1000</code>\u5b57\u8282\u4e3a\u5355\u4f4d\u8fdb\u884c\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\u7684\u51fd\u6570\uff0c\u5b83\u4eec\u4f1a\u628a\u6307\u5b9a\u7684\u5185\u5b58\u5927\u5c0f\u6309<code>0x1000</code>\u5b57\u8282\u4e3a\u5355\u4f4d\u5411\u4e0a\u820d\u5165\u3002\u6b63\u597d\u662f4KB\u3002</p> memory.c<pre><code>unsigned int memman_alloc_4k(struct MEMMAN *man, unsigned int size)\n{\n    unsigned int a;\n    size = (size + 0xfff) &amp; 0xfffff000;\n    a = memman_alloc(man, size);\n    return a;\n}\n\nint memman_free_4k(struct MEMMAN *man, unsigned int addr, unsigned int size)\n{\n    int i;\n    size = (size + 0xfff) &amp; 0xfffff000;\n    i = memman_free(man, addr, size);\n    return i;\n}\n</code></pre> <p>\u6211\u4eec\u5148\u6765\u8bb2\u8bb2\u5411\u4e0b\u820d\u5165\u3002\u5c06<code>0x12345678</code>\u4ee5<code>0x1000</code>\u4e3a\u5355\u4f4d\u8fdb\u884c\u5411\u4e0b\u820d\u5165\uff0c\u5f97\u5230\u7684\u662f<code>0x12345000</code>\u3002</p> <p>\u5728\u4e8c\u8fdb\u5236\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u60f3\u628a\u67d0\u4f4d\u53d8\u62100\uff0c\u53ea\u8981\u8fdb\u884c<code>&amp;</code>\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u5411\u4e0a\u820d\u5165\u7684\u8fc7\u7a0b\u662f\uff0c\u5148\u5411\u4e0b\u820d\u5165\uff0c\u5728\u5b83\u7684\u7ed3\u679c\u4e0a\u505a\u4e2a\u52a0\u6cd5\u3002\u5f53\u7136\u8981\u63d0\u524d\u5224\u65ad\u6700\u540e\u51e0\u4f4d\u662f\u4e0d\u662f0\u3002</p> <p>\u5f53\u7136\u8fd8\u6709\u6539\u8fdb\u7684\u7a8d\u95e8<code>size = (size + 0xfff) &amp; 0xfffff000;</code>\u3002</p> <p>\u4f7f\u7528<code>&amp;</code>\u7684\u53e6\u5916\u4e00\u4e2a\u539f\u56e0\u662f\uff0c\u5b83\u662fCPU\u547d\u4ee4\u4e2d\u901f\u5ea6\u6700\u5feb\u7684\u6307\u4ee4\u4e4b\u4e00\uff0c\u548c\u9664\u6cd5\u76f8\u6bd4\u5176\u6267\u884c\u901f\u5ea6\u8981\u5feb10\u5230100\u500d\u3002</p> <p>\u8fd8\u6709\u5982\u679c\u4ee51024\u5b57\u8282\u6216\u80054096\u5b57\u8282\u4e3a\u5355\u4f4d\u8fdb\u884c\u5185\u5b58\u7ba1\u7406\u7684\u8bdd\uff0c\u5728\u5411\u4e0a\u820d\u5165\u7684\u8ba1\u7b97\u4e2d\u5c31\u53ef\u4ee5\u4f7f\u7528<code>&amp;</code>\uff0c\u8fd9\u6837\u4e5f\u80fd\u63d0\u9ad8\u64cd\u4f5c\u7cfb\u7edf\u7684\u8fd0\u884c\u901f\u5ea6\u3002</p>"},{"location":"%E7%AC%AC10%E5%A4%A9/#_2","title":"\u53e0\u52a0\u5904\u7406","text":"<p>\u5728\u753b\u9762\u4e0a\u8fdb\u884c\u53e0\u52a0\u663e\u793a\uff0c\u7c7b\u4f3c\u4e8e\u5c06\u7ed8\u5236\u4e86\u56fe\u6848\u7684\u900f\u660e\u56fe\u5c42\u53e0\u52a0\u5230\u4e00\u8d77\u3002</p> <p>\u6700\u4e0a\u9762\u7684\u5c0f\u56fe\u5c42\u7528\u6765\u63cf\u7ed8\u9f20\u6807\u6307\u9488\uff0c\u4e0b\u9762\u7684\u51e0\u5f20\u56fe\u5c42\u7528\u6765\u5b58\u653e\u7a97\u53e3\uff0c\u6700\u4e0b\u9762\u7684\u56fe\u5c42\u7528\u6765\u5b58\u653e\u684c\u9762\u58c1\u7eb8\u3002\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u8981\u901a\u8fc7\u79fb\u52a8\u56fe\u5c42\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0\u9f20\u6807\u6307\u9488\u7684\u79fb\u52a8\u4ee5\u53ca\u7a97\u53e3\u7684\u79fb\u52a8\u3002</p> <p>\u5982\u4f55\u5c06\u4e00\u4e2a\u56fe\u5c42\u7684\u4fe1\u606f\u7f16\u7a0b\u7a0b\u5e8f\uff1a</p> <pre><code>struct SHEET\n{\n    unsigned char *buf;\n    int bxsize, bysize, vx0, vy0, col_inv, height, flags;\n}\n</code></pre> <p><code>buf</code>\u7528\u6765\u8bb0\u5f55\u56fe\u5c42\u4e0a\u6240\u63cf\u753b\u5185\u5bb9\u7684\u5730\u5740\u3002\u56fe\u5c42\u7684\u6574\u4f53\u5927\u5c0f\uff0c\u7528<code>bxsize*bysize</code>\u8868\u793a\u3002<code>vx0</code>\u548c<code>vy0</code>\u8868\u793a\u56fe\u5c42\u5728\u753b\u9762\u4e0a\u4f4d\u7f6e\u7684\u5750\u6807\u3002<code>col_inv</code>\u8868\u793a\u900f\u660e\u8272\u8272\u53f7\uff0c<code>height</code>\u8868\u793a\u56fe\u5c42\u9ad8\u5ea6\u3002<code>Flags</code>\u7528\u4e8e\u5b58\u653e\u6709\u5173\u5982\u66fe\u7684\u5404\u79cd\u8bbe\u5b9a\u4fe1\u606f\u3002</p> <p>\u4e0b\u9762\u6211\u4eec\u6765\u521b\u5efa\u4e00\u4e2a\u7ba1\u7406\u591a\u91cd\u56fe\u5c42\u4fe1\u606f\u7684\u7ed3\u6784\uff1a</p> <pre><code>#define MAX_SHEETS 256\n\nstruct SHTCTL\n{\n    unsigned char *vram;\n    int xsize, ysize, top;\n    struct SHEET *sheets[MAX_SHEETS];\n    struct SHEET sheets0[MAX_SHEETS];\n};\n</code></pre> <p>\u53d8\u91cf<code>vram</code>\u3001<code>xsize</code>\u3001<code>ysize</code>\u4ee3\u8868VRAM\u7684\u5730\u5740\u548c\u753b\u9762\u7684\u5927\u5c0f\uff0c\u4f46\u5982\u679c\u6bcf\u6b21\u90fd\u4ece<code>BOOTINFO</code>\u67e5\u8be2\u7684\u8bdd\u5c31\u592a\u9ebb\u70e6\u4e86\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u9884\u5148\u5bf9\u5b83\u4eec\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u3002<code>top</code>\u4ee3\u8868\u6700\u4e0a\u9762\u56fe\u5c42\u7684\u9ad8\u5ea6\u3002</p> <p><code>sheets0</code>\u7528\u4e8e\u5b58\u653e256\u4e2a\u56fe\u5c42\u7684\u4fe1\u606f\uff0c<code>sheets</code>\u662f\u8bb0\u5fc6\u5730\u5740\u53d8\u91cf\u7684\u9886\u57df\u3002\u7531\u4e8e<code>sheets0</code>\u4e2d\u7684\u56fe\u5c42\u987a\u5e8f\u6df7\u4e71\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u5b83\u4eec\u6309\u7167\u9ad8\u5ea6\u8fdb\u884c\u5347\u5e8f\u6392\u5217\uff0c\u7136\u540e\u5c06\u5176\u5730\u5740\u5199\u5165<code>sheets</code>\u4e2d\uff0c\u8fd9\u6837\u5c31\u65b9\u4fbf\u591a\u4e86\u3002</p> <p>\u5728<code>SHTCTL</code>\u8fd9\u4e2a\u7ed3\u6784\u4f53\u4e2d\uff0c\u5927\u5c0f\u67099KB\u3002\u5bf9\u4e8e\u7a7a\u95f4\u5982\u6b64\u5927\u7684\u53d8\u91cf\uff0c\u6211\u4eec\u8981\u6765\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u4f7f\u7528<code>memman_alloc_4k</code>\u3002</p> sheet.c<pre><code>struct SHTCTL *shtctl_init(struct MEMMAN *memman, unsigned char *vram, int xsize, int ysize)\n{\n    struct SHTCTL *ctl;\n    int i;\n    ctl = (struct SHTCTL *) memman_alloc_4k(memman, sizeof(struct SHTCTL));\n    if (ctl == 0)\n    {\n        goto err;   \n    }\n    ctl -&gt; vram = vram;\n    ctl -&gt; xsize = xsize;\n    ctl -&gt; ysize = ysize;\n    ctl -&gt; top = -1;  //\u4e00\u4e2aSHEET\u90fd\u6ca1\u6709\n    for (i = 0; i &lt; MAX_SHEETS; i++)\n    {\n        ctl -&gt; sheets0[i].flags = 0  //\u6807\u8bb0\u4e3a\u672a\u4f7f\u7528   \n    }\nerr:\n    return ctl;\n}\n</code></pre> <p>\u4e0b\u9762\u6211\u4eec\u518d\u505a\u4e00\u4e2a\u51fd\u6570\uff0c\u7531\u4e8e\u53d6\u5f97\u65b0\u751f\u6210\u7684\u672a\u4f7f\u7528\u56fe\u5c42\u3002</p> sheet.c<pre><code>#define SHEET_USE 1\nstruct SHEET *sheet_alloc(struct SHTCTL *ctl)\n{\n    struct SHEET *sht;\n    int i;\n    for (i = 0; i &lt; MAX_SHEETS; i++)\n    {\n        if (ctl -&gt; sheets0[i].flags == 0)   \n        {\n            sht = &amp;(ctl -&gt; sheets0[i]);\n            sht -&gt; flags = SHEET_USE;  //\u6807\u8bb0\u4e3a\u6b63\u5728\u4f7f\u7528\n            sht -&gt; height = -1; //\u9690\u85cf\n            return sht;\n        }\n    }\n    return 0; //\u6240\u6709SHEET\u90fd\u5904\u4e8e\u6b63\u5728\u4f7f\u7528\u72b6\u6001\u3002\n}\n</code></pre> sheet.c<pre><code>void sheet_setbuf(struct SHEET *sht, unsigned char *buf, int xsize, int ysize, int col_inv)\n{\n    sht -&gt; buf = buf;\n    sht -&gt; bxize = xsize;\n    sht -&gt; bysize = ysize;\n    sht -&gt; col_inv = col_inv;\n    return;\n}\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u5199\u8bbe\u5b9a\u5e95\u677f\u9ad8\u5ea6\u7684\u51fd\u6570\uff1a</p> sheet.c<pre><code>void sheet_updown(struct SHTCTL *ctl, struct SHEET *sht, int height)\n{\n    int h, old = sht -&gt; height; //\u5b58\u50a8\u8bbe\u7f6e\u524d\u7684\u9ad8\u5ea6\u4fe1\u606f\n    //\u5982\u679c\u6307\u5b9a\u7684\u9ad8\u5ea6\u8fc7\u9ad8\u6216\u8fc7\u4f4e\uff0c\u5219\u8fdb\u884c\u4fee\u6b63\n    if (height &gt; ctl -&gt; top + 1)\n    {\n        height = ctl -&gt; top + 1;    \n    }\n    if (height &lt; -1)\n    {\n        height = -1;\n    }\n    sht -&gt; height = height;\n    //\u4e0b\u9762\u4e3b\u8981\u662f\u8fdb\u884csheets[]\u7684\u91cd\u65b0\u6392\u5217\n    if (old &gt; height)\n    {\n        if (height &gt;= 0)\n        {\n            for (h = old; h &gt; height; h--)\n            {\n                ctl -&gt; sheets[h] = ctl -&gt; sheets[h - 1];\n                ctl -&gt; sheets[h] -&gt; height = h\n            }\n            ctl -&gt; sheets[height] = sht;\n        }   \n        else\n        {\n            if (ctl -&gt; top &gt; old)\n            {\n                for (h = old; h &lt; ctl -&gt; top; h++)\n                {\n                    ctl -&gt; sheets[h] = ctl -&gt; sheets[h + 1];\n                    ctl -&gt; sheets[h] -&gt; height = h;\n                }   \n            }   \n            ctl -&gt; top--;\n        }\n        sheet_refresh(ctl);\n    }\n    else if (old &lt; height)\n    {\n        if (old &gt;= 0)\n        {\n            for (h = old; h &lt; height; h++)\n            {\n                ctl -&gt; sheets[h] = ctl -&gt; sheets[h + 1];\n                ctl -&gt; sheets[h] -&gt; height = h; \n            }\n            ctl -&gt; sheets[height] = sht;\n        }\n        else\n        {\n            for (h = ctl -&gt; top; h &gt;= height -&gt; top; h--)\n            {\n                ctl -&gt; sheets[h + 1] = sheets[h];\n                ctl -&gt; sheets[h + 1] -&gt; height = h + 1;             \n            }\n            ctl -&gt; sheets[height] = sht;\n            ctl -&gt; top++;   \n        }   \n        sheet_refresh(ctl);\n    }\n    return;\n}\n</code></pre> <p>\u4e0b\u9762\u6765\u5199\u5237\u65b0\u51fd\u6570\uff1a</p> sheet.c<pre><code>void sheet_refresh(struct SHTCTL *ctl) \n{\n    int h, bx, by, vx, vy;\n    unsigned char *buf, c, *vram = ctl -&gt; vram;\n    struct SHEET *sht;\n    for (h = 0; h &lt;= ctl -&gt; top; h++) \n    {\n        sht = ctl -&gt; sheets[h];\n        buf = sht -&gt; buf;\n        for (by = 0; by &lt; sht -&gt; bysize; by++)\n        {\n            vy = sht -&gt; vy0 + by;\n            for (bx = 0; bx &lt; sht -&gt; bxsize; bx++)\n            {\n                vx = sht -&gt; vx0 + bx;\n                c = buf[by * (sht -&gt; bxsize) + bx];\n                if (c != sht -&gt; col_mv) \n                {\n                    vram[vy * (ctl -&gt; xsize) + vx] = c; \n                }\n            }   \n        }   \n    }\n    return;\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e0d\u6539\u53d8\u56fe\u5c42\u9ad8\u5ea6\u800c\u53ea\u4e0a\u4e0b\u5de6\u53f3\u79fb\u52a8\u56fe\u5c42\u7684\u51fd\u6570<code>sheet_slide</code>\uff1a</p> sheet.c<pre><code>void sheet_slide(struct SHTCTL *ctl, struct SHEET *sht, int vx0, int vy0);\n{\n    sht -&gt; vx0 = vx0;\n    sht -&gt; vy0 = vy0;\n    if (sht -&gt; height &gt;= 0)\n    {\n        sheet_refresh(ctl); \n    }\n    return;\n}\n</code></pre> <p>\u6700\u540e\u662f\u91ca\u653e\u5df2\u4f7f\u7528\u56fe\u5c42\u7684\u5185\u5b58\u7684\u51fd\u6570\uff1a</p> sheet.c<pre><code>void sheet_free(struct SHTCTL *ctl, struct SHEET *sht)\n{\n    if (sht -&gt; height &gt;= 0)\n    {\n        sheet_updown(ctl, sht, -1); //\u5982\u679c\u5904\u4e8e\u663e\u793a\u72b6\u6001\uff0c\u5219\u5148\u8bbe\u5b9a\u4e3a\u9690\u85cf\n    }\n    sht -&gt; flags = 0;\n    return;\n}\n</code></pre> <p>\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b<code>HariMain</code>\u51fd\u6570\uff1a</p> bootpack.c<pre><code>void HariMain(void)\n{\nstruct SHTCTL *shtctl;\nstruct SHEET *sht_back, *sht_mouse;\nunsigned char *buf_back, buf_mouse[256];\n\ninit_palette();\nshtctl = shtctl_init(memman, binfo-&gt;vram, binfo-&gt;scrnx, binfo-&gt;scrny);\nsht_back  = sheet_alloc(shtctl);\nsht_mouse = sheet_alloc(shtctl);\nbuf_back  = (unsigned char *) memman_alloc_4k(memman, binfo-&gt;scrnx * binfo-&gt;scrny);\nsheet_setbuf(sht_back, buf_back, binfo-&gt;scrnx, binfo-&gt;scrny, -1); /* \u900f\u660e\u8272\u306a\u3057 */\nsheet_setbuf(sht_mouse, buf_mouse, 16, 16, 99);\ninit_screen8(buf_back, binfo-&gt;scrnx, binfo-&gt;scrny);\ninit_mouse_cursor8(buf_mouse, 99);\nsheet_slide(shtctl, sht_back, 0, 0);\nmx = (binfo-&gt;scrnx - 16) / 2; /* \u753b\u9762\u4e2d\u592e\u306b\u306a\u308b\u3088\u3046\u306b\u5ea7\u6a19\u8a08\u7b97 */\nmy = (binfo-&gt;scrny - 28 - 16) / 2;\nsheet_slide(shtctl, sht_mouse, mx, my);\nsheet_updown(shtctl, sht_back,  0);\nsheet_updown(shtctl, sht_mouse, 1);\nsprintf(s, \"(%3d, %3d)\", mx, my);\nputfonts8_asc(buf_back, binfo-&gt;scrnx, 0, 0, COL8_FFFFFF, s);\nsprintf(s, \"memory %dMB   free : %dKB\",\n        memtotal / (1024 * 1024), memman_total(memman) / 1024);\nputfonts8_asc(buf_back, binfo-&gt;scrnx, 0, 32, COL8_FFFFFF, s);\nsheet_refresh(shtctl);\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC10%E5%A4%A9/#_3","title":"\u63d0\u9ad8\u53e0\u52a0\u5904\u7406\u901f\u5ea6","text":"<p>\u5173\u4e8e\u9f20\u6807\uff0c\u53ea\u9700\u8981\u91cd\u65b0\u63cf\u7ed8\u79fb\u52a8\u76f8\u5173\u7684\u90e8\u5206\uff1a</p> sheet.c<pre><code>void sheet_refreshsub(struct SHTCTL *ctl, int vx0, int vy0, int vx1, int vy1)\n    {\n    int h, bx, by, vx, vy;\n    unsigned char *buf, c, *vram = ctl -&gt; vram;\n    struct SHEET *sht;\n    for (h = 0; h &lt; ctl -&gt; top; h++)\n    {\n        sht = ctl -&gt; sheets[h];\n        buf = sht -&gt; buf;\n        for (by = 0; by &lt; sht -&gt; bysize; by++)\n        {\n            vy = sht -&gt; vy0 + by;\n            for (bx = 0; bx &lt; sht -&gt; bxsize; bx++)\n            {\n                vx = sht -&gt; vx0 + bx;\n                if (vx0 &lt;= vx &amp;&amp; vx &lt; vx1 &amp;&amp; vy0 &lt;= vy &amp;&amp; vy &lt; vy1)\n                {\n                    c = buf[by * (sht -&gt; bxsize) + bx];\n                    if (c != sht -&gt; col_inv)\n                    {\n                        vram[vy * (ctl -&gt; size) + vx] = c;  \n                    }   \n                }   \n            }   \n        }\n    }\n    return;\n}\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u51e0\u4e4e\u548c<code>sheet_refresh</code>\u4e00\u6837\uff0c\u552f\u4e00\u7684\u4e0d\u540c\u70b9\u662f\u5b83\u80fd\u4f7f\u7528<code>vx0~vy1</code>\u6307\u5b9a\u5237\u65b0\u7684\u8303\u56f4\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a<code>refreshsub</code>\u51fd\u6570\u6765\u63d0\u9ad8<code>sheet_slide</code>\u7684\u8fd0\u884c\u901f\u5ea6\uff1a</p> sheet.c<pre><code>void sheet_slide(struct SHTCTL *ctl, struct SHEET *sht, int vx0, int vy0)\n{\n    int old_vx0 = sht -&gt; vx0, old_vy0 = sht -&gt; vy0;\n    sht -&gt; vx0 = vx0;\n    sht -&gt; vy0 = vy0;\n    if (sht -&gt; height &gt;= 0)\n    {\n        sheet_refreshsub(ctl, old_vx0, old_vy0, old_vx0 + sht -&gt; bxsize, old_vy0 + sht -&gt; bysize);  \n        sheet_refreshsub(ctl, vx0, vy0, vx0 + sht -&gt; bxize, vy0 + sht -&gt; bysize);\n    }\n    return;\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u51fd\u6570\u91cd\u65b0\u63cf\u7ed8\u4e86\u79fb\u52a8\u524d\u548c\u79fb\u52a8\u540e\u7684\u5730\u65b9\u3002</p> <p>\u9f20\u6807\u7684\u95ee\u9898\u89e3\u51b3\u4e86\uff0c\u4f46\u662f\u79fb\u52a8\u9f20\u6807\u65f6\uff0c\u8981\u5728\u753b\u9762\u4e0a\u663e\u793a\u5750\u6807\u7b49\u4fe1\u606f\uff0c\u7ed3\u679c\u53c8\u6267\u884c\u4e86<code>sheet_refresh</code>\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8fd8\u662f\u5f88\u6162\u3002  \u5728\u56fe\u5c42\u4e0a\u663e\u793a\u6587\u5b57\uff0c\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u6539\u5199\u56fe\u5c42\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u53ea\u9700\u8981\u6539\u5199\u56fe\u5c42\u4e2d\u7684\u6587\u5b57\u5c31\u591f\u4e86\uff1a sheet.c<pre><code>void sheet_refresh(struct SHTCTL *ctl, struct SHEET *sht, int bx0, int by0, int bx1, int by1)\n{\n    if (sht -&gt; height &gt;= 0)\n    {\n        sheet_refreshsub(ctl, sht -&gt; vx0 + bx0, sht -&gt; vy0 + by0, sht -&gt; vx0 + bx1, sht -&gt; vy0 + by1);  \n    }\n    return;\n}\n</code></pre></p> <pre><code>sheet_refresh(shtctl, sht_back, 0, 0, binfo-&gt;scrnx, 48); //\u5168\u90e8\nsheet_refresh(shtctl, sht_back, 0, 16, 16, 32); //\u7b2c\u4e8c\u884c\u7b2c\u4e00\u4e2a\nsheet_refresh(shtctl, sht_back, 32, 16, 32 + 15 * 8, 32); //\u7b2c\u4e8c\u884c\u7b2c\u4e8c\u4e2a\nsheet_refresh(shtctl, sht_back, 0, 0, 80, 16);//\u7b2c\u4e00\u884c\n</code></pre>"},{"location":"%E7%AC%AC10%E5%A4%A9/#_4","title":"\u63d0\u9ad8\u53e0\u52a0\u5904\u7406\u901f\u5ea6","text":"<p>\u51cf\u5c11<code>if</code>\u7684\u6570\u91cf\uff0c\u5c06\u6761\u4ef6\u76f4\u63a5\u8f6c\u79fb\u5230<code>for</code>\u4e2d\uff1a</p> sheet.c<pre><code>void sheet_refreshsub(struct SHTCTL *ctl, int vx0, int vy0, int vx1, int vy1)\n{\n    int h, bx, by, vx, vy, bx0, by0, bx1, by1;\n    unsigned char *buf, c, *vram = ctl -&gt; vram;\n    struct SHEET *sht;\n    for (h = 0; h &lt;= ctl -&gt; top; h++)\n    {\n        sht = ctl -&gt; sheets[h];\n        buf = sht -&gt; buf;\n        //\u4f7f\u7528vx0~vy1, \u5bf9bx0~by1\u8fdb\u884c\u5012\u63a8\n        bx0 = vx0 - sht -&gt; vx0;\n        by0 = vy0 - sht -&gt; vy0;\n        bx1 = vx1 - sht -&gt; vx0;\n        by1 = vy1 - sht -&gt; vy0;\n        if (bx0 &lt; 0)\n        {\n            bx0 = 0;    \n        }\n        if (by0 &lt; 0)\n        {\n            by0 = 0;\n        }\n        if (bx1 &gt; sht -&gt; bxsize)\n        {\n            bx1 = sht -&gt; bxsize;    \n        }\n        if (by1 &gt; sht -&gt; bysize)\n        {\n            by1 = sht -&gt; bysize;    \n        }\n        for (by = by0; by &lt; by1; by++)\n        {\n            vy = sht -&gt; vy0 + by;\n            for (bx = bx0; bx &lt; bx1; bx++)\n            {\n                vx = sht -&gt; vx0 + bx;   \n                c = buf[by * sht -&gt; bxsize + bx];\n                if (c != sht -&gt; col_inv)\n                {\n                    vram[vy * ctl -&gt; xsize + vx] = c;\n                }\n            }   \n        }\n    }\n    return;\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC11%E5%A4%A9/","title":"\u7b2c11\u5929 \u5236\u4f5c\u7a97\u53e3","text":""},{"location":"%E7%AC%AC11%E5%A4%A9/#_1","title":"\u9f20\u6807\u663e\u793a\u95ee\u9898","text":"<p>\u9f20\u6807\u79fb\u52a8\u5230\u53f3\u4fa7\u6216\u4e0b\u4fa7\u9690\u85cf\uff1a</p> bootpack.c<pre><code>if (mx &gt; binfo-&gt;scrnx - 1) {\n    mx = binfo-&gt;scrnx - 1;\n}\nif (my &gt; binfo-&gt;scrny - 1) {\n    my = binfo-&gt;scrny - 1;\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC11%E5%A4%A9/#_2","title":"\u5b9e\u73b0\u753b\u9762\u5916\u7684\u652f\u6301","text":"<p>\u6211\u4eec\u51b3\u5b9a\u5c06<code>sheet_refreshsub</code>\u505a\u7684\u5b8c\u7f8e\u4e00\u4e9b\uff0c\u8ba9\u5b83\u4e0d\u5237\u65b0\u753b\u9762\u4ee5\u5916\u7684\u90e8\u5206\u3002</p> sheet.c<pre><code>void sheet_refreshsub(struct SHTCTL *ctl, int vx0, int vy0, int vx1, int vy1)\n{\n    int h, bx, by, vx, vy, bx0, by0, bx1, by1;\n    unsigned char *buf, c, *vram = ctl -&gt; vram;\n    struct SHEET *sht;\n    //\u5982\u679crefresh\u7684\u8303\u56f4\u8d85\u51fa\u4e86\u753b\u9762\u5219\u4fee\u6b63\n    if (vx0 &lt; 0)\n    {\n        vx0 = 0;    \n    } \n    if (vy0 &lt; 0)\n    {\n        vy = 0; \n    }\n    if (vx1 &gt; ctl -&gt; xsize)\n    {\n        vx1 = ctl -&gt; xsize; \n    }\n    if (vy1 &gt; ctl -&gt; ysize)\n    {\n        vy1 = ctl -&gt; ysize; \n    }\n    ....\n    return;\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC11%E5%A4%A9/#shtctl","title":"shtctl\u7684\u6307\u5b9a\u7701\u7565","text":""},{"location":"%E7%AC%AC1%E5%A4%A9/","title":"\u7b2c1\u5929","text":""},{"location":"%E7%AC%AC1%E5%A4%A9/#_1","title":"\u5148\u52a8\u624b\u64cd\u4f5c","text":"<p>\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668Bz162\u4e0b\u8f7d</p> <p></p> <p>\\(168000_{(16)}\\)Bytes = \\(1474560\\)Bytes  = \\(2^{10} \\times 1440\\)Bytes = \\(1440\\)KB</p> <p></p> <pre><code>/-- helloos0\n|\n+-- helloos.img\n|\n+-- !cons_nt.bat\n|\n+-- run.bat\n|\n+-- install.bat\n</code></pre> <pre><code>REM run.bat\nREM \u590d\u5236\u5e76\u91cd\u547d\u540dhelloos.img\ncopy helloos.img ..\\z_tools\\qemu\\fdimage0.bin\n..\\z_tools\\make.exe -C ../z_tools/qemu\n</code></pre> <p><code>.img</code>\u548c<code>.bin</code>\u53ef\u4ee5\u4e92\u6362\u4f7f\u7528</p> <pre><code>REM install.bat\nREM \u5c06helloos.img\u5199\u5165\u78c1\u76d8a:\u4e2d\n..\\z_tools\\imgtol.com w a: helloos.img\n</code></pre> <pre><code>/-- qemu\n|\n+-- qemu.exe\n|\n+-- bios.bin\n|\n+-- fdimage0.bin\n|\n+-- vgabios.bin\n|\n+-- qemu-win.bat\n|\n+-- SDL.dll\n|\n+-- Makefile\n</code></pre>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_2","title":"\u5c06\u64cd\u4f5c\u7cfb\u7edf\u5b89\u88c5\u5230\u8f6f\u76d8\u4e0a(\u5411\u78c1\u76d8\u4e0a\u5199\u5165\u6620\u50cf\u7a0b\u5e8f)","text":"<ol> <li>\u53cc\u51fb<code>!cons_nt.bat</code></li> <li>\u547d\u4ee4\u884c\u4e2d\u8f93\u5165<code>install</code> </li> </ol>"},{"location":"%E7%AC%AC1%E5%A4%A9/#qemu","title":"\u4f7f\u7528<code>qemu</code>\u6a21\u62df\u5668","text":"<ol> <li>\u53cc\u51fb<code>!cons_nt.bat</code></li> <li>\u547d\u4ee4\u884c\u4e2d\u8f93\u5165<code>run</code> </li> </ol> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u4ece\u96f6\u5f00\u53d1\u4e86\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u542f\u52a8\u7535\u8111\u5c31\u4f1a\u663e\u793a\u201chello, world\u201d\u5b57\u6837\u6765\u3002\u4f46\u662f\u6ca1\u6709\u7ed3\u675f\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u65b9\u6cd5\uff0c\u53ea\u80fd\u53d6\u51fa\u8f6f\u76d8\u6216\u91cd\u65b0\u542f\u52a8\u7535\u8111\u3002</p> <p>\u8fd9\u6b21\u6211\u4eec\u8003\u8651\u5230\u4ece\u952e\u76d8\u76f4\u63a5\u8f93\u5165\u6bd4\u8f83\u9ebb\u70e6\uff0c\u6240\u4ee5\u53ea\u8ba9\u5b83\u663e\u793a\u4e86\u4e00\u6761\u6d88\u606f\uff1b\u5982\u679c\u80fd\u518d\u591a\u8f93\u5165\u4e00\u4e9b\u5185\u5bb9\u7684\u8bdd\uff0c\u90a3\u4ec5\u7528\u8fd9\u79cd\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5f00\u53d1\u4efb\u610f\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff08\u5f53\u7136\u6700\u5927\u53ea\u80fd\u52301440KB\uff09</p> <p>\u73b0\u5728\u552f\u4e00\u7684\u95ee\u9898\u662f\uff0c\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u4e4b\u524d\u8f93\u5165\u7684<code>EB 4E 48 45 \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7</code>\u662f\u4ec0\u4e48\u610f\u601d\u3002</p>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_3","title":"\u7a76\u7adf\u505a\u4e86\u4ec0\u4e48","text":"<p>\u4e3a\u4ec0\u4e48\u7528\u8fd9\u79cd\u65b9\u6cd5\u5c31\u80fd\u591f\u5f00\u53d1\u51fa\u64cd\u4f5c\u7cfb\u7edf\u6765\uff1f</p> <ul> <li>CPU\u3001\u7535\u4fe1\u53f7\u3001\u4e8c\u8fdb\u5236</li> </ul> <p>\u4e8c\u8fdb\u5236\u6570\u548c\u5341\u516d\u8fdb\u5236\u6570\u5bf9\u7167\u8868 <pre><code>0000 - 0\n0001 - 1\n0010 - 2\n0011 - 3\n0100 - 4\n0101 - 5\n0110 - 6\n0111 - 7\n1000 - 8\n1001 - 9\n1010 - A\n1011 - B\n1100 - C\n1101 - D\n1110 - E\n1111 - F\n</code></pre></p> <p>\u4e8c\u8fdb\u5236\u7f16\u8bd1\u5668\u5f88\u591a\u65f6\u5019\u592a\u4e0d\u65b9\u4fbf\ud83d\ude12\uff0c\u6240\u4ee5\u6211\u4eec\u5f00\u59cb\u7528\u7f16\u7a0b\u8bed\u8a00\u6765\u7ee7\u7eed\u6211\u4eec\u7684\u5f00\u53d1\u5de5\u4f5c\uff01</p>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_4","title":"\u521d\u6b21\u4f53\u9a8c\u6c47\u7f16\u7a0b\u5e8f","text":"<p>\u6211\u4eec\u73b0\u5728\u9a6c\u4e0a\u6765\u5199\u4e00\u4e2a\u6c47\u7f16\u7a0b\u5e8f\uff0c\u7528\u5b83\u6765\u751f\u6210\u8ddf\u521a\u624d\u5b8c\u5168\u4e00\u6837\u7684<code>helloos.img</code>\u3002</p> <p>\u8fd9\u6b21\u6211\u4eec\u4f7f\u7528\u4f5c\u8005\u81ea\u5df1\u5f00\u53d1\u7684\u6c47\u7f16\u8bed\u8a00\u7f16\u8bd1\u5668<code>nask</code>\uff0c\u5f88\u591a\u8bed\u6cd5\u6a21\u4eff\u4e86\u81ea\u7531\u8f6f\u4ef6\u91cc\u4eab\u6709\u76db\u540d\u7684\u6c47\u7f16\u5668<code>NASM</code>\uff0c\u4f46\u662f\u5728\u5176\u57fa\u7840\u4e0a\u53c8\u63d0\u9ad8\u4e86\u81ea\u52a8\u4f18\u5316\u80fd\u529b\u3002</p>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_5","title":"\u8d85\u957f\u7684\u6e90\u7a0b\u5e8f","text":"<pre><code>; helloos.nas\nDB 0xeb, 0x4e, 0x90, 0x48, 0x45, 0x4c, 0x4c, 0x4f\nDB 0x49, 0x50, 0x4c, 0x00, 0x02, 0x01, 0x01, 0x00\nDB 0x02, 0xe0, 0x00, 0x40, 0x0b, 0xf0, 0x09, 0x00\nDB 0x12, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00\nDB 0x40, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x29, 0xff\n; \u7701\u756518\u4e074314\u884c\nDB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n</code></pre> <p>\\(16800_{(16)}\\times 2 = 184320\\)</p> <p>\u4e0e\u4e8c\u8fdb\u5236\u6587\u4ef6\u5bf9\u6bd4</p> <p></p> <pre><code>REM asm.bat\n..\\z_tools\\nask.exe helloos.nas helloos.img\n</code></pre> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u505a\u6210\u4e86\u7b2c\u4e00\u4e2a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u3002\u4f46\u662f\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u4f46\u6d6a\u8d39\u65f6\u95f4\uff0c\u8fd8\u6d6a\u8d39\u786c\u76d8\u7a7a\u95f4\uff0c\u8fd8\u4e0d\u5982\u7528\u4e8c\u8fdb\u5236\u7f16\u8f91\u5668\u5462\uff0c\u4e0d\u7528\u8f93\u5165<code>0x</code>\u4ec0\u4e48\u7684\u3002</p>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_6","title":"\u6b63\u5e38\u957f\u5ea6\u7684\u6e90\u7a0b\u5e8f","text":"<pre><code>; helloos.nas\nDB 0xeb, 0x4e, 0x90, 0x48, 0x45, 0x4c, 0x4c, 0x4f\nDB 0x49, 0x50, 0x4c, 0x00, 0x02, 0x01, 0x01, 0x00\nDB 0x02, 0xe0, 0x00, 0x40, 0x0b, 0xf0, 0x09, 0x00\nDB 0x12, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00\nDB 0x40, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x29, 0xff\nDB 0xff, 0xff, 0xff, 0x48, 0x45, 0x4c, 0x4c, 0x4f\nDB 0x2d, 0x4f, 0x53, 0x20, 0x20, 0x20, 0x46, 0x41\nDB 0x54, 0x31, 0x32, 0x20, 0x20, 0x20, 0x00, 0x00\nRESB 16\nDB 0xb8, 0x00, 0x00, 0x8e, 0xd0, 0xbc, 0x00, 0x7c\nDB 0x8e, 0xd8, 0x8e, 0xc0, 0xbe, 0x74, 0x7c, 0x8a\nDB 0x04, 0x83, 0xc6, 0x01, 0x3c, 0x00, 0x74, 0x09\nDB 0xb4, 0x0e, 0xbb, 0x0f, 0x00, 0xcd, 0x10, 0xeb\nDB 0xee, 0xf4, 0xeb, 0xfd, 0x0a, 0x0a, 0x68, 0x65\nDB 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72\nDB 0x6c, 0x64, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00\nRESB 368\nDB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xaa\nDB 0xf0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00 \nRESB 4600\nDB 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00\nRESB 1469432\n</code></pre> <p><code>0x168000</code>\\(-\\)<code>0x1408</code>\\(=\\)<code>0x166BF8</code>\\(=\\)<code>1469432</code></p> <ul> <li><code>DB</code>: define byte, \u5411\u6587\u4ef6\u91cc\u76f4\u63a5\u5199\u51651\u4e2a\u5b57\u8282\u7684\u6307\u4ee4</li> <li><code>RESB</code>: reserve byte, \u4ece\u73b0\u5728\u7684\u5730\u5740\u7a7a\u51fa\u5b57\u8282</li> </ul>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_7","title":"\u52a0\u5de5\u6da6\u8272","text":"<p>\u521a\u624d\u6211\u4eec\u628a\u7a0b\u5e8f\u53d8\u6210\u4e86\u77ed\u77ed\u768422\u884c\uff0c\u4f46\u662f\u5f88\u96be\u770b\u51fa\u8fd9\u4e2a\u7a0b\u5e8f\u662f\u5e72\u4ec0\u4e48\u7684\u3002</p>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_8","title":"\u6709\u6a21\u6709\u6837\u7684\u6e90\u4ee3\u7801","text":"<pre><code>; hello-os\n; TAB=4\n; \u4ee5\u4e0b\u8fd9\u6bb5\u662f\u6807\u51c6FAT12\u683c\u5f0f\u8f6f\u76d8\u4e13\u7528\u7684\u4ee3\u7801\n    DB    0xeb, 0x4e, 0x90\n    DB    \"HELLOIPL\"    ; \u542f\u52a8\u533a\u7684\u540d\u79f0\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5b57\u7b26\u4e32(8\u5b57\u8282)\n    DW    512           ; \u6bcf\u4e2a\u6247\u533a(sector)\u7684\u5927\u5c0f(\u5fc5\u987b\u4e3a512\u5b57\u8282) \n    DB    1             ; \u7c07(cluster)\u7684\u5927\u5c0f(\u5fc5\u987b\u4e3a1\u4e2a\u6247\u533a)\n    DW    1             ; FAT\u7684\u8d77\u59cb\u4f4d\u7f6e(\u4e00\u822c\u4ece\u7b2c\u4e00\u4e2a\u6247\u533a\u5f00\u59cb)\n    DB    2             ; FAT\u7684\u4e2a\u6570(\u5fc5\u987b\u4e3a2)\n    DW    224           ; \u6839\u76ee\u5f55\u7684\u5927\u5c0f(\u4e00\u822c\u8bbe\u6210224\u9879)\n    DW    2880          ; \u8be5\u78c1\u76d8\u7684\u5927\u5c0f(\u5fc5\u987b\u662f2880\u6247\u533a)\n    DB    0xf0          ; \u78c1\u76d8\u7684\u79cd\u7c7b(\u5fc5\u987b\u662f0xf0)\n    DW    9             ; FAT\u7684\u957f\u5ea6(\u5fc5\u987b\u662f9\u6247\u533a)\n    DW    18            ; 1\u4e2a\u78c1\u9053(track)\u6709\u51e0\u4e2a\u6247\u533a(\u5fc5\u987b\u662f18)\n    DW    2             ; \u78c1\u5934\u6570(\u5fc5\u987b\u662f2) \n    DD    0             ; \u4e0d\u4f7f\u7528\u5206\u533a\uff0c\u5fc5\u987b\u662f0\n    DD    2880          ; \u91cd\u5199\u4e00\u6b21\u78c1\u76d8\u5927\u5c0f\n    DB    0,0,0x29      ; \u610f\u4e49\u4e0d\u660e\uff0c\u56fa\u5b9a\n    DD    0xffffffff    ; (\u53ef\u80fd\u662f)\u5377\u6807\u53f7\u7801\n    DB    \"HELLO-OS\"    ; \u78c1\u76d8\u7684\u540d\u79f0(11\u5b57\u8282) \n    DB    \"FAT12   \"    ; \u78c1\u76d8\u683c\u5f0f\u540d\u79f0(8\u5b57\u8282)\n    RESB  18            ; \u5148\u7a7a\u51fa18\u5b57\u8282    \n\n; \u7a0b\u5e8f\u4e3b\u4f53\n    DB    0xb8, 0x00, 0x00, 0x8e, 0xd0, 0xbc, 0x00, 0x7c\n    DB    0x8e, 0xd8, 0x8e, 0xc0, 0xbe, 0x74, 0x7c, 0x8a\n    DB    0x04, 0x83, 0xc6, 0x01, 0x3c, 0x00, 0x74, 0x09\n    DB    0xb4, 0x0e, 0xbb, 0x0f, 0x00, 0xcd, 0x10, 0xeb\n    DB    0xee, 0xf4, 0xeb, 0xfd\n\n; \u4fe1\u606f\u663e\u793a\u90e8\u5206\n    DB    0x0a, 0x0a    ; 2\u4e2a\u6362\u884c\n    DB    \"hello, world\"\n    DB    0x0a          ; \u6362\u884c\n    DB    0\n    RESB  0x1fe-$       ; \u586b\u51990x00\uff0c\u76f4\u52300x001fe\n    DB    0x55, 0xaa\n\n; \u4ee5\u4e0b\u662f\u542f\u52a8\u533a\u4ee5\u5916\u90e8\u5206\u7684\u8f93\u51fa\n    DB    0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00\n    RESB  4600\n    DB    0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00\n    RESB  1469432\n</code></pre> <ul> <li><code>Little-endian</code>\u6a21\u5f0f\uff1a\u6570\u636e\u7684\u4f4e\u5b57\u8282\u50a8\u5b58\u5728\u4f4e\u5730\u5740\u5904\uff0c\u9ad8\u5b57\u8282\u50a8\u5b58\u5728\u9ad8\u5730\u5740\u5904\u3002</li> <li><code>DW</code>: define word 16\u4f4d 2\u4e2a\u5b57\u8282</li> <li><code>DD</code>: double-word 32\u4f4d 4\u4e2a\u5b57\u8282 </li> <li><code>$</code>\u524d\u9762\u5df2\u7ecf\u8f93\u51fa\u7684\u5b57\u8282\u6570\uff0c\u66f4\u8f7b\u677e\u7684\u66f4\u6539\u8f93\u51fa\u4fe1\u606f</li> </ul>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_9","title":"\u6247\u533a","text":"<ul> <li>\u8ba1\u7b97\u673a\u4ee5512\u5b57\u8282\u4e3a\u4e00\u4e2a\u5355\u4f4d\u8fdb\u884c\u8bfb\u5199\u3002512\u5b57\u8282\u5c31\u6210\u4e3a\u4e00\u4e2a\u6247\u533a\u3002</li> <li>\u4e00\u5f20\u8f6f\u76d8\u67091440KB\uff0c1474560\u5b57\u8282\uff0c2880\u4e2a\u6247\u533a</li> </ul>"},{"location":"%E7%AC%AC1%E5%A4%A9/#_10","title":"\u542f\u52a8\u533a","text":"<ul> <li>\u7b2c\u4e00\u4e2a\u6247\u533a\u79f0\u4e3a\u542f\u52a8\u533a</li> <li>\u8ba1\u7b97\u673a\u9996\u5148\u4ece\u6700\u521d\u4e00\u4e2a\u6247\u533a\u5f00\u59cb\u8bfb\u8f6f\u76d8\uff0c\u7136\u540e\u53bb\u68c0\u67e5\u8fd9\u4e2a\u6247\u533a\u6700\u540e2\u4e2a\u5b57\u8282\u7684\u5185\u5bb9</li> <li>\u5982\u679c\u6700\u540e\u4e24\u4e2a\u5b57\u8282\u4e0d\u662f<code>0x55AA</code>\uff0c\u8ba1\u7b97\u673a\u5c31\u4f1a\u8ba4\u4e3a\u8fd9\u5f20\u76d8\u4e0a\u6ca1\u6709\u6240\u9700\u7684\u542f\u52a8\u7a0b\u5e8f\uff0c\u5c31\u4f1a\u62a5\u4e00\u4e2a\u4e0d\u80fd\u542f\u52a8\u7684\u9519\u8bef</li> </ul>"},{"location":"%E7%AC%AC1%E5%A4%A9/#ipl","title":"IPL","text":"<p>initial program loader\u3002\u5b9e\u9645\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u50cfhello-os\u8fd9\u4e48\u5c0f\uff0c\u6839\u672c\u88c5\u4e0d\u8fdb\u542f\u52a8\u533a\u3002\u6240\u4ee5\u90fd\u662f\u628a\u52a0\u8f7d\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u7684\u7a0b\u5e8f\u653e\u5728\u542f\u52a8\u533a\u91cc\u7684\u3002</p>"},{"location":"%E7%AC%AC1%E5%A4%A9/#boot","title":"\u542f\u52a8boot","text":"<p>bootstrap\uff1a\u81ea\u529b\u66f4\u751f\u5b8c\u6210\u4efb\u52a1\u3002\u78c1\u76d8\u4e0a\u660e\u660e\u88c5\u6709\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8fd8\u8981\u8bf4\u8bfb\u5165\u64cd\u4f5c\u7684\u7a0b\u5e8f\u4e5f\u653e\u5728\u78c1\u76d8\u91cc\uff0c\u8fd9\u5c31\u50cf\u6253\u5f00\u5b9d\u7269\u60f3\u7684\u94a5\u5319\u5728\u5b9d\u7269\u7bb1\u91cc\u4e00\u6837\u3002\u8fd9\u79cd\u77db\u76fe\u7684\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u542f\u52a8\u88c5\u7f6e\uff0c\u88ab\u79f0\u4e3abootstrap\u65b9\u5f0f\u3002</p>"},{"location":"%E7%AC%AC2%E5%A4%A9/","title":"\u7b2c2\u5929 \u6c47\u7f16\u8bed\u8a00\u5b66\u4e60\u4e0eMakefile\u5165\u95e8","text":""},{"location":"%E7%AC%AC2%E5%A4%A9/#_1","title":"\u7ee7\u7eed\u5f00\u53d1","text":"<p>\u6211\u4eec\u8fd8\u4e0d\u77e5\u9053\u7b2c1\u5929<code>helloos.nas</code>\u4e2d\u7a0b\u5e8f\u4e3b\u4f53\u7684\u610f\u601d\u3002</p>"},{"location":"%E7%AC%AC2%E5%A4%A9/#helloosnas","title":"\u5c06<code>helloos.nas</code>\u6539\u6210\u66f4\u7b80\u5355\u6613\u61c2\u7684\u5f62\u5f0f","text":"<pre><code>; hello-os\n; TAB=4\n    ORG    0x7c00        ; \u6307\u660e\u7a0b\u5e8f\u7684\u88c5\u8f7d\u5730\u5740\n; \u4ee5\u4e0b\u7684\u8bb0\u8ff0\u7528\u4e8e\u6807\u51c6FAT12\u683c\u5f0f\u7684\u8f6f\u76d8\n    JMP    entry\n    DB     0x90\n\n; \u4e2d\u7565\n\n; \u7a0b\u5e8f\u6838\u5fc3\nentry:\n    MOV    AX,0          ; \u521d\u59cb\u5316\u5bc4\u5b58\u5668 \n    MOV    SS,AX\n    MOV    SP,0x7c00\n    MOV    DS,AX\n    MOV    ES,AX\n    MOV    SI,msg\nputloop:\n    MOV    AL,[SI]\n    ADD    SI,1          ; \u7ed9SI\u52a01\n    CMP    AL,0\n    JE     fin\n    MOV    AH,0x0e       ; \u663e\u793a\u4e00\u4e2a\u6587\u5b57\n    MOV    BX,15         ; \u6307\u5b9a\u5b57\u7b26\u989c\u8272\n    INT    0x10          ; \u8c03\u7528\u663e\u5361BIOS\n    JMP    putloop       \nfin:\n    HLT                  ; \u8ba9CPU\u505c\u6b62\uff0c\u7b49\u5f85\u6307\u4ee4\n    JMP    fin           ; \u65e0\u9650\u5faa\u73af\nmsg:\n    DB     0x0a,0x0a     ; \u6362\u884c2\u6b21\n    DB     \"hello, world\"\n    DB     0x0a          ; \u6362\u884c\n    DB     0\n</code></pre> <ul> <li><code>ORG</code>\uff1a\u544a\u8bc9<code>nask</code>\uff0c\u5728\u5f00\u59cb\u6267\u884c\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u4e9b\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u88c5\u8f7d\u5230\u5185\u5b58\u4e2d\u7684\u54ea\u4e2a\u5730\u5740\uff0c\u5982\u679c\u6ca1\u6709\u5b83\uff0c\u6709\u51e0\u4e2a\u6307\u4ee4\u5c31\u4e0d\u80fd\u88ab\u6b63\u786e\u5730\u7ffb\u8bd1\u548c\u6267\u884c\u3002<code>$</code>\u4ee3\u8868\u5c06\u8981\u8bfb\u5165\u7684\u5185\u5b58\u5730\u5740\u3002</li> <li>\u6807\u7b7e\uff1a<code>entry</code>......</li> <li><code>MOV AX,0</code>:  <code>AX = 0</code></li> <li><code>JMP entry</code>: <code>JMP 0x7c50</code></li> <li><code>ADD SI,1</code>: <code>SI = SI + 1</code></li> <li><code>CMP</code>: <code>if(a = 3){\u5904\u7406;}</code></li> <li><code>JE</code>: \u5982\u679c\u6bd4\u8f83\u7ed3\u679c\u76f8\u7b49\uff0c\u5c31\u8df3\u8f6c <code>if(AL == 0){ goto fin;}</code>\u3002jump if equal</li> <li><code>INT</code>: interrupt</li> <li><code>HLT</code>: \u8ba9CPU\u8fdb\u5165\u5f85\u673a\u72b6\u6001</li> </ul>"},{"location":"%E7%AC%AC2%E5%A4%A9/#_2","title":"\u5bc4\u5b58\u5668","text":"<p>CPU\u91cc\u6709\u4e00\u79cd\u540d\u4e3a\u5bc4\u5b58\u5668\u7684\u5b58\u50a8\u7535\u8def\uff0c\u5728\u673a\u5668\u8bed\u8a00\u4e2d\u5c31\u76f8\u5f53\u4e8e\u53d8\u91cf\u7684\u529f\u80fd\u3002</p> <pre><code>8\u4e2a16\u4f4d\u5bc4\u5b58\u5668\uff0c\u6309\u673a\u5668\u8bed\u8a00\u4e2d\u5bc4\u5b58\u5668\u7684\u7f16\u53f7\u987a\u5e8f\u6392\u5217\n\nAX - accumulator        \u7d2f\u52a0\u5bc4\u5b58\u5668\nCX - counter            \u8ba1\u6570\u5bc4\u5b58\u5668\nDX - data               \u6570\u636e\u5bc4\u5b58\u5668\nBX - base               \u57fa\u5740\u5bc4\u5b58\u5668\nSP - stack pointer      \u6808\u6307\u9488\u5bc4\u5b58\u5668\nBP - base pointer       \u57fa\u5740\u6307\u9488\u5bc4\u5b58\u5668\nSI - source index       \u6e90\u53d8\u5740\u5bc4\u5b58\u5668\nDI - destination index  \u76ee\u7684\u53d8\u5740\u5bc4\u5b58\u5668\n</code></pre> <pre><code>8\u4e2a8\u4f4d\u5bc4\u5b58\u5668\n\nAL - \u7d2f\u52a0\u5bc4\u5b58\u5668\u4f4e\u4f4d\nCL - \u8ba1\u6570\u5bc4\u5b58\u5668\u4f4e\u4f4d\nDL - \u6570\u636e\u5bc4\u5b58\u5668\u4f4e\u4f4d\nBL - \u57fa\u5740\u5bc4\u5b58\u5668\u4f4e\u4f4d\nAH - \u7d2f\u52a0\u5bc4\u5b58\u5668\u9ad8\u4f4d\nCH - \u8ba1\u6570\u5bc4\u5b58\u5668\u9ad8\u4f4d\nDH - \u6570\u636e\u5bc4\u5b58\u5668\u9ad8\u4f4d\nBH - \u57fa\u5740\u5bc4\u5b58\u5668\u9ad8\u4f4d\n</code></pre> <pre><code>32\u4f4d\u5bc4\u5b58\u5668\n\nEAX, ECX, EDX, EBX, ESP, EBP, ESI, EDI \n</code></pre> <p>EAX\u768432\u4f4d\u4e2d\u4f4e16\u4f4d\u5c31\u662fAX\uff0c\u9ad816\u4f4d\u6ca1\u6709\u7f16\u53f7\uff0c\u5fc5\u987b\u4f7f\u7528\u79fb\u4f4d\u547d\u4ee4\u79fb\u5230\u4f4e\u4f4d\u3002</p> <pre><code>6\u4e2a16\u4f4d\u6bb5\u5bc4\u5b58\u5668\n\nES - extra segment       \u9644\u52a0\u6bb5\u5bc4\u5b58\u5668\nCS - code segment        \u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668\nSS - stack segment       \u6808\u6bb5\u5bc4\u5b58\u5668\nDS - data segment        \u6570\u636e\u6bb5\u5bc4\u5b58\u5668\nFS - segment part\nGS - segment part\n</code></pre>"},{"location":"%E7%AC%AC2%E5%A4%A9/#_3","title":"\u5185\u5b58","text":"<p>\u5bf9\u4e8eCPU\u6765\u8bf4\uff0c\u5185\u5b58\u5b9e\u9645\u4e0a\u662f\u5916\u90e8\u5b58\u50a8\u5668\u3002\u4e25\u683c\u8bf4\u6765\uff0cCPU\u548c\u5185\u5b58\u4e4b\u95f4\u8fd8\u6709\u79f0\u4e3a\u82af\u7247\u7684\u63a7\u5236\u5355\u5143\uff0c\u8fdb\u884c\u4fe1\u606f\u4ea4\u6362\u3002</p> <p>CPU\u8bbf\u95ee\u5185\u5b58\u7684\u901f\u5ea6\u6bd4\u8bbf\u95ee\u5bc4\u5b58\u5668\u6162\u5f88\u591a\u500d\u3002</p> <p><code>MOV</code>\u6307\u4ee4\u7684\u6570\u636e\u4f20\u9001\u6e90\u548c\u4f20\u9001\u76ee\u7684\u5730\u4e0d\u4ec5\u53ef\u4ee5\u662f\u5bc4\u5b58\u5668\u6216\u5e38\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u5185\u5b58\u5730\u5740\u3002\u6211\u4eec\u5c31\u4f7f\u7528\u65b9\u62ec\u53f7\u8868\u793a\u5185\u5b58\u5730\u5740\u3002</p> <pre><code>MOV AL,[SI]    ; \u6307\u5b9a\u5730\u5740\u4e3aSI\u7684\u5185\u5b58\n</code></pre> <pre><code>MOV BYTE [678],123     ; 8\u4f4d\n</code></pre> <pre><code>MOV WORD [678],123     ; 16\u4f4d \u4f4e\u4f4d678\uff0c\u9ad8\u4f4d679\n</code></pre> <p>\u867d\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u5bc4\u5b58\u5668\u6765\u6307\u5b9a\u5185\u5b58\u5730\u5740\uff0c\u4f46\u662f\u53ef\u4f5c\u6b64\u7528\u9014\u7684\u53ea\u6709<code>BX BP SI DI</code>\u3002</p> <p>\u628a<code>DX</code>\u5185\u5b58\u91cc\u7684\u5185\u5bb9\u8d4b\u503c\u7ed9<code>AL</code>\u7684\u65f6\u5019</p> <pre><code>MOV BX, DX\nMOV AL, BYTE [BX]  \n</code></pre> <p><code>MOV</code>\u6307\u4ee4\u6709\u4e00\u4e2a\u89c4\u5219\uff0c\u6e90\u6570\u636e\u548c\u76ee\u7684\u6570\u636e\u5fc5\u987b\u4f4d\u6570\u76f8\u540c\u3002</p> <pre><code>MOV AL, BX\n</code></pre> <p>\u4f46\u662f\u4e0d\u53ef\u4ee5\u5199\u6210</p> <pre><code>MOV AX, CL\n</code></pre>"},{"location":"%E7%AC%AC2%E5%A4%A9/#rom","title":"ROM","text":"<p>read only memory\u3002\u53ea\u8bfb\u5b58\u50a8\u5668\uff0c\u4e0d\u80fd\u5199\u5165\uff0c\u5207\u65ad\u7535\u6e90\u4ee5\u540e\u5185\u5bb9\u4e0d\u4f1a\u6d88\u5931\u3002</p>"},{"location":"%E7%AC%AC2%E5%A4%A9/#bios","title":"BIOS","text":"<ul> <li>basic input output system \u57fa\u672c\u8f93\u5165\u8f93\u51fa\u7cfb\u7edf</li> <li>\u51fa\u5382\u65f6\u5c31\u7ec4\u88c5\u5728\u7535\u8111\u4e3b\u677f\u4e0a\u7684ROM\u5355\u5143\u91cc\u3002</li> <li>\u7535\u8111\u5382\u5bb6\u5728BIOS\u4e2d\u9884\u5148\u5199\u5165\u4e86\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\u7ecf\u5e38\u4f1a\u7528\u5230\u7684\u4e00\u4e9b\u7a0b\u5e8f\uff0c\u975e\u5e38\u65b9\u4fbf\u3002</li> <li><code>INT</code>\u540e\u9762\u662f\u4e2a\u6570\u5b57\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u5b57\u8c03\u7528BIOS\u4e2d\u4e0d\u540c\u7684\u51fd\u6570\u3002</li> <li>BIOS\u4e2d\u65ad\u6c47\u7f16\u51fd\u6570</li> </ul>"},{"location":"%E7%AC%AC2%E5%A4%A9/#_4","title":"\u663e\u793a\u4e00\u4e2a\u5b57\u7b26","text":"<pre><code>AH = 0x0e;\nAL = character code;\nBH = 0;\nBL = color code;\n\u8fd4\u56de\u503c\uff1a\u65e0\n\u6ce8\uff1abeep\u3001\u9000\u683c\u3001CR\\LF\u90fd\u4f1a\u88ab\u5f53\u4f5c\u63a7\u5236\u5b57\u7b26\u5904\u7406\n</code></pre> <p>\u4f5c\u8005\u4e5f\u5c1a\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\u53ea\u80fd\u663e\u793a\u767d\u8272\u3002\u53ea\u80fd\u63a8\u6d4b\u73b0\u5728\u8fd9\u4e2a\u753b\u9762\u6a21\u5f0f\u4e0b\uff0c\u4e0d\u80fd\u7b80\u5355\u5730\u6307\u5b9a\u5b57\u7b26\u989c\u8272\u3002</p>"},{"location":"%E7%AC%AC2%E5%A4%A9/#0x7c00","title":"<code>0x7c00</code>","text":"<ul> <li>\u5185\u5b58\u76840\u53f7\u5730\u5740\uff0c\u662fBIOS\u7528\u6765\u5b9e\u73b0\u5404\u79cd\u4e0d\u540c\u529f\u80fd\u7684\u5730\u65b9</li> <li><code>0xf0000</code>\u5730\u5740\u9644\u8fd1\uff0c\u8fd8\u5b58\u653e\u7740BIOS\u7a0b\u5e8f\u672c\u8eab </li> <li>\u5185\u5b58\u5206\u5e03\u56fe</li> </ul>"},{"location":"%E7%AC%AC2%E5%A4%A9/#_5","title":"\u5148\u5236\u4f5c\u542f\u52a8\u533a","text":"<p>\u8003\u8651\u5230\u4ee5\u540e\u7684\u5f00\u53d1\uff0c\u6211\u4eec\u4e0d\u8981\u4e00\u4e0b\u5b50\u5c31\u7528<code>nask</code>\u6765\u505a\u6574\u4e2a\u78c1\u76d8\u6620\u50cf\uff0c\u800c\u662f\u5148\u53ea\u7528\u5b83\u6765\u5236\u4f5c512\u5b57\u8282\u7684\u542f\u52a8\u533a\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u6211\u4eec\u7528\u78c1\u76d8\u6620\u50cf\u7ba1\u7406\u5de5\u5177\u6765\u505a\u3002</p>"},{"location":"%E7%AC%AC2%E5%A4%A9/#iplnas","title":"<code>ipl.nas</code>","text":"<pre><code>; hello-os\n; TAB=4\n; \u4ee5\u4e0b\u8fd9\u6bb5\u662f\u6807\u51c6FAT12\u683c\u5f0f\u8f6f\u76d8\u4e13\u7528\u7684\u4ee3\u7801\n    DB    0xeb, 0x4e, 0x90\n    DB    \"HELLOIPL\"    ; \u542f\u52a8\u533a\u7684\u540d\u79f0\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5b57\u7b26\u4e32(8\u5b57\u8282)\n    DW    512           ; \u6bcf\u4e2a\u6247\u533a(sector)\u7684\u5927\u5c0f(\u5fc5\u987b\u4e3a512\u5b57\u8282) \n    DB    1             ; \u7c07(cluster)\u7684\u5927\u5c0f(\u5fc5\u987b\u4e3a1\u4e2a\u6247\u533a)\n    DW    1             ; FAT\u7684\u8d77\u59cb\u4f4d\u7f6e(\u4e00\u822c\u4ece\u7b2c\u4e00\u4e2a\u6247\u533a\u5f00\u59cb)\n    DB    2             ; FAT\u7684\u4e2a\u6570(\u5fc5\u987b\u4e3a2)\n    DW    224           ; \u6839\u76ee\u5f55\u7684\u5927\u5c0f(\u4e00\u822c\u8bbe\u6210224\u9879)\n    DW    2880          ; \u8be5\u78c1\u76d8\u7684\u5927\u5c0f(\u5fc5\u987b\u662f2880\u6247\u533a)\n    DB    0xf0          ; \u78c1\u76d8\u7684\u79cd\u7c7b(\u5fc5\u987b\u662f0xf0)\n    DW    9             ; FAT\u7684\u957f\u5ea6(\u5fc5\u987b\u662f9\u6247\u533a)\n    DW    18            ; 1\u4e2a\u78c1\u9053(track)\u6709\u51e0\u4e2a\u6247\u533a(\u5fc5\u987b\u662f18)\n    DW    2             ; \u78c1\u5934\u6570(\u5fc5\u987b\u662f2) \n    DD    0             ; \u4e0d\u4f7f\u7528\u5206\u533a\uff0c\u5fc5\u987b\u662f0\n    DD    2880          ; \u91cd\u5199\u4e00\u6b21\u78c1\u76d8\u5927\u5c0f\n    DB    0,0,0x29      ; \u610f\u4e49\u4e0d\u660e\uff0c\u56fa\u5b9a\n    DD    0xffffffff    ; (\u53ef\u80fd\u662f)\u5377\u6807\u53f7\u7801\n    DB    \"HELLO-OS\"    ; \u78c1\u76d8\u7684\u540d\u79f0(11\u5b57\u8282) \n    DB    \"FAT12   \"    ; \u78c1\u76d8\u683c\u5f0f\u540d\u79f0(8\u5b57\u8282)\n    RESB  18            ; \u5148\u7a7a\u51fa18\u5b57\u8282    \n\n; \u7a0b\u5e8f\u4e3b\u4f53\nentry:\n    MOV    AX,0          ; \u521d\u59cb\u5316\u5bc4\u5b58\u5668 \n    MOV    SS,AX\n    MOV    SP,0x7c00\n    MOV    DS,AX\n    MOV    ES,AX\n    MOV    SI,msg\nputloop:\n    MOV    AL,[SI]\n    ADD    SI,1          ; \u7ed9SI\u52a01\n    CMP    AL,0\n    JE     fin\n    MOV    AH,0x0e       ; \u663e\u793a\u4e00\u4e2a\u6587\u5b57\n    MOV    BX,15         ; \u6307\u5b9a\u5b57\u7b26\u989c\u8272\n    INT    0x10          ; \u8c03\u7528\u663e\u5361BIOS\n    JMP    putloop       \nfin:\n    HLT                  ; \u8ba9CPU\u505c\u6b62\uff0c\u7b49\u5f85\u6307\u4ee4\n    JMP    fin           ; \u65e0\u9650\u5faa\u73af\nmsg:\n    DB     0x0a,0x0a     ; \u6362\u884c2\u6b21\n    DB     \"hello, world\"\n    DB     0x0a          ; \u6362\u884c\n    DB     0\n\n; \u4fe1\u606f\u663e\u793a\u90e8\u5206\n    DB    0x0a, 0x0a    ; 2\u4e2a\u6362\u884c\n    DB    \"hello, world\"\n    DB    0x0a          ; \u6362\u884c\n    DB    0\n    RESB  0x1fe-$       ; \u586b\u51990x00\uff0c\u76f4\u52300x001fe\n    DB    0x55, 0xaa\n</code></pre> <pre><code>REM asm.bat\n..\\z_tools\\nask.exe ipl.nas ipl.bin ipl.lst\n</code></pre> <p><code>ipl.lst</code>\u662f\u5217\u8868\u6587\u4ef6\uff0c\u53ef\u4ee5\u7528\u6765\u7b80\u5355\u786e\u8ba4\u6bcf\u4e2a\u6307\u4ee4\u662f\u600e\u6837\u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00\u7684\u3002</p> <p>\u5229\u7528\u4f5c\u8005\u81ea\u5df1\u5f00\u53d1\u7684\u78c1\u76d8\u6620\u50cf\u7ba1\u7406\u5de5\u5177<code>edimg.exe</code>\uff0c\u5148\u8bfb\u5165\u4e00\u4e2a\u7a7a\u767d\u7684\u78c1\u76d8\u6620\u50cf\u6587\u4ef6\uff0c\u7136\u540e\u518d\u5f00\u5934\u5199\u5165<code>ipl.bin</code>\u7684\u5185\u5bb9\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u4e3a<code>helloos.img</code>\u7684\u78c1\u76d8\u6620\u50cf\u6587\u4ef6\u3002</p> <pre><code>REM makeimg.bat\n..\\z_tools\\edimg.exe imgin:../z_tools/fdimg0at.tek wbinmig src:ipl.bin len:512 from:0 to:0 imgout:helloos.img\n</code></pre> <p><code>asm - makeimg - run</code></p>"},{"location":"%E7%AC%AC2%E5%A4%A9/#ipllst","title":"<code>ipl.lst</code>","text":"<pre><code>     1 00000000                                 ; hello-os\n     2 00000000                                 ; TAB=4\n     3 00000000                                 \n     4                                                  ORG     0x7c00          ; \u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3069\u3053\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u306e\u304b\n     5 00007C00                                 \n     6 00007C00                                 ; \u4ee5\u4e0b\u306f\u6a19\u6e96\u7684\u306aFAT12\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30d5\u30ed\u30c3\u30d4\u30fc\u30c7\u30a3\u30b9\u30af\u306e\u305f\u3081\u306e\u8a18\u8ff0\n     7 00007C00                                 \n     8 00007C00 EB 4E                                   JMP     entry\n     9 00007C02 90                                      DB      0x90\n    10 00007C03 48 45 4C 4C 4F 49 50 4C                 DB      \"HELLOIPL\"      ; \u30d6\u30fc\u30c8\u30bb\u30af\u30bf\u306e\u540d\u524d\u3092\u81ea\u7531\u306b\u66f8\u3044\u3066\u3088\u3044\uff088\u30d0\u30a4\u30c8\uff09\n    11 00007C0B 0200                                    DW      512             ; 1\u30bb\u30af\u30bf\u306e\u5927\u304d\u3055\uff08512\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    12 00007C0D 01                                      DB      1               ; \u30af\u30e9\u30b9\u30bf\u306e\u5927\u304d\u3055\uff081\u30bb\u30af\u30bf\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    13 00007C0E 0001                                    DW      1               ; FAT\u304c\u3069\u3053\u304b\u3089\u59cb\u307e\u308b\u304b\uff08\u666e\u901a\u306f1\u30bb\u30af\u30bf\u76ee\u304b\u3089\u306b\u3059\u308b\uff09\n    14 00007C10 02                                      DB      2               ; FAT\u306e\u500b\u6570\uff082\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    15 00007C11 00E0                                    DW      224             ; \u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u9818\u57df\u306e\u5927\u304d\u3055\uff08\u666e\u901a\u306f224\u30a8\u30f3\u30c8\u30ea\u306b\u3059\u308b\uff09\n    16 00007C13 0B40                                    DW      2880            ; \u3053\u306e\u30c9\u30e9\u30a4\u30d6\u306e\u5927\u304d\u3055\uff082880\u30bb\u30af\u30bf\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    17 00007C15 F0                                      DB      0xf0            ; \u30e1\u30c7\u30a3\u30a2\u306e\u30bf\u30a4\u30d7\uff080xf0\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    18 00007C16 0009                                    DW      9               ; FAT\u9818\u57df\u306e\u9577\u3055\uff089\u30bb\u30af\u30bf\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    19 00007C18 0012                                    DW      18              ; 1\u30c8\u30e9\u30c3\u30af\u306b\u3044\u304f\u3064\u306e\u30bb\u30af\u30bf\u304c\u3042\u308b\u304b\uff0818\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    20 00007C1A 0002                                    DW      2               ; \u30d8\u30c3\u30c9\u306e\u6570\uff082\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\uff09\n    21 00007C1C 00000000                                DD      0               ; \u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u306a\u3044\u306e\u3067\u3053\u3053\u306f\u5fc5\u305a0\n    22 00007C20 00000B40                                DD      2880            ; \u3053\u306e\u30c9\u30e9\u30a4\u30d6\u5927\u304d\u3055\u3092\u3082\u3046\u4e00\u5ea6\u66f8\u304f\n    23 00007C24 00 00 29                                DB      0,0,0x29        ; \u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3051\u3069\u3053\u306e\u5024\u306b\u3057\u3066\u304a\u304f\u3068\u3044\u3044\u3089\u3057\u3044\n    24 00007C27 FFFFFFFF                                DD      0xffffffff      ; \u305f\u3076\u3093\u30dc\u30ea\u30e5\u30fc\u30e0\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\n    25 00007C2B 48 45 4C 4C 4F 2D 4F 53 20 20           DB      \"HELLO-OS   \"   ; \u30c7\u30a3\u30b9\u30af\u306e\u540d\u524d\uff0811\u30d0\u30a4\u30c8\uff09\n       00007C35 20 \n    26 00007C36 46 41 54 31 32 20 20 20                 DB      \"FAT12   \"      ; \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u540d\u524d\uff088\u30d0\u30a4\u30c8\uff09\n    27 00007C3E 00 00 00 00 00 00 00 00 00 00           RESB    18              ; \u3068\u308a\u3042\u3048\u305a18\u30d0\u30a4\u30c8\u3042\u3051\u3066\u304a\u304f\n       00007C48 00 00 00 00 00 00 00 00 \n    28 00007C50                                 \n    29 00007C50                                 ; \u30d7\u30ed\u30b0\u30e9\u30e0\u672c\u4f53\n    30 00007C50                                 \n    31 00007C50                                 entry:\n    32 00007C50 B8 0000                                 MOV     AX,0            ; \u30ec\u30b8\u30b9\u30bf\u521d\u671f\u5316\n    33 00007C53 8E D0                                   MOV     SS,AX\n    34 00007C55 BC 7C00                                 MOV     SP,0x7c00\n    35 00007C58 8E D8                                   MOV     DS,AX\n    36 00007C5A 8E C0                                   MOV     ES,AX\n    37 00007C5C                                 \n    38 00007C5C BE 7C74                                 MOV     SI,msg\n    39 00007C5F                                 putloop:\n    40 00007C5F 8A 04                                   MOV     AL,[SI]\n    41 00007C61 83 C6 01                                ADD     SI,1            ; SI\u306b1\u3092\u8db3\u3059\n    42 00007C64 3C 00                                   CMP     AL,0\n    43 00007C66 74 09                                   JE      fin\n    44 00007C68 B4 0E                                   MOV     AH,0x0e         ; \u4e00\u6587\u5b57\u8868\u793a\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\n    45 00007C6A BB 000F                                 MOV     BX,15           ; \u30ab\u30e9\u30fc\u30b3\u30fc\u30c9\n    46 00007C6D CD 10                                   INT     0x10            ; \u30d3\u30c7\u30aaBIOS\u547c\u3073\u51fa\u3057\n    47 00007C6F EB EE                                   JMP     putloop\n    48 00007C71                                 fin:\n    49 00007C71 F4                                      HLT                     ; \u4f55\u304b\u3042\u308b\u307e\u3067CPU\u3092\u505c\u6b62\u3055\u305b\u308b\n    50 00007C72 EB FD                                   JMP     fin             ; \u7121\u9650\u30eb\u30fc\u30d7\n    51 00007C74                                 \n    52 00007C74                                 msg:\n    53 00007C74 0A 0A                                   DB      0x0a, 0x0a      ; \u6539\u884c\u30922\u3064\n    54 00007C76 68 65 6C 6C 6F 2C 20 77 6F 72           DB      \"hello, world\"\n       00007C80 6C 64 \n    55 00007C82 0A                                      DB      0x0a            ; \u6539\u884c\n    56 00007C83 00                                      DB      0\n    57 00007C84                                 \n    58 00007C84 00 00 00 00 00 00 00 00 00 00           RESB    0x7dfe-$        ; 0x7dfe\u307e\u3067\u30920x00\u3067\u57cb\u3081\u308b\u547d\u4ee4\n       00007C8E 00 00 00 00 00 00 00 00 00 00 \n       00007C98 00 00 00 00 00 00 00 00 00 00 \n       00007CA2 00 00 00 00 00 00 00 00 00 00 \n       00007CAC 00 00 00 00 00 00 00 00 00 00 \n       00007CB6 00 00 00 00 00 00 00 00 00 00 \n       00007CC0 00 00 00 00 00 00 00 00 00 00 \n       00007CCA 00 00 00 00 00 00 00 00 00 00 \n       00007CD4 00 00 00 00 00 00 00 00 00 00 \n       00007CDE 00 00 00 00 00 00 00 00 00 00 \n       00007CE8 00 00 00 00 00 00 00 00 00 00 \n       00007CF2 00 00 00 00 00 00 00 00 00 00 \n       00007CFC 00 00 00 00 00 00 00 00 00 00 \n       00007D06 00 00 00 00 00 00 00 00 00 00 \n       00007D10 00 00 00 00 00 00 00 00 00 00 \n       00007D1A 00 00 00 00 00 00 00 00 00 00 \n       00007D24 00 00 00 00 00 00 00 00 00 00 \n       00007D2E 00 00 00 00 00 00 00 00 00 00 \n       00007D38 00 00 00 00 00 00 00 00 00 00 \n       00007D42 00 00 00 00 00 00 00 00 00 00 \n       00007D4C 00 00 00 00 00 00 00 00 00 00 \n       00007D56 00 00 00 00 00 00 00 00 00 00 \n       00007D60 00 00 00 00 00 00 00 00 00 00 \n       00007D6A 00 00 00 00 00 00 00 00 00 00 \n       00007D74 00 00 00 00 00 00 00 00 00 00 \n       00007D7E 00 00 00 00 00 00 00 00 00 00 \n       00007D88 00 00 00 00 00 00 00 00 00 00 \n       00007D92 00 00 00 00 00 00 00 00 00 00 \n       00007D9C 00 00 00 00 00 00 00 00 00 00 \n       00007DA6 00 00 00 00 00 00 00 00 00 00 \n       00007DB0 00 00 00 00 00 00 00 00 00 00 \n       00007DBA 00 00 00 00 00 00 00 00 00 00 \n       00007DC4 00 00 00 00 00 00 00 00 00 00 \n       00007DCE 00 00 00 00 00 00 00 00 00 00 \n       00007DD8 00 00 00 00 00 00 00 00 00 00 \n       00007DE2 00 00 00 00 00 00 00 00 00 00 \n       00007DEC 00 00 00 00 00 00 00 00 00 00 \n       00007DF6 00 00 00 00 00 00 00 00 \n    59 00007DFE                                 \n    60 00007DFE 55 AA                                   DB      0x55, 0xaa\n</code></pre>"},{"location":"%E7%AC%AC2%E5%A4%A9/#makefile","title":"Makefile\u5165\u95e8","text":"<p>Makefile\u5c31\u50cf\u662f\u4e00\u4e2a\u975e\u5e38\u806a\u660e\u7684\u6279\u5904\u7406\u6587\u4ef6\u3002</p> <pre><code># \u6587\u4ef6\u751f\u6210\u89c4\u5219\nipl.bin : ipl.nas Makefile\n    ../z_tools/nask.exe/ ipl.nas ipl.bin ipl.lst\nhelloos.img : ipl.bin Makefile\n    ../z_tools/edimg.exe imgin:/z_tools/fdimg0at.tek wbinimg scr:ipl.bin len:512 from:0 to:0 imgout:helloos.img\n</code></pre> <pre><code>REM make.bat\n..\\z_tools\\make.exe %1 %2 %3 %4 %5 %6 %7 %8 %9\n</code></pre> <pre><code>REM \u5bfb\u627e\u5236\u4f5cipl.bin\u7684\u65b9\u6cd5\nmake -r ipl.bin\n</code></pre> <pre><code>REM \u5bfb\u627e\u5236\u4f5chelloos.img\u7684\u65b9\u6cd5 \nmake -r helloos.img\n</code></pre>"},{"location":"%E7%AC%AC2%E5%A4%A9/#_6","title":"\u66f4\u7701\u4e8b\u7684\u7a8d\u95e8","text":"<pre><code># \u547d\u4ee4\n# make img\n# make -r helloos.img\nimg :\n    ../z_tools/make.exe -r helloos.img\n\nasm :\n    ../z_tools/make.exe -r ipl.bin\n\nrun :\n    ../z_tools/make.exe img\n    copy helloos.img ..\\z_tools\\qemu\\fdimage0.bin\n    ../z_tools/make.exe -C ../z_tools/qemu\n\ninstall :\n    ../z_tools/make.exe img\n    ../z_tools/imgtol.com w a:helloos.img\n</code></pre> <p>\u53ea\u9700\u8981\u8f93\u5165</p> <pre><code>make run\n</code></pre>"},{"location":"%E7%AC%AC2%E5%A4%A9/#_7","title":"\u66f4\u66f4\u7701\u4e8b\u7684\u7a8d\u95e8","text":"<p>\u5f53\u6267\u884c\u4e0d\u5e26\u53c2\u6570\u7684<code>make</code>\u65f6\uff0c\u5c31\u76f8\u5f53\u4e8e\u6267\u884c<code>make img</code></p> <pre><code>default :\n    ../z_tools/make.exe img\n\nipl.bin : ipl.nas Makefile\n    ../z_tools/nask.exe ipl.nas ipl.bin ipl.lst\n\nhelloos.img : ipl.bin Makefile\n    ../z_tools/eding.exe imgin:../z_tools/fdimg0at.tek wbinimg src:ipl.bin len:512 from:0 to:0   imgout:helloos.img\n\nasm : \n    ../z_tools/make.exe -r ipl.bin\n\nimg :\n    ../z_tools/make.exe -r helloos.img\n\nrun :\n ../z_tools/make.exe img\n copy helloos.img ..\\z_tools\\qemu\\fdimage0.bin\n ../z_tools/make.exe -C ../z_tools/qemu\n\ninstall :\n    ../z_tools/make.exe img\n    ..z_tools/imgtol.com w a: helloos.img\n\nclean : \n    -del ipl.bin\n    -del ipl.lst\n\nsrc_only :\n    ../z_tools/make.exe clean\n    -del helloos.img\n</code></pre>"},{"location":"%E7%AC%AC3%E5%A4%A9/","title":"\u7b2c3\u5929 \u8fdb\u516532\u4f4d\u6a21\u5f0f\u5e76\u5bfc\u5165C\u8bed\u8a00","text":""},{"location":"%E7%AC%AC3%E5%A4%A9/#ipl","title":"\u5236\u4f5c\u771f\u6b63\u7684IPL","text":"<p>\u8fd9\u6b21\u6211\u4eec\u5c06\u4f7f\u7528\u542f\u52a8\u533a\u88c5\u8f7d\u7a0b\u5e8f\u3002</p> ipl.nas<pre><code>; haribote-ipl\n; TAB=4\n\n    ORG    0x7c00\n    JMP    entry\n    DB     0x90\n    DB     \"HARIBOTE\"\n    DW     512\n    DB     1\n    DW     1\n    DB     2\n    DW     224\n    DW     2880\n    DB     0xf0\n    DW     9\n    DW     18\n    DW     2\n    DD     0\n    DD     2880\n    DB     0,0,0x29\n    DD     0xffffffff\n    DB     \"HARIBOTEOS \"\n    DB     \"FAT12   \"\n    RESB   18\n\nentry:\n    MOV    AX,0\n    MOV    SS,AX\n    MOV    SP,0x7c00\n    MOV    DS,AX\n\n    MOV    AX,0x0820\n    MOV    ES,AX\n    MOV    CH,0         ; \u67f1\u97620\n    MOV    DH,0         ; \u78c1\u59340\n    MOV    CL,2         ; \u6247\u533a2\n    MOV    AH,0x02      ; \u8bfb\u76d8\n    MOV    AL,1         ; 1\u4e2a\u6247\u533a\n    MOV    BX,0\n    MOV    DL,0x00      ; A\u9a71\u52a8\u5668\n    INT    0x13         ; \u8c03\u7528\u78c1\u76d8BIOS\n    JC     error\n</code></pre> <ul> <li><code>JC</code>: jump if carry\u3002\u5982\u679c\u8fdb\u4f4d\u6807\u5fd7(carry flag)\u662f1\uff0c\u5c31\u8df3\u8f6c\u3002</li> <li>\u6807\u5fd7\uff1a1\u4f4d\u5bc4\u5b58\u5668</li> </ul>"},{"location":"%E7%AC%AC3%E5%A4%A9/#int-0x13","title":"<code>INT 0x13</code>","text":"<ul> <li>\u78c1\u76d8\u8bfb\u3001\u5199\uff0c\u6247\u533a\u6821\u9a8c\uff0c\u4ee5\u53ca\u5bfb\u9053<ul> <li><code>AH=0x02</code> \u8bfb\u76d8</li> <li><code>AH=0x03</code> \u5199\u76d8</li> <li><code>AH=0x04</code> \u6821\u9a8c</li> <li><code>AH=0x0c</code> \u5bfb\u9053</li> <li><code>AL=\u5904\u7406\u5bf9\u8c61\u7684\u6247\u533a\u6570(\u53ea\u80fd\u540c\u65f6\u5904\u7406\u8fde\u7eed\u7684\u6247\u533a)</code></li> <li><code>CH=\u67f1\u9762\u53f7 &amp;0xff</code></li> <li><code>CL=\u6247\u533a\u53f7(0-5\u4f4d) | (\u67f1\u9762\u53f7&amp;0x300)**2</code></li> <li><code>DH=\u78c1\u5934\u53f7</code></li> <li><code>DL=\u9a71\u52a8\u5668\u53f7</code></li> <li><code>ES:BX=\u7f13\u51b2\u5730\u5740(\u6821\u9a8c\u53ca\u5bfb\u9053\u65f6\u4e0d\u4f7f\u7528)</code></li> <li>\u8fd4\u56de\u503c\uff1a</li> <li><code>FLAGS.CF==0</code> \u6ca1\u6709\u9519\u8bef\uff0c<code>AH==0</code></li> <li><code>FLAGS.CF==1</code> \u6709\u9519\u8bef\uff0c\u9519\u8bef\u53f7\u7801\u5b58\u5165<code>AH</code>\u5185(\u4e0e\u91cd\u7f6e\u529f\u80fd\u4e00\u6837)</li> </ul> </li> </ul> <p>1\u5f20\u8f6f\u76d8\u670980\u4e2a\u67f1\u9762\uff0c2\u4e2a\u78c1\u5934\uff0c18\u4e2a\u6247\u533a\uff0c\u4e00\u4e2a\u6247\u533a\u6709512\u5b57\u8282\u3002</p> <p>\u542b\u6709IPL\u7684\u542f\u52a8\u533a\uff0c\u4f4d\u4e8e<code>C0-H0-S1</code>(\u67f1\u97620\uff0c\u78c1\u59340\uff0c\u6247\u533a1)</p> <p>\u4e0b\u4e00\u4e2a\u6247\u533a\u662f<code>C0-H0-S2</code></p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_1","title":"\u7f13\u51b2\u5730\u5740","text":"<p>\u8fd9\u662f\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u8868\u660e\u6211\u4eec\u8981\u628a\u4ece\u8f6f\u76d8\u4e0a\u8bfb\u51fa\u7684\u6570\u636e\u88c5\u8f7d\u5230\u5185\u5b58\u4e2d\u7684\u54ea\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u5982\u679c\u80fd\u7528\u4e00\u4e2a\u5bc4\u5b58\u5668\u6765\u8868\u793a\u5185\u5b58\u5730\u5740\u7684\u8bdd\uff0c\u5f88\u65b9\u4fbf\uff0c\u4f46\u662f\u4e00\u4e2a<code>BX</code>\u53ea\u80fd\u8868\u793a<code>0~0xffff</code>(16\u4f4d)\uff0c\u4e5f\u5c31\u662f\u53ea\u6709<code>0~65535</code>\u3002</p> \\[65535 \\div 2^{10} = 63.999\\] <p>\u6700\u5927\u624d64K\u3002\u4f46\u662f\u7535\u8111\u6700\u8d77\u7801\u4e5f\u90fd\u670964M\u5185\u5b58\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_2","title":"\u6bb5\u5bc4\u5b58\u5668","text":"<p>\u6211\u4eec\u5728\u4f7f\u7528\u6bb5\u5bc4\u5b58\u5668\u65f6\uff0c\u4ee5<code>ES:BX</code>\u8fd9\u79cd\u65b9\u5f0f\u6765\u8868\u793a\u5730\u5740\uff0c\u5199\u6210 <pre><code>MOV AL,[ES:BX]\n</code></pre> \u5b83\u4ee3\u8868<code>ES*16+BX</code>\u7684\u5185\u5b58\u5730\u5740\u3002\u6211\u4eec\u53ef\u4ee5\u7406\u89e3\u6210\uff0c\u5148\u7528<code>ES</code>\u5bc4\u5b58\u5668\u6307\u5b9a\u4e00\u4e2a\u5927\u81f4\u7684\u5730\u5740\uff0c\u7136\u540e\u518d\u7528<code>BX</code>\u6765\u6307\u5b9a\u5176\u4e2d\u4e00\u4e2a\u5177\u4f53\u5730\u5740\u3002\u8fd9\u6837\u5c31\u662f\\(65535\\times 17 =1114095\u5b57\u8282=1087.983KB\\)\uff0c\u8fd9\u5c31\u53ef\u4ee5\u6307\u5b9a1M\u4ee5\u5185\u7684\u5185\u5b58\u4e86\u3002</p> <p>\u8fd9\u6b21<code>ES=0x0820, BX=0</code>\uff0c\u6240\u4ee5\u8f6f\u76d8\u7684\u6570\u636e\u5c06\u88ab\u88c5\u8f7d\u5230\u5185\u5b58\u4e2d<code>0x8200</code>\u5230<code>0x83ff</code>\u3002<code>0x8000~0x81ff</code>\uff0c\u8981\u628a\u542f\u52a8\u533a\u7684\u5185\u5bb9\u8bfb\u5230\u90a3\u91cc\u3002<code>0x7c00~0x7dff</code>\u7528\u4e8e\u542f\u52a8\u533a\uff0c<code>0x7e00~0x9fbff</code>\u6ca1\u6709\u7279\u522b\u7684\u7528\u9014\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u968f\u610f\u4f7f\u7528\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#ds","title":"\u9ed8\u8ba4\u7684\u6bb5\u5bc4\u5b58\u5668 <code>DS:</code>","text":"<pre><code>MOV  CX,[1234]\n; \u5176\u5b9e\u662f\nMOV  CX,[DS:1234]\n</code></pre> <p>\u56e0\u4e3a\u6709\u8fd9\u6837\u7684\u89c4\u5219\uff0c\u6240\u4ee5<code>DS</code>\u5fc5\u987b\u9884\u5148\u8bbe\u7f6e\u4e3a0</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#makefile","title":"\u4f7f\u7528\u53d8\u91cf\u7684Makefile","text":"<pre><code>TOOLPATH = ../z_tools/\nMAKE     = $(TOOLPATH)make.exe -r\nNASK     = $(TOOLPATH)nask.exe\nEDIMG    = $(TOOLPATH)edimg.exe\nIMGTOL   = $(TOOLPATH)imgtol.com\nCOPY     = copy\nDEL      = del\n\ndefault :\n    $(MAKE) img\n\nipl.bin : ipl.nas Makefile\n    $(NASK) ipl.nas ipl.bin ipl.lst\n\nharibote.img : ipl.bin Makefile\n    $(EDIMG) imgin:../z_tools/fdimg0at.tek wbinimg src:ipl.bin len:512 from:0 to:0 imgout:haribote.img\n\nasm : \n    $(MAKE) ipl.bin\n\nimg :\n    $(MAKE) haribote.img\n\nrun :\n    $(MAKE) img\n    $(COPY) haribote.img ..\\z_tools\\qemu\\fdimage0.bin\n    $(MAKE) -C ../z_tools/qemu\n\ninstall :\n    $(MAKE) img\n    $(IMGTOL) w a:haribote.img\n\nclean :\n    -$(DEL) ipl.bin\n    -$(DEL) ipl.lst\n\nsrc_only :\n    $(MAKE) clean\n    -$(DEL) haribote.img\n</code></pre>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_3","title":"\u8bd5\u9519","text":"<p>\u5982\u679c\u8f6f\u76d8\u4e0d\u80fd\u8bfb\u6570\u636e\uff0c\u6211\u4eec\u51b3\u5b9a\u91cd\u8bd55\u6b21\u3002</p> ipl.nas<pre><code>; haribote-ipl\n; TAB=4\n    ORG    0x7c00\n    JMP    entry\n    DB     0x90\n    DB     \"HARIBOTE\"\n    DW     512\n    DB     1\n    DW     1\n    DB     2\n    DW     224\n    DW     2880\n    DB     0xf0\n    DW     9\n    DW     18\n    DW     2\n    DD     0\n    DD     2880\n    DB     0,0,0x29\n    DD     0xffffffff\n    DB     \"HARIBOTEOS \"\n    DB     \"FAT12   \"\n    RESB   18\n\nentry:\n    MOV    AX,0\n    MOV    SS,AX\n    MOV    SP,0x7c00\n    MOV    DS,AX\n    MOV    AX,0x0820\n    MOV    ES,AX\n    MOV    CH,0        ; \u67f1\u97620\n    MOV    DH,0        ; \u78c1\u59340\n    MOV    CL,2        ; \u6247\u533a2\n    MOV    SI,0        ; \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684\u5bc4\u5b58\u5668\n\nretry:\n    MOV    AH,0x02\n    MOV    AL,1\n    MOV    BX,0\n    MOV    DL,0x00     ; A\u9a71\u52a8\u5668\n    INT    0x13        ; \u8c03\u7528\u78c1\u76d8BIOS\n    JNC    fin         ; \u6ca1\u51fa\u9519\u7684\u8bdd\u8df3\u8f6c\u5230fin \n    ADD    SI,1\n    CMP    SI,5\n    JAE    error       ; SI&gt;=5\u65f6\uff0c\u8df3\u8f6c\u5230error\n    MOV    AH,0x00\n    MOV    DL,0x00     ; A\u9a71\u52a8\u5668\n    INT    0x13        ; \u91cd\u7f6e\u9a71\u52a8\u5668\n    JMP    retry\n\nfin:\n    HLT\n    JMP    fin\n\nerror:\n    MOV    SI,msg\n\nputloop:\n    MOV    AL,[SI]\n    ADD    SI,1\n    CMP    AL,0\n    JE     fin\n    MOV    AH,0x0e\n    MOV    BX,15\n    INT    0x10\n    JMP    putloop\n\nmsg:\n    DB     0x0a,0x0a\n    DB     \"load error\"\n    DB     0x0a\n    DB     0\n    RESB   0x7dfe-$\n    DB     0x55,0xaa\n</code></pre> <ul> <li><code>JNC</code>: jump if not carry\u3002\u8fdb\u4f4d\u6807\u5fd7\u662f0\u7684\u8bdd\u5c31\u8df3\u8f6c\u3002</li> <li><code>JAE</code>: jump if above or equal\u3002\u5927\u4e8e\u6216\u7b49\u4e8e\u65f6\u8df3\u8f6c\u3002</li> <li><code>AH=0x00, DL=0x00, INT 0x13</code>\u8fd9\u662f\u7cfb\u7edf\u590d\u4f4d\u3002</li> </ul>"},{"location":"%E7%AC%AC3%E5%A4%A9/#18","title":"\u8bfb\u523018\u6247\u533a","text":"ipl.nas<pre><code>    ORG    0x7c00\n    JMP    entry\n    DB     0x90\n    DB     \"HARIBOTE\"\n    DW     512\n    DB     1\n    DW     1\n    DB     2\n    DW     224\n    DW     2880\n    DB     0xf0\n    DW     9\n    DW     28\n    DW     2\n    DD     0\n    DD     2880\n    DB     0,0,0x29\n    DD     0xffffffff\n    DB     \"HARIBOTEOS\"\n    DB     \"FAT12   \"\n    RESB   18\n\n    MOV    AX,0\n    MOV    SS,AX\n    MOV    SP,0x7c00\n    MOV    DS,AX\n\n    MOV    AX,0x0820\n    MOV    ES,AX\n    MOV    CH,0         ; \u67f1\u97620\n    MOV    DH,0         ; \u78c1\u59340\n    MOV    CL,2         ; \u6247\u533a2\n\nreadloop:\n    MOV    SI,0         ; \u8bb0\u5f55\u5931\u8d25\u6b21\u6570\u7684\u5bc4\u5b58\u5668\n\nretry:\n    MOV    AH,0x02      ; \u8bfb\u5165\u78c1\u76d8\n    MOV    AL,1         ; 1\u4e2a\u6247\u533a\n    MOV    BX,0         \n    MOV    DL,0x00      ; A\u9a71\u52a8\u5668\n    INT    0x13\n    JNC    next         ; \u6ca1\u51fa\u9519\u65f6\u8df3\u8f6c\u5230next\n    ADD    SI,1\n    CMP    SI,5\n    JAE    error        ; SI &gt;= 5\u65f6,\u8df3\u8f6c\u5230error\n    MOV    AH,0x00\n    MOV    DL,0x00      ; A\u9a71\u52a8\u5668\n    INT    0x13         ; \u91cd\u7f6e\u9a71\u52a8\u5668\n    JMP    retry\n\nnext:\n    MOV    AX,ES        ; \u628a\u5185\u5b58\u5730\u5740\u540e\u79fb0x200\n    ADD    AX,0x0020\n    MOV    ES,AX        ; \u56e0\u4e3a\u6ca1\u6709ADD ES,0x0020\u7684\u6307\u4ee4\n    ADD    CL,1\n    CMP    CL,18\n    JBE    readloop     ; \u5982\u679cCL &lt;= 18\u8df3\u8f6c\u81f3readloop\n\nfin:\n    HLT\n    JMP    fin\n\nerror:\n    MOV    SI,msg\n\nputloop:\n    MOV    AL,[SI]\n    ADD    SI,1\n    CMP    AL,0\n    JE     fin\n    MOV    AH,0x0e\n    MOV    BX,15\n    INT    0x10\n    JMP    putloop\n\nmsg:\n    DB     0x0a,0x0a\n    DB     \"load error\"\n    DB     0x0a\n    DB     0\n\n    RESB   0x7dfe-$\n\n    DB     0x55,0xaa\n</code></pre> <ul> <li><code>JBE</code>\uff1ajump if below or equal</li> </ul> <p>\u7a0b\u5e8f\u8981\u505a\u7684\u4e8b\u5f88\u7b80\u5355\uff0c\u8981\u8bfb\u4e0b\u4e00\u4e2a\u6247\u533a\uff0c\u53ea\u9700\u8981\u7ed9<code>CL</code>\u52a01\uff0c\u7ed9<code>ES</code>\u52a0\u4e0a<code>0x20</code>\u5c31\u884c\u4e86\u3002<code>CL</code>\u662f\u6247\u533a\u53f7\uff0c<code>ES</code>\u6307\u5b9a\u8bfb\u5165\u5730\u5740\u3002<code>0x20</code>\u662f\u5341\u516d\u8fdb\u5236\u4e0b512\u9664\u4ee516\u7684\u7ed3\u679c\u3002</p> <p>\u5411<code>BX</code>\u91cc\u52a0\u4e0a512\u786e\u5b9e\u66f4\u7b80\u5355\uff0c\u4f46\u8fd9\u6b21\u6211\u4eec\u60f3\u7ec3\u4e60\u5f80<code>ES</code>\u91cc\u9762\u505a\u52a0\u6cd5\u7684\u65b9\u6cd5</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#10","title":"\u8bfb\u516510\u4e2a\u67f1\u9762","text":"<p><code>C0-H0-S18</code>\u7684\u4e0b\u4e00\u6247\u533a\uff0c\u662f\u78c1\u76d8\u53cd\u9762\u7684<code>C0-H1-S1</code>\uff0c\u8fd9\u6b21\u4e5f\u4ece<code>0xa400</code>\u8bfb\u5165\uff0c\u6309\u987a\u5e8f\u8bfb\u5230<code>C0-H1-S18</code>\u540e\uff0c\u63a5\u7740\u8bfb\u4e0b\u4e00\u4e2a\u67f1\u9762<code>C1-H0-S1</code>\uff0c\u4fdd\u6301\u8fd9\u4e2a\u52bf\u5934\uff0c\u4e00\u76f4\u8bfb\u5230<code>C9-H1-S18</code>\u5c31\u597d\u4e86\u3002</p> ipl.nas<pre><code>CYLS    EQU    10\n        ORG    0x7c00\n\n        JMP    entry\n        DB     0x90\n        DB     \"HARIBOTE\"\n        DW     512\n        DB     1\n        DW     1\n        DB     2\n        DW     224\n        DW     2880\n        DB     0xf0\n        DW     9\n        DW     18\n        DW     2\n        DD     0\n        DD     2880\n        DB     0,0,0x29\n        DD     0xffffffff\n        DB     \"HARIBOTEOS \"\n        DB     \"FAT12   \"\n        RESB   \"18\"\n\nentry:\n        MOV    AX,0\n        MOV    SS,AX\n        MOV    SP,0x7c00\n        MOV    DS,AX\n        MOV    AX,0x0820\n        MOV    ES,AX\n        MOV    CH,0\n        MOV    DH,0\n        MOV    CL,2\n\nreadloop:\n        MOV    SI,0\n\nretry:\n        MOV    AH,0x02\n        MOV    AL,1\n        MOV    BX,0\n        MOV    DL,0x00\n        INT    0x13\n        JNC    next\n        ADD    SI,1\n        CMP    SI,5\n        JAE    error\n        MOV    AH,0x00\n        MOV    DL,0x00\n        INT    0x13\n        JMP    retry\n\nnext:\n        MOV    AX,ES\n        ADD    AX,0x0020\n        MOV    ES,AX\n        ADD    CL,1\n        CMP    CL,18\n        JBE    readloop\n        MOV    CL,1\n        ADD    DH,1\n        CMP    DH,2\n        JB     readloop\n        MOV    DH,0\n        ADD    CH,1\n        CMP    CH,CYLS\n        JB     readloop\n\nfin:\n        HLT\n        JMP    fin\n\nerror:\n        MOV    SI,msg\n\nputloop:\n        MOV    AL,[SI]\n        ADD    SI,1\n        CMP    AL,0\n        JE     fin\n        MOV    AH,0x0e\n        MOV    BX,15\n        INT    0x10\n        JMP    putloop\n\nmsg:\n        DB     0x0a,0x0a\n        DB     \"load error\"\n        DB     0x0a\n        DB     0\n        RESB   0x7dfe-$\n        DB     0x55,0xaa\n</code></pre> <ul> <li><code>EQU</code>\uff1a\u76f8\u5f53\u4e8eC\u8bed\u8a00\u4e2d\u7684define\u3002<code>EQU</code>\u7684\u610f\u601d\u662fequal</li> </ul>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_4","title":"\u7740\u624b\u5f00\u53d1\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u6211\u4eec\u5148\u6765\u7f16\u5199\u4e00\u4e2a\u975e\u5e38\u77ed\u5c0f\u7684\u7a0b\u5e8f\uff0c\u5c31\u53ea\u8ba9\u5b83<code>HLT</code>\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_5","title":"\u6700\u7b80\u5355\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"haribote.nas<pre><code>fin:\n    HLT\n    JMP    fin\n</code></pre> <p>\u7528nask\u7f16\u8bd1\u8f93\u51fa\u4e3a<code>haribote.sys</code>\u3002\u63a5\u4e0b\u6765\uff0c\u5c06\u8fd9\u4e2a\u6587\u4ef6\u4fdd\u5b58\u5230\u78c1\u76d8\u6620\u50cf<code>haribote.img</code>\u91cc\u3002</p> <p>\u64cd\u4f5c\uff1a</p> <ul> <li>\u4f7f\u7528<code>make install</code>\u547d\u4ee4\uff0c\u5c06\u78c1\u76d8\u6620\u50cf\u6587\u4ef6\u5199\u5165\u78c1\u76d8</li> <li>\u5728Windows\u91cc\u6253\u5f00\u90a3\u4e2a\u78c1\u76d8\uff0c\u628a<code>haribote.sys</code>\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a</li> <li>\u4f7f\u7528\u5de5\u5177\u5c06\u78c1\u76d8\u5907\u4efd\u4e3a\u78c1\u76d8\u6620\u50cf</li> </ul> <p>\u6211\u4eec\u518d\u6765\u60f3\u60f3\u4e00\u4e0b\uff0c\u5982\u679c\u4e0d\u7528\u501f\u52a9\u78c1\u76d8\u548cWindows\u5c31\u53ef\u4ee5\u5f97\u5230\u78c1\u76d8\u6620\u50cf\u548c\u6587\u4ef6\uff0c\u90a3\u591a\u65b9\u4fbf\u554a\ud83d\ude0d\u3002</p> <p>\u80fd\u591f\u505a\u5230\u8fd9\u4e2a\u7684\u5de5\u5177\u6709\u5f88\u591a\uff0c<code>edimg.exe</code>\u5c31\u662f\u5176\u4e2d\u4e00\u4e2a\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#haribotesys","title":"<code>haribote.sys</code>","text":"makefile<pre><code>TOOLPATH = ../z_tools/\nMAKE     = $(TOOLPATH)make.exe -r\nNASK     = $(TOOLPATH)nask.exe\nEDIMG    = $(TOOLPATH)edimg.exe\nIMGTOL   = $(TOOLPATH)imgtol.com\nCOPY     = copy\nDEL      = del\n\ndefault :\n    $(MAKE) img\n\nipl.bin : ipl.nas Makefile\n    $(NASK) ipl.nas ipl.bin ipl.lst\n\nharibote.sys : haribote.nas Makefile\n    $(NASK) haribote.nas haribote.sys haribote.lst\n\nharibote.img : ipl.bin harbote.sys Makefile\n    $(EDIMG) imgin:../z_tools/fdimg0at.tek wbinimg src:ipl.bin len:512 from:0 to:0 copy from:haribote.sys to:@: imgout:haribote.img\n\nimg :\n    $(MAKE) haribote.img\n\nrun :\n    $(MAKE) img\n    $(COPY) haribote.img ..\\z_tools\\qemu\\fdimage0.bin\n    $(MAKE) -C ../z_tools/qemu\n\ninstall :\n    $(MAKE) img\n    $(IMGTOL) w a: haribote.img\n\nclean :\n    -$(DEL) ipl.bin\n    -$(DEL) ipl.lst\n    -$(DEL) haribote.sys\n    -$(DEL) haribote.lst\n\nsrc_only :\n    $(MAKE) clean\n    -$(DEL) haribote.img\n</code></pre>"},{"location":"%E7%AC%AC3%E5%A4%A9/#hariboteimg","title":"<code>haribote.img</code>","text":"<p>\u7528\u4e8c\u8fdb\u5236\u7f16\u8bd1\u5668\u6253\u5f00\u521a\u505a\u6210\u7684\u6620\u50cf\u6587\u4ef6<code>haribote.img</code>\uff0c\u770b\u4e00\u770b<code>haribote.sys</code>\u6587\u4ef6\u5728\u78c1\u76d8\u4e2d\u662f\u4ec0\u4e48\u6837\u7684\u3002</p> <p>\u6700\u5148\u6ce8\u610f\u5230\u7684\u5730\u65b9\u662f<code>0x002600</code>\u9644\u8fd1\uff0c\u78c1\u76d8\u7684\u8fd9\u4e2a\u4f4d\u7f6e\u597d\u50cf\u4fdd\u5b58\u7740\u6587\u4ef6\u540d\u3002</p> <p></p> <p>\u518d\u5f80\u4e0b\u770b\uff0c<code>0x004200</code>\u9644\u8fd1\uff0c\u53ef\u4ee5\u770b\u5230<code>F4 EB FD</code>\u3002</p> <p></p> <p>\u8fd9\u5c31\u662f<code>haribote.sys</code>\u7684\u5185\u5bb9\u3002</p> <p></p> <p>\u603b\u7ed3\uff1a</p> <ol> <li>\u6587\u4ef6\u540d\u4f1a\u5199\u5728<code>0x002600</code>\u4ee5\u540e\u7684\u5730\u65b9</li> <li>\u6587\u4ef6\u7684\u5185\u5bb9\u4f1a\u5199\u5728<code>0x004200</code>\u4ee5\u540e\u7684\u5730\u65b9</li> </ol>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_6","title":"\u4ece\u542f\u52a8\u533a\u6267\u884c\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u8981\u600e\u6837\u624d\u80fd\u6267\u884c\u78c1\u76d8\u6620\u50cf\u4e0a\u4f4d\u4e8e<code>0x4200</code>\u7684\u7a0b\u5e8f\ud83e\udd14\uff1f</p> <p>\u73b0\u5728\u7684\u7a0b\u5e8f\u662f\u4ece\u542f\u52a8\u533a\u5f00\u59cb\uff0c\u628a\u78c1\u76d8\u4e0a\u7684\u5185\u5bb9\u88c5\u8f7d\u5230\u5185\u5b58<code>0x8000</code>\u53f7\u5730\u5740\uff0c\u6240\u4ee5\u78c1\u76d8<code>0x4200</code>\u5904\u7684\u5185\u5bb9\u5c31\u5e94\u8be5\u4f4d\u4e8e<code>0x8000 + 0x4200 = 0xc200</code>\u53f7\u5730\u5740\u3002</p> <p>\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u5c31\u5f80<code>haribote.nas</code>\u91cc\u52a0\u4e0a<code>ORG 0xc200</code>\uff0c\u7136\u540e\u5728<code>ipl.nas</code>\u5904\u7406\u7684\u6700\u540e\u52a0\u4e0a<code>JMP 0xc200</code>\u3002</p> ipl.nas<pre><code>CYLS    EQU    10\n        ORG    0x7c00\n\n        JMP    entry\n        DB     0x90\n        DB     \"HARIBOTE\"\n        DW     512\n        DB     1\n        DW     1\n        DB     2\n        DW     224\n        DW     2880\n        DB     0xf0\n        DW     9\n        DW     18\n        DW     2\n        DD     0\n        DD     2880\n        DB     0,0,0x29\n        DD     0xffffffff\n        DB     \"HARIBOTEOS \"\n        DB     \"FAT12   \"\n        RESB   \"18\"\n\nentry:\n        MOV    AX,0\n        MOV    SS,AX\n        MOV    SP,0x7c00\n        MOV    DS,AX\n        MOV    AX,0x0820\n        MOV    ES,AX\n        MOV    CH,0\n        MOV    DH,0\n        MOV    CL,2\n\nreadloop:\n        MOV    SI,0\n\nretry:\n        MOV    AH,0x02\n        MOV    AL,1\n        MOV    BX,0\n        MOV    DL,0x00\n        INT    0x13\n        JNC    next\n        ADD    SI,1\n        CMP    SI,5\n        JAE    error\n        MOV    AH,0x00\n        MOV    DL,0x00\n        INT    0x13\n        JMP    retry\n\nnext:\n        MOV    AX,ES\n        ADD    AX,0x0020\n        MOV    ES,AX\n        ADD    CL,1\n        CMP    CL,18\n        JBE    readloop\n        MOV    CL,1\n        ADD    DH,1\n        CMP    DH,2\n        JB     readloop\n        MOV    DH,0\n        ADD    CH,1\n        CMP    CH,CYLS\n        JB     readloop\n\n        JMP    0xc200\n\nerror:\n        MOV    SI,msg\n\nputloop:\n        MOV    AL,[SI]\n        ADD    SI,1\n        CMP    AL,0\n        JE     fin\n        MOV    AH,0x0e\n        MOV    BX,15\n        INT    0x10\n        JMP    putloop\n\nfin:\n        HLT\n        JMP    fin\n\nmsg:\n        DB     0x0a,0x0a\n        DB     \"load error\"\n        DB     0x0a\n        DB     0\n        RESB   0x7dfe-$\n        DB     0x55,0xaa\n</code></pre> haribote.nas<pre><code>    ORG    0xc200\n\nfin:\n    HLT\n    JMP    fin\n</code></pre>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_7","title":"\u786e\u8ba4\u64cd\u4f5c\u7cfb\u7edf\u7684\u6267\u884c\u60c5\u51b5","text":"<p>\u8003\u8651\u5230\u5c06\u6765\u6211\u4eec\u80af\u5b9a\u8981\u505a\u6210Windows\u90a3\u6837\u7684\u753b\u9762\uff0c\u6240\u4ee5\u8fd9\u6b21\u5c31\u6765\u5207\u6362\u4e00\u4e0b\u753b\u9762\u6a21\u5f0f\u3002</p> haribote.nas<pre><code>    ORG    0xc200\n    MOV    AL,0x13       ; VGA\u663e\u5361\uff0c320x200x8\u4f4d\u5f69\u8272\n    MOV    AH,0x00\n    INT    0x10\n\nfin:\n    HLT\n    JMP    fin\n</code></pre> <p>\u8bbe\u5b9a<code>AH=0x00</code>\u540e\uff0c\u8c03\u7528\u663e\u5361BIOS\u7684\u51fd\u6570\uff0c\u90fd\u8fd9\u6837\u5c31\u53ef\u4ee5\u5207\u6362\u663e\u793a\u6a21\u5f0f\u4e86\u3002</p> <p></p> <p>\u53e6\u5916\uff0c\u60f3\u8981\u628a\u78c1\u76d8\u88c5\u8f7d\u5185\u5bb9\u7684\u7ed3\u675f\u5730\u5740\u544a\u8bc9\u7ed9<code>haribote.sys</code>\uff0c\u6240\u4ee5\u5728<code>JMP 0xc200</code>\u4e4b\u524d\uff0c\u6211\u4eec\u5c06<code>CYLS</code>\u7684\u503c\u5199\u5230\u5185\u5b58\u5730\u5740<code>0x0ff0</code>\u4e2d\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#32","title":"32\u4f4d\u6a21\u5f0f\u524d\u671f\u51c6\u5907","text":"<p>16\u4f4d\u6a21\u5f0f\u548c32\u4f4d\u6a21\u5f0f\u4e2d\uff0c\u673a\u5668\u8bed\u8a00\u7684\u547d\u4ee4\u4ee3\u7801\u4e0d\u4e00\u6837\u3002\u540c\u6837\u7684\u673a\u5668\u8bed\u8a00\uff0c\u89e3\u91ca\u7684\u65b9\u6cd5\u4e0d\u4e00\u6837\uff0c\u6240\u4ee516\u4f4d\u6a21\u5f0f\u7684\u673a\u5668\u8bed\u8a00\u572832\u4f4d\u6a21\u5f0f\u4e0b\u4e0d\u80fd\u8fd0\u884c\uff0c\u53cd\u4e4b\u4ea6\u7136\ud83d\ude2d\u3002</p> <p>\u7531\u4e8eBIOS\u662f\u752816\u4f4d\u673a\u5668\u8bed\u8a00\u5199\u7684\u3002\u5982\u679c\u6211\u4eec\u6709\u4ec0\u4e48\u4e8b\u60c5\u60f3\u7528BIOS\u505a\uff0c\u90a3\u5c31\u5168\u90e8\u653e\u5728\u5f00\u5934\uff0c\u56e0\u4e3a\u4e00\u65e6\u8fdb\u516532\u4f4d\u6a21\u5f0f\u5c31\u4e0d\u80fd\u8c03\u7528BIOS\u51fd\u6570\u4e86\u3002</p> <p>\u63a5\u4e0b\u6765\u8fd8\u60f3\u4eceBIOS\u5f97\u5230\u952e\u76d8\u72b6\u6001\u3002</p> haribote.nas<pre><code>; \u6709\u5173BOOT_INFO\nCYLS    EQU    0x0ff0    ; \u8bbe\u5b9a\u542f\u52a8\u533a\nLEDS    EQU    0x0ff1    \nVMODE   EQU    0x0ff2    ; \u989c\u8272\u7684\u4f4d\u6570\nSCRNX   EQU    0x0ff4    ; \u5206\u8fa8\u7387\u7684X\nSCRNX   EQU    0x0ff6    ; \u5206\u8fa8\u7387\u7684Y\nVRAM    EQU    0x0ff8    ; \u56fe\u50cf\u7f13\u51b2\u533a\u7684\u5f00\u59cb\u5730\u5740\n\n        ORG    0xc200\n        MOV    AL,0x13   ; VGA\u663e\u5361...\n        MOV    AH,0x00\n        INT    0x10\n        MOV    BYTE  [VMODE],8\n        MOV    WORD  [SCRNX],320\n        MOV    WORD  [SCRNY],200\n        MOV    DWORD [VRAM], 0x000a0000\n\n; \u7528BIOS\u53d6\u5f97\u952e\u76d8\u4e0a\u5404\u79cdLED\u6307\u793a\u706f\u7684\u72b6\u6001\u3002\n        MOV    AH,0x02\n        INT    0x16      ; keyboard BIOS\n        MOV    [LEDS],AL\n\nfin:\n        HLT\n        JMP    fin\n</code></pre> <p>\u8bbe\u7f6e\u753b\u9762\u6a21\u5f0f\u4e4b\u540e\uff0c\u8fd8\u628a\u753b\u9762\u6a21\u5f0f\u7684\u4fe1\u606f\u4fdd\u5b58\u5728\u4e86\u5185\u5b58\u91cc\u3002\u4ee5\u540e\u6211\u4eec\u53ef\u80fd\u8981\u652f\u6301\u5404\u79cd\u4e0d\u540c\u7684\u753b\u9762\u6a21\u5f0f\uff0c\u8fd9\u5c31\u9700\u8981\u628a\u73b0\u5728\u7684\u8bbe\u7f6e\u4fe1\u606f\u4fdd\u5b58\u8d77\u6765\u4ee5\u5907\u540e\u7528\u3002</p> <p>\u6211\u4eec\u6682\u4e14\u5c06\u542f\u52a8\u65f6\u7684\u4fe1\u606f\u79f0\u4e3aBOOT_INFO\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#vram","title":"<code>VRAM</code>","text":"<p><code>VRAM</code>\u6307\u7684\u662f\u663e\u5361\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u7528\u6765\u663e\u793a\u753b\u9762\u7684\u5185\u5b58\u3002\u5b83\u7684\u5404\u4e2a\u5730\u5740\u90fd\u5bf9\u5e94\u7740\u753b\u9762\u4e0a\u7684\u50cf\u7d20\u3002</p> <p><code>VRAM</code>\u5206\u5e03\u5728\u5185\u5b58\u5206\u5e03\u56fe\u4e0a\u597d\u51e0\u4e2a\u4e0d\u540c\u7684\u5730\u65b9\u3002\u8fd9\u662f\u56e0\u4e3ai\uff0c\u4e0d\u540c\u753b\u9762\u6a21\u5f0f\u7684\u50cf\u7d20\u6570\u4e5f\u4e0d\u4e00\u6837\u3002</p> <p>\u5728<code>INT 0x10</code>\u753b\u9762\u6a21\u5f0f\u4e0b\uff0c<code>VRAM</code>\u662f<code>0xa0000~0xaffff</code>\u768464KB\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#c","title":"\u5f00\u59cb\u5bfc\u5165C\u8bed\u8a00","text":"<p>\u7ec8\u4e8e\u51c6\u5907\u5c31\u7eea\uff0c\u73b0\u5728\u6211\u4eec\u76f4\u63a5\u5207\u6362\u5230C\u8bed\u8a00\u3002</p> <p><code>haribote.sys</code>\u6539\u540d\u4e3a<code>asmhead.nas</code>\uff0c\u5e76\u4e14\uff0c\u4e3a\u4e86\u8c03\u7528C\u8bed\u8a00\u5199\u7684\u7a0b\u5e8f\uff0c\u6dfb\u52a0\u4e86\u6c47\u7f16\u4ee3\u7801\u3002</p> asmhead.nas<pre><code>\n</code></pre> bootpack.c<pre><code>void HariMain(void)\n{\nfin:\n    goto fin;\n    //\u8fd9\u91cc\u60f3\u5199\u4e0aHLT\uff0c\u4f46C\u8bed\u8a00\u4e0d\u80fd\u7528HLT\n}\n</code></pre> <p><code>goto</code>\u76f8\u5f53\u4e8e\u6c47\u7f16\u8bed\u8a00\u4e2d\u7684<code>JMP</code>\uff0c\u5b9e\u9645\u4e0a\u4e5f\u662f\u88ab\u7ffb\u8bd1\u6210<code>JMP</code>\u6307\u4ee4\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#c_1","title":"C\u8bed\u8a00\u600e\u6837\u53d8\u6210\u673a\u5668\u8bed\u8a00","text":"<p>\u90a3\u4e48\u8fd9\u4e2a<code>bootpack.c</code>\u662f\u600e\u6837\u53d8\u6210\u673a\u5668\u8bed\u8a00\u7684\u5462\ud83e\udd14\uff1f</p> <ol> <li>\u4f7f\u7528<code>cc1.exe</code>\u4ece<code>bootpack.c</code>\u751f\u6210<code>bootpack.gas</code></li> <li>\u4f7f\u7528<code>gas2nask.exe</code>\u4ece<code>bootpack.exe</code>\u751f\u6210<code>bootpack.nas</code></li> <li>\u4f7f\u7528<code>nask.exe</code>\u4ece<code>bootpack.exe</code>\u751f\u6210<code>bootpack.obj</code></li> <li>\u4f7f\u7528<code>obi2bim.exe</code>\u4ece<code>bootpack.exe</code>\u751f\u6210<code>bootpack.bim</code></li> <li>\u4f7f\u7528<code>bim2hrb.exe</code>\u4ece<code>bootpack.bin</code>\u751f\u6210<code>bootpack.hrb</code></li> </ol> <p><code>cc1</code>\u7531<code>gcc</code>\u6539\u9020\u800c\u6765\uff0c<code>gcc</code>\u4ee5<code>gas</code>\u6c47\u7f16\u8bed\u8a00\u4e3a\u57fa\u7840\uff0c\u4e0d\u80fd\u7ffb\u8bd1\u6210<code>nask</code>\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u628a<code>gas</code>\u53d8\u6362\u6210<code>nask</code>\u80fd\u7ffb\u8bd1\u7684\u8bed\u6cd5\uff0c\u8fd9\u5c31\u662f<code>gas2nask.exe</code>\u3002</p> <p>\u4e00\u65e6\u8f6c\u6362\u6210<code>nas</code>\u6587\u4ef6\uff0c\u53ea\u8981\u7528<code>nask</code>\u7ffb\u8bd1\u4e00\u4e0b\uff0c\u5c31\u80fd\u53d8\u6210\u673a\u5668\u8bed\u8a00\u4e86\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_8","title":"\u76ee\u6807\u6587\u4ef6","text":"<p>\u9996\u5148\u7528<code>nask</code>\u5236\u4f5c<code>obj</code>\u6587\u4ef6\uff0c\u53c8\u79f0\u4e3a\u76ee\u6807\u6587\u4ef6\u3002\u56e0\u4e3a\u6211\u4eec\u7684\u7a0b\u5e8f\u662fC\u8bed\u8a00\u5199\u7684\uff0c\u76ee\u6807\u662f\u673a\u5668\u8bed\u8a00\u3002</p> <p>\u76ee\u6807\u6587\u4ef6\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u673a\u5668\u8bed\u8a00\u6587\u4ef6\uff0c\u5fc5\u987b\u4e0e\u5176\u4ed6\u6587\u4ef6\u94fe\u63a5\u540e\u624d\u80fd\u53d8\u6210\u771f\u6b63\u53ef\u4ee5\u6267\u884c\u7684\u673a\u5668\u8bed\u8a00\u3002</p> <p>C\u8bed\u8a00\u6709\u5b83\u7684\u5c40\u9650\u6027\uff0c\u4e0d\u53ef\u80fd\u53ea\u7528C\u8bed\u8a00\u6765\u7f16\u5199\u6240\u6709\u7684\u7a0b\u5e8f\uff0c\u5176\u4e2d\u6709\u4e00\u90e8\u5206\u5fc5\u987b\u7528\u6c47\u7f16\u8bed\u8a00\u6765\u5199\uff0c\u7136\u540e\u94fe\u63a5\u5230C\u8bed\u8a00\u5199\u7684\u7a0b\u5e8f\u4e0a\u3002\u8fd9\u4e5f\u662fC\u8bed\u8a00\u7684\u4e0d\u4fbf\u4e4b\u5904\u2014\u2014\u4e0d\u80fd\u76f4\u63a5\u628a\u5b83\u5199\u8fdb\u6620\u50cf\u6587\u4ef6\u3002</p> <p>\u5355\u4e2a\u7684\u76ee\u6807\u6587\u4ef6\u8fd8\u4e0d\u662f\u72ec\u7acb\u7684\u673a\u5668\u8bed\u8a00\uff0c\u5176\u4e2d\u8fd8\u6709\u4e00\u90e8\u5206\u662f\u6ca1\u5b8c\u6210\u7684\u3002\u4e3a\u4e86\u80fd\u505a\u6210\u5b8c\u6574\u7684\u673a\u5668\u8bed\u8a00\uff0c\u5fc5\u987b\u5c06\u5fc5\u8981\u7684\u76ee\u6807\u6587\u4ef6\u5168\u90e8\u94fe\u63a5\u4e0a\u3002\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u7684\u662f<code>obj2bim</code>\u3002</p> <p><code>bim</code>\u662f\u4f5c\u8005\u81ea\u521b\u7684\u4e00\u79cd\u6587\u4ef6\u683c\u5f0f\uff0c\u610f\u601d\u4e3a<code>binary image</code>\uff0c\u5b83\u662f\u4e00\u79cd\u4e8c\u8fdb\u5236\u6620\u50cf\u6587\u4ef6\u3002</p>"},{"location":"%E7%AC%AC3%E5%A4%A9/#_9","title":"\u6620\u50cf\u6587\u4ef6","text":"<p>\u78c1\u76d8\u6620\u50cf\u4e5f\u662f\u4e00\u79cd\u6620\u50cf\u6587\u4ef6\u3002\u6240\u8c13\u6620\u50cf\u6587\u5373\u4e0d\u662f\u6587\u4ef6\u672c\u6765\u7684\u72b6\u6001\uff0c\u800c\u662f\u4e00\u79cd\u66ff\u4ee3\u5f62\u5f0f\u3002</p> <p>\u6240\u4ee5\uff0c\u5b9e\u9645\u4e0a<code>bim</code>\u6587\u4ef6\u4e5f\u4e0d\u662f\u5b8c\u6210\u54c1\uff0c\u5b83\u53ea\u662f\u5c06\u5404\u4e2a\u90e8\u5206\u5168\u90e8\u90fd\u94fe\u63a5\u5728\u4eea\u5668\uff0c\u505a\u6210\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u673a\u5668\u8bed\u8a00\u6587\u4ef6\u3002</p> <p>\u800c\u4e3a\u4e86\u80fd\u5b9e\u9645\u4f7f\u7528\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u9488\u5bf9\u6bcf\u4e00\u4e2a\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8981\u6c42\u8fdb\u884c\u5fc5\u8981\u7684\u52a0\u5de5\u3002\u5fc5\u987b\u52a0\u4e0a\u8bc6\u522b\u7528\u7684\u6587\u4ef6\u5934\uff0c\u6216\u8005\u538b\u7f29\u7b49\u3002</p> <p>\u8fd9\u6837\u505a\u7684\u597d\u5904\u5c31\u662f\u4ec5\u9760\u8fd9\u4e2a\u7f16\u8bd1\u5668\uff0c\u5c31\u53ef\u4ee5\u5236\u4f5cWindows\u3001Linux\u3001OSASK\u3001haribote\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> Makefile<pre><code>TOOLPATH = ../z_tools/\nINCPATH  = ../z_tools/haribote/\n\nMAKE     = $(TOOLPATH)make.exe -r\nNASK     = $(TOOLPATH)nask.exe\nCC1      = $(TOOLPATH)cc1.exe -I $(INCPATH) -Os -Wall -quiet\nGAS2NASK = $(TOOLPATH)gas2nask.exe -a\nOBJ2BIM  = $(TOOLPATH)obj2bim.exe\nBIM2HRB  = $(TOOLPATH)bim2hrb.exe\nRULEFILE = $(TOOLPATH)haribote/haribote.rul\nEDIMG    = $(TOOLPATH)edimg.exe\nIMGTOL   = $(TOOLPATH)imgtol.com\nCOPY     = copy\nDEL      = del\n\ndefault :\n    $(MAKE) img\n\nipl10.bin : ipl10.nas Makefile\n    $(NASK) ipl10.nas ipl10.bin ipl10.lst\n\nasmhead.bin : asmhead.nas Makefifle\n    $(NASK) asmhead.nas asmhead.bin asmhead.lst\n\nbootpack.gas : bootpack.c Makefile\n    $(CC1) -o bootpack.gas bootpack.c\n\nbootpack.nas : bootpack.gas Makefile\n    $(GAS2NASK) bootpack.gas bootpack.nas\n\nbootpack.obj : bootpack.nas Makefile\n    $(NASK) bootpack.nas bootpack.obj bootpack.lst\n\nbootpack.bim : bootpack.obj Makefile\n    $(OBJ2BIM) @$(RULEFILE) out:bootpack.bim stack:3136k map:bootpack.map bootpack.obj\n# 3MB+64KB=3136KB\n\nbootpack.hrb : bootpack.bim Makefile\n    $(BIM2HRB) bootpack.bim bootpack.hrb 0\n\nharibote.sys : asmhead.bin bootpack.hrb Makefile\n    copy /B asmhead.bin+bootpack.hrb haribote.sys\n\nharibote.img : ipl10.bin haribote.sys Makefile\n    $(EDIMG) imgin:../z_tools/fdimg0at.tek wbinimg src:ipl10.bin len512 from:0 to:0 copy from:haribote.sys to:@: imgout:haribote.img\n\nimg :\n    $(MAKE) haribote.img\n\nrun :\n    $(MAKE) img\n    $(COPY) haribote.img ..\\z_tools\\qemu\\fdimage0.bin\n    $(MAKE) -C ../z_tools/qemu\n\ninstall :\n    $(MAKE) img\n    $(IMGTOL) w a: haribote.img\n\nclean :\n    -$(DEL) *.bin\n    -$(DEL) *.lst\n    -$(DEL) *.gas\n    -$(DEL) *.obj\n    -$(DEL) bootpack.nas\n    -$(DEL) bootpack.map\n    -$(DEL) bootpack.bim\n    -$(DEL) bootpack.harb\n    -$(DEL) haribote.sys\n\nsrc_only :\n    $(MAKE) clean\n    -$(DEL) haribote.img\n</code></pre>"},{"location":"%E7%AC%AC3%E5%A4%A9/#hlt","title":"\u5b9e\u73b0<code>HLT</code>","text":"naskfunc.nas<pre><code>[FORMAT \"WCOFF\"]       ; \u5236\u4f5c\u76ee\u6807\u6587\u4ef6\u7684\u6a21\u5f0f\n[BITS 32]              ; \u5236\u4f5c32\u4f4d\u6a21\u5f0f\u7528\u7684\u673a\u68b0\u8bed\u8a00\n\n; \u5236\u4f5c\u76ee\u6807\u6587\u4ef6\u7684\u4fe1\u606f\n[FILE \"naskfunc.nas\"]  ; \u6e90\u6587\u4ef6\u540d\u4fe1\u606f\n\n    GLOBAL _io_HLY     ; \u7a0b\u5e8f\u4e2d\u5305\u542b\u7684\u51fd\u6570\u540d\n\n; \u4ee5\u4e0b\u662f\u5b9e\u9645\u7684\u51fd\u6570\n[SECTION .text]        ; \u76ee\u6807\u6587\u4ef6\u4e2d\u5199\u4e86\u8fd9\u4e9b\u4e4b\u540e\u518d\u5199\u7a0b\u5e8f\n\n_io_hlt:               ; void io_hlt(void)\n    HLT\n    RET\n</code></pre> <p>\u7528\u6c47\u7f16\u5199\u7684\u51fd\u6570\uff0c\u4e4b\u540e\u8fd8\u8981\u4e0e<code>bootpack.obj</code>\u94fe\u63a5\uff0c\u6240\u4ee5\u4e5f\u9700\u8981\u7f16\u8bd1\u6210\u76ee\u6807\u6587\u4ef6\uff0c\u56e0\u6b64\u5c06\u8f93\u51fa\u683c\u5f0f\u8bbe\u5b9a\u4e3a<code>WCOFF</code>\u6a21\u5f0f\u3002</p> <p><code>RET</code>\u6307\u4ee4\u76f8\u5f53\u4e8eC\u8bed\u8a00\u7684<code>return</code>\u3002</p> bootpack.c<pre><code>void io_hlt(void);\n\nvoid HariMain(void)\n{\n\nfin: \n    io_hlt();\n    goto fin;\n}\n</code></pre>"},{"location":"%E7%AC%AC4%E5%A4%A9/","title":"\u7b2c4\u5929 C\u8bed\u8a00\u4e0e\u753b\u9762\u663e\u793a\u7684\u7ec3\u4e60","text":""},{"location":"%E7%AC%AC4%E5%A4%A9/#c","title":"\u7528C\u8bed\u8a00\u5b9e\u73b0\u5185\u5b58\u5199\u5165","text":"<p>\u60f3\u8981\u753b\u4e1c\u897f\u7684\u8bdd\uff0c\u53ea\u8981\u5f80<code>VRAN</code>\u91cc\u5199\u70b9\u4ec0\u4e48\u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\u5728C\u8bed\u8a00\u4e2d\u53c8\u6ca1\u6709\u76f4\u63a5\u5199\u5165\u6307\u5b9a\u5185\u5b58\u5730\u5740\u7684\u8bed\u53e5\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u5e72\u8106\u5c31\u521b\u5efa\u4e00\u4e2a\u6709\u8fd9\u79cd\u529f\u80fd\u7684\u51fd\u6570\u3002</p> naskfunc.nas<pre><code>[FORMAT \"WCOFF\"]\n[INSTRSET \"i486p\"]         ; \u8fd9\u4e2a\u7a0b\u5e8f\u662f\u7ed9486CPU\u7528\u7684\n[BITS 32]\n[FILE \"naskfun.nas\"]\n\n    GLOBAL _io_hlt,_write_mem8\n\n[section .text]\n\n_io_hlt:\n    HLT\n    RET\n\n_write_mem8:\n    MOV    ECX,[ESP+4]     ; [ESP+4]\u4e2d\u5b58\u653e\u7684\u662f\u5730\u5740\uff0c\u5c06\u5176\u8bfb\u5165ECX\n    MOV    AL,[ESP+8]      ; [ESP+8]\u4e2d\u5b58\u653e\u7684\u662f\u6570\u636e\uff0c\u5c06\u5176\u8bfb\u5165ALL\n    MOV    [ECX],AL\n    RET\n</code></pre> <p>\u6570\u5b57\u7684\u5b58\u653e\u5730\u5740\uff1a<code>[ESP+4]</code>, <code>[ESP+8]</code>, <code>[ESP+12]</code>...</p> <p>\u5982\u679c\u4e0eC\u8bed\u8a00\u8054\u5408\u4f7f\u7528\u7684\u8bdd\uff0c\u80fd\u81ea\u7531\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\u53ea\u6709<code>EAX</code>, <code>ECX</code>\uff0c<code>EDX</code>\u3002\u5176\u4ed6\u5bc4\u5b58\u5668\u53ea\u80fd\u4f7f\u7528\u5176\u503c\uff0c\u4e0d\u80fd\u6539\u53d8\u5176\u503c</p> bootpack.c<pre><code>void io_hlt(void);\nvoid write_mem8(int addr, int data);\n\nvoid HariMain(void)\n{\n    int i;\n    for (i = 0xa0000; i &lt;= 0xaffff; i++)\n    {\n        write_mem8(i,15);   \n    }\n\n    for(;;)\n    {\n        io_hlt();   \n    }\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_1","title":"\u6761\u7eb9\u56fe\u6848","text":"bootpack.c<pre><code>void io_hlt(void);\nvoid write_mem8(int addr, int data);\n\nvoid HariMain(void)\n{\n    int i;\n    for (i = 0xa0000; i &lt;= 0xaffff; i++)\n    {\n        write_mem8(i, i &amp; 0x0f);\n    }\n\n    for (;;)\n    {\n        io_hlt();   \n    }\n}\n</code></pre> <ul> <li><code>&amp;</code>\uff1a\u4e0e\u8fd0\u7b97(AND)</li> </ul> <p>\u4ece<code>0~F</code>\u5faa\u73af\u3002</p> <p></p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_2","title":"\u6311\u6218\u6307\u9488","text":"<p>\u5f88\u660e\u663e\uff0c<code>write_mem8</code>\u53ef\u4ee5\u7528\u6307\u9488\u4ee3\u66ff\ud83d\ude0d\u3002</p> <pre><code>write_mem8(i, i &amp; 0x0f);\n</code></pre> <p>\u66ff\u4ee3\u4ee5\u4e0a\u8bed\u53e5\u7684\u662f\uff1a</p> <pre><code>i = i &amp; 0x0f;\n</code></pre> <p>\u4f46\u662f\uff0c\u4f1a\u51fa\u9519\uff1a</p> <pre><code>invalid type argument of 'unary *'\n</code></pre> <p>\u6211\u4eec\u4ece\u7f16\u8bd1\u5668\u7684\u89d2\u5ea6\u7a0d\u5fae\u60f3\u60f3\u5c31\u80fd\u660e\u767d\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u9519\u4e86\u3002</p> <pre><code>MOV    [0x1234],0x56\n</code></pre> <p>\u8fd9\u79cd\u60c5\u51b5\u4e5f\u4f1a\u51fa\u9519\u3002\u8fd9\u662f\u56e0\u4e3a\u6307\u5b9a\u5185\u5b58\u65f6\uff0c\u4e0d\u77e5\u9053\u5230\u5e95\u662f<code>BYTE</code>\uff0c\u8fd8\u662f<code>WORD</code>\uff0c\u8fd8\u662f<code>DWORD</code>\u3002\u53ea\u6709\u5728\u53e6\u4e00\u65b9\u4e5f\u662f\u5bc4\u5b58\u5668\u7684\u65f6\u5019\u624d\u80fd\u7701\u7565\uff0c\u5176\u4ed6\u60c5\u51b5\u90fd\u4e0d\u80fd\u7701\u7565\u3002</p> <p>\u8fd9\u6b21\uff0c\u6211\u4eec\u8d39\u52b2\u5199\u7684C\u8bed\u8a00\u8bed\u53e5\uff0c\u76f8\u5f53\u4e8e\u4e0b\u9762\u7684\u6c47\u7f16\u8bed\u53e5\uff1a</p> <pre><code>MOV    [i],(i &amp; 0x0f)\n</code></pre> <p>\u4f46\u662f\u5374\u4e0d\u77e5\u9053<code>[i]</code>\u5230\u5e95\u662f<code>BYTE</code>, \u8fd8\u662f<code>WORD</code>, \u8fd8\u662f<code>DWORD</code>\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u4f7f\u7528\uff1a</p> <pre><code>char *p;          //\u7528\u4e8e\u5b58\u653eBYTE\u7c7b\u5730\u5740\np = i &amp; 0x0f;\n</code></pre> <p>\u540c\u7406\uff1a</p> <pre><code>char *p;       //\u7528\u4e8eBYTE\u7c7b\u5730\u5740\uff0c\u76f8\u5f53\u4e8eAL\nshort *p;      //\u7528\u4e8eWORD\u7c7b\u5730\u5740\uff0c\u76f8\u5f53\u4e8eAX\nint *p;        //\u7528\u4e8eDWORD\u7c7b\u5730\u5740\uff0c\u76f8\u5f53\u4e8eEAX\n</code></pre> <p>\u4f46\u662f\u65e0\u8bba\u4ec0\u4e48\u60c5\u51b5\uff0c\u53d8\u91cf<code>p</code>\u90fd\u662f4\u5b57\u8282\u3002\u8fd9\u662f\u56e0\u4e3a\u53d8\u91cf<code>p</code>\u662f\u7528\u4e8e\u8bb0\u5f55\u5730\u5740\u7684\u53d8\u91cf\u3002\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\uff0c\u5730\u5740\u4e5f\u50cf<code>ECX</code>\u4e00\u6837\uff0c\u75284\u5b57\u8282\u7684\u5bc4\u5b58\u5668\u6765\u6307\u5b9a\uff0c\u6240\u4ee5\u4e5f\u662f4\u5b57\u8282\u3002</p> bootpack.c<pre><code>void io_hlt(void);\n\nvoid HariMain(void)\n{\n    int i;\n    char *p;\n\n    for (i = 0xa0000; i &lt;= 0xaffff; i++)\n    {\n        p = i;\n        *p = i &amp; 0x0f;  \n    }\n\n    for (;;)\n    {\n        io_hlt();   \n    }\n}\n</code></pre>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_3","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p><code>make run</code>\u4e4b\u540e\uff0c\u4e14\u6162\uff01\ud83d\ude2e\u53d1\u73b0\u6709\u4e00\u884c\u8b66\u544a\uff1a</p> <pre><code>warning: assignment makes pointer from integer without a cast\n</code></pre> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u666e\u901a\u6570\u503c\u548c\u8868\u793a\u5185\u5b58\u5730\u5740\u7684\u6570\u503c\u88ab\u8ba4\u4e3a\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u4e1c\u897f\uff0c\u867d\u7136\u4e8b\u5b9e\u4e0a\u6ca1\u4ec0\u4e48\u4e0d\u540c\u3002</p> <p>\u57fa\u4e8e\u8fd9\u79cd\u8bbe\u8ba1\u601d\u60f3\uff0c\u5982\u679c\u5c06\u666e\u901a\u6574\u6570\u503c\u8d4b\u7ed9\u5185\u5b58\u5730\u5740\u53d8\u91cf\uff0c\u5c31\u4f1a\u6709\u8b66\u544a\u3002</p> <p>\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a</p> <pre><code>p = (char*) i;\n</code></pre>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_4","title":"\u4f7f\u7528\u7c7b\u578b\u8f6c\u6362\u5c31\u53ef\u4ee5\u4e0d\u7528\u6307\u9488","text":"<pre><code>p = (char*) i;\n*p = i &amp; 0x0f;\n</code></pre> <p>\u8fd9\u6837\u5c31\u5f97\u5230\u4e0b\u5f0f\uff1a</p> <pre><code>*((char*)i) = i &amp; 0x0f;\n</code></pre> <p>\u8fd9\u79cd\u5199\u6cd5\u5c31\u4e0e\u6c47\u7f16\u8bed\u8a00\u76f8\u50cf\uff1a</p> <pre><code>MOV    BYTE [i], i &amp; 0x0f\n</code></pre> <p>\u4e0b\u9762\u518d\u7a0d\u5fae\u6df1\u5165\u8bf4\u660e\u4e00\u4e0b\uff0c\u6211\u4eec\u5e38\u89c1\u7684\u4e24\u4e2a\u8bed\u53e5\u662f\uff1a</p> <pre><code>p = (char*) i;\n*p = i &amp; 0x0f\n</code></pre> <p>\u5c06\u4e0a\u9762\u7684\u8bed\u53e5\u6309\u6c47\u7f16\u7684\u4e60\u60ef\u5199\u4e00\u4e0b\uff1a</p> <pre><code>MOV    ECX,i\nMOV    [ECX],(i &amp; 0x0f)\n</code></pre> <p>\u5b83\u4eec\u7684\u533a\u522b\u5f88\u6e05\u695a\uff0c\u5373\u4e00\u4e2a\u662f\u7ed9<code>ECX</code>\u5bc4\u5b58\u5668\u8d4b\u503c\uff0c\u4e00\u4e2a\u662f\u7ed9<code>[ECX]</code>\u53f7\u5185\u5b58\u5730\u5740\u8d4b\u503c\u3002</p> <p>\u5982\u679c\u6267\u884c\u987a\u5e8f\u8c03\u8fc7\u6765\uff1a</p> <pre><code>*p = i &amp; 0x0f;\np = (char*) i;\n</code></pre> <p>\u8fd9\u4f1a\u5bfc\u81f4<code>i &amp; 0x0f</code>\u7684\u7ed3\u679c\u5199\u5165\u5185\u5b58\u7684\u67d0\u4e2a\u4e0d\u53ef\u77e5\u7684\u5730\u5740\u4e2d\u3002</p> <p>\u5176\u5b9e\uff0c<code>*p</code>\u5e76\u4e0d\u662f\u4ec0\u4e48\u53d8\u91cf\uff0c\u53d8\u91cf\u53ea\u6709<code>p</code>\u3002\u6240\u8c13<code>*p</code>\uff0c\u5c31\u76f8\u5f53\u4e8e<code>BYTE [p]</code>\u8fd9\u79cd\u8bed\u53e5\u7684\u4ee3\u66ff\u3002</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_5","title":"<code>*</code>\u7684\u4f4d\u7f6e","text":"<p>\u4e00\u822c\u7684\u5199\u6cd5\u662f\uff1a</p> <pre><code>char *p;\n</code></pre> <p>\u867d\u7136\u6211\u4eec\u58f0\u660e\u7684\u662f\u53d8\u91cf<code>p</code>\uff0c\u5199\u6210\u8fd9\u6837\u4e5f\u5bf9\uff1a</p> <pre><code>char* p;\n</code></pre> <p>\u4f46\u662f</p> <pre><code>char* p, q;\n</code></pre> <p><code>q</code>\u4f1a\u88ab\u770b\u4f5c\u662f\u4e00\u822c1\u5b57\u8282\u7684\u53d8\u91cf\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u6837\u7684\u8bef\u89e3\uff0c\u7a0b\u5e8f\u5458\u90fd\u5199\u6210\uff1a</p> <pre><code>char *p, *q;\n</code></pre>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_6","title":"\u4e0d\u5fc5\u770b\u4f5c\u6307\u9488","text":"<p><code>char *p;</code>\u4e0d\u5fc5\u770b\u4f5c\u6307\u9488\u3002<code>p</code>\u4e0d\u662f\u6307\u9488\uff0c\u800c\u662f\u5730\u5740\u53d8\u91cf\uff0c\u8fd9\u79cd\u8bf4\u6cd5\u6bd4\u8f83\u597d\uff0c\u5c06\u5730\u5740\u503c\u8d4b\u7ed9\u5730\u5740\u53d8\u91cf\u662f\u7406\u6240\u5f53\u7136\u7684\u3002</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#1","title":"\u6307\u9488\u7684\u5e94\u7528(1)","text":"<p>\u7ed8\u5236\u6761\u7eb9\u56fe\u6848\u7684\u90e8\u5206\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210\u4ee5\u4e0b\u8fd9\u6837\uff1a</p> <pre><code>void io_hlt(void);\n\nvoid HariMain(void)\n{\n    int i;\n    char *p;\n\n    p = (char *) 0xa0000;\n\n    for (i = 0; i &lt;= 0xffff; i++)\n    {\n        *(p + 1) = i &amp; 0x0f;    \n    }\n}\n</code></pre>"},{"location":"%E7%AC%AC4%E5%A4%A9/#2","title":"\u6307\u9488\u7684\u5e94\u7528(2)","text":"<p>C\u8bed\u8a00\u4e2d\uff0c<code>*(p + i)</code>\u8fd8\u53ef\u4ee5\u6539\u5199\u6210<code>p[i]</code>\u8fd9\u79cd\u5f62\u5f0f\u3002</p> <pre><code>void io_hlt(void);\n\nvoid HariMain(void)\n{\n    int i;\n    char *p;\n\n    p = (char *) 0xa0000;\n\n    for (i = 0; i &lt;= 0xffff; i++)\n    {\n        p[i] = i &amp; 0x0f;    \n    }\n}\n</code></pre> <p>\u53cd\u8fc7\u6765\u8bf4\uff0c\u4e5f\u53ef\u4ee5\u5c06<code>p[0]</code>\u5199\u6210<code>*p</code>\uff0c\u4e24\u79cd\u5199\u6cd5\u751f\u6210\u7684\u673a\u5668\u8bed\u8a00\u5b8c\u5168\u4e00\u6837\u3002</p> <p>\u540c\u7406\u53ef\u5f97<code>a[2]</code>\u548c<code>2[a]</code>\ud83d\ude0f\u3002</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_7","title":"\u8272\u53f7\u8bbe\u5b9a","text":"<p>\u8fd9\u6b21\u4f7f\u7528\u7684\u662f<code>320x200</code>\u76848\u4f4d\u989c\u8272\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u53ea\u80fd\u4f7f\u7528<code>0~255</code>\u7684\u6570\u3002\u719f\u6089\u7535\u8111\u989c\u8272\u7684\u4eba\u90fd\u77e5\u9053\uff0c\u8fd9\u662f\u975e\u5e38\u5c11\u7684\u3002\u4e00\u822c\u8bf4\u8d77\u6307\u5b9a\u989c\u8272\uff0c\u90fd\u662f\u7528<code>#ffffff</code>\u4e00\u7c7b\u7684\u6570\uff0c\u8fd9\u5c31\u662f<code>RGB</code>\u65b9\u5f0f\u3002</p> <p>\u5982\u679c\u50cf\u73b0\u5728\u8fd9\u6837\uff0c\u7a0b\u5e8f\u5458\u4e0d\u505a\u4efb\u4f55\u8bbe\u5b9a\uff0c0\u53f7\u989c\u8272\u5c31\u662f<code>#000000</code>\uff0c15\u53f7\u989c\u8272\u5c31\u662f<code>#ffffff</code>\u3002</p> <p>\u8981\u60f3\u63cf\u7ed8\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u6478\u6837\u7684\u753b\u9762\uff0c\u53ea\u8981\u6709\u4ee5\u4e0b\u8fd916\u79cd\u989c\u8272\u5c31\u591f\u4e86\uff1a</p> <pre><code>#000000 \u9ed1\n#00ffff \u6d45\u4eae\u84dd\n#000084 \u6697\u84dd\n#ff0000 \u4eae\u7ea2\n#ffffff \u767d\n#840084 \u6697\u7d2b\n#00ff00 \u4eae\u7eff\n#c6c6c6 \u4eae\u7070\n#008484 \u6d45\u6697\u84dd\n#ffff00 \u4eae\u9ec4\n#840000 \u6697\u7ea2\n#848484 \u6697\u7070\n#0000ff \u4eae\u84dd\n#008400 \u6697\u7eff\n#ff00ff \u4eae\u7d2b\n#848400 \u6697\u9ec4\n</code></pre> <p>\u6240\u4ee5\u6211\u4eec\u8981\u7ed9<code>bootpack.c</code>\u6dfb\u52a0\u5f88\u591a\u4ee3\u7801\u3002</p> bootpack.c<pre><code>void io_hlt(void);\nvoid io_cli(void);\nvoid io_out8(int port, int data);\nint io_load_eflags(void);\nvoid io_store_eflags(int eflags);\n\n//\u5c31\u7b97\u5199\u5728\u540c\u4e00\u4e2a\u6e90\u6587\u4ef6\u91cc\uff0c\u5982\u679c\u60f3\u5728\u5b9a\u4e49\u524d\u4f7f\u7528\uff0c\u8fd8\u662f\u5fc5\u987b\u4e8b\u5148\u58f0\u660e\u4e00\u4e0b\u3002\nvoid init_palette(void);\nvoid set_palette(int start, int end, unsigned char *rgb);\n\nvoid HariMain(void)\n{\n    int i;\n    char *p;\n\n    init_palette();  //\u8bbe\u5b9a\u8c03\u8272\u677f\n\n    p = (char *) 0xa0000;\n\n    for (i = 0; i &lt;= 0xffff; i++)\n    {\n        p[i] = i &amp; 0x0f;    \n    }\n\n    for (;;)\n    {\n        io_hlt();   \n    }\n}\n\nvoid init_palette(void)\n{\n    static unsigned char table_rgb[16 * 3] = {\n    0x00, 0x00, 0x00  //0:\u9ed1\n    0xff, 0x00, 0x00  //1:\u4eae\u7ea2\n    0x00, 0xff, 0x00  //2:\u4eae\u7eff\n    0xff, 0xff, 0x00  //3:\u4eae\u9ec4\n    0x00, 0x00, 0xff  //4:\u4eae\u84dd\n    0xff, 0x00, 0xff  //5:\u4eae\u7d2b\n    0x00, 0xff, 0xff  //6:\u6d45\u4eae\u84dd\n    0xff, 0xff, 0xff  //7:\u767d\n    0xc6, 0xc6, 0xc6  //8:\u4eae\u7070\n    0x84, 0x00, 0x00  //9:\u6697\u7ea2\n    0x00, 0x84, 0x00  //10:\u6697\u7eff\n    0x84, 0x84, 0x00  //11:\u6697\u9ec4\n    0x00, 0x00, 0x84  //12:\u6697\u9752\n    0x84, 0x00, 0x84  //13:\u6697\u7d2b\n    0x00, 0x84, 0x84  //14:\u6d45\u6697\u84dd\n    0x84, 0x84, 0x84  //15:\u6697\u7070\n    };\n    set_palette(0, 15, table_rgb);\n    return;\n    //C\u8bed\u8a00\u4e2d\u7684static char\u8bed\u53e5\u53ea\u80fd\u7528\u4e8e\u6570\u636e\uff0c\u76f8\u5f53\u4e8e\u6c47\u7f16\u4e2d\u7684DB\u6307\u4ee4\u3002\n}\n\nvoid set_palette(int start, int end, unsigned char *rgb)\n{\n    int i, eflags;\n    eflags = io_load_eflags();  //\u8bb0\u5f55\u7ec8\u7aef\u8bb8\u53ef\u6807\u5fd7\u7684\u503c\n    io_cli(); //\u5c06\u4e2d\u65ad\u8bb8\u53ef\u6807\u5fd7\u7f6e\u4e3a0\uff0c\u7981\u6b62\u4e2d\u65ad\n    io_out8(0x03c8, start);\n    for (i = start, i &lt;= end; i++)\n    {\n        io_out8(0x03c9, rgb[0] / 4);\n        io_out8(0x03c9, rgb[1] / 4);\n        io_out8(0x03c9, rgb[2] / 4);\n        rgb += 3;   \n    }\n    io_store_eflags(eflags); //\u590d\u539f\u4e2d\u65ad\u8bb8\u53ef\u6807\u5fd7\n    return;\n}\n</code></pre> <pre><code>char a[3];\n</code></pre> <p>C\u8bed\u8a00\u4e2d\uff0c\u5982\u679c\u8fd9\u6837\u5199\uff0c\u90a3\u4e48<code>a</code>\u5c31\u6210\u4e3a\u4e86\u5e38\u6570\uff0c\u4ee5\u6c47\u7f16\u7684\u8bed\u8a00\u8bb2\u5c31\u662f\u6807\u8bc6\u7b26\u3002\u6807\u8bc6\u7b26\u7684\u503c\u5f53\u7136\u5c31\u610f\u5473\u7740\u5730\u5740\u3002</p> <p>\u4e0a\u9762\u7684\u53d9\u8ff0\u5c31\u76f8\u5f53\u4e8e\u6c47\u7f16\u91cc\u7684\u8fd9\u4e2a\u8bed\u53e5\uff1a</p> <pre><code>a:\n    RESB    3\n</code></pre> <p><code>nask</code>\u4e2d\u7684<code>RESB</code>\u7684\u5185\u5bb9\u80fd\u591f\u4fdd\u8bc1\u662f0\uff0c\u4f46C\u8bed\u8a00\u4e2d\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u6240\u4ee5\u91cc\u8fb9\u8bf4\u4e0d\u5b9a\u542b\u6709\u67d0\u79cd\u5783\u573e\u6570\u3002</p> <p>\u5c31\u50cf\u5728\u6c47\u7f16\u8bed\u8a00\u4e2d\u7528<code>DB</code>\u6307\u4ee4\u4ee3\u66ff<code>RESB</code>\u6307\u4ee4\u90a3\u6837\uff0c\u5728C\u8bed\u8a00\u4e2d\u4e5f\u6709\u7c7b\u4f3c\u7684\u6307\u793a\u65b9\u6cd5\uff0c\u90a3\u5c31\u662f\u5728\u58f0\u660e\u524d\u52a0\u4e0a<code>static</code>\u3002</p> <p><code>usigned</code>\u7684\u610f\u601d\u662f\uff1a\u8fd9\u91cc\u6240\u5904\u7406\u7684\u6570\u636e\u662f<code>BYTE</code>\u578b\uff0c\u4f46\u5b83\u662f\u6ca1\u6709\u7b26\u53f7\u7684\u6570(0\u6216\u6b63\u6574\u6570)\u3002</p> <p><code>char</code>\u578b\u7684\u53d8\u91cf\u67093\u79cd\u6a21\u5f0f\uff0c\u5206\u522b\u662f<code>signed</code>\u578b\u3001<code>unsigned</code>\u578b\u548c\u672a\u6307\u5b9a\u578b\u3002</p> <p>\u5bf9\u4e8e<code>char</code>\u6765\u8bf4\uff0c<code>signed</code>\u578b\u80fd\u591f\u5904\u7406<code>-128~127</code>\u7684\u6574\u6570\uff0c<code>unsigned</code>\u578b\u80fd\u591f\u5904\u7406<code>0~255</code>\u7684\u6574\u6570\u3002\u672a\u6307\u5b9a\u578b\u53ef\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a\u662f<code>unsigned</code>\u8fd8\u662f<code>signed</code>\u3002</p> <p>\u5728\u8fd9\u4e2a\u7a0b\u5e8f\u91cc\uff0c\u591a\u6b21\u51fa\u73b0<code>0xff</code>\uff0c\u4e5f\u5c31\u662f255\uff0c\u5982\u679c\u5b83\u88ab\u8bef\u89e3\u4e3a\u8d1f\u6570\u5c31\u5f88\u9ebb\u70e6\u3002</p> <p>\u6700\u540e\u7684\u51fd\u6570<code>set_palette</code>\uff0c\u4e0b\u9762\u662f\u7cbe\u7b80\u7248\uff1a</p> <pre><code>void set_palette(int start, int end, unsigned char *rgb)\n{\n    int i;\n    io_out8(0x03c8, start);\n    for (i = start; i &lt;= end; i++)\n    {\n        io_out8(0x03c9, rgb[0] / 4);\n        io_out8(0x03c9, rgb[0] / 4);\n        rgb += 3;   \n    }\n\n    return;\n}\n</code></pre> <p><code>io_out8</code>\u662f\u5f80\u6307\u5b9a\u88c5\u7f6e\u91cc\u4f20\u9001\u6570\u636e\u7684\u51fd\u6570\u3002</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#cpu","title":"CPU\u4e0e\u8bbe\u5907\u76f8\u8fde","text":"<p>CPU\u7684\u7ba1\u811a\u4e0d\u4ec5\u4e0e\u5185\u5b58\u76f8\u8fde\uff0c\u8fd8\u4e0e\u5404\u4e2a\u8bbe\u5907\u76f8\u8fde\uff0c\u5982\u58f0\u5361\u3001\u663e\u5361\u3001\u8f6f\u76d8\u7b49\u7b49\u3002</p> <p>CPU\u5411\u8bbe\u5907\u53d1\u9001\u7535\u4fe1\u53f7\u662f<code>OUT</code>\u6307\u4ee4\uff1b\u4ece\u8bbe\u5907\u53d6\u5f97\u7535\u4fe1\u53f7\u7684\u662f<code>IN</code>\u6307\u4ee4\u3002</p> <p>\u5728<code>OUT</code>\u6307\u4ee4\u548c<code>IN</code>\u6307\u4ee4\u4e2d\uff0c\u4e3a\u4e86\u533a\u522b\u4e0d\u540c\u7684\u8bbe\u5907\uff0c\u4e5f\u8981\u4f7f\u7528\u8bbe\u5907\u53f7\u7801\u3002\u8bbe\u5907\u53f7\u7801\u5728\u82f1\u6587\u4e2d\u79f0\u4e3a<code>port</code>(\u7aef\u53e3)\u3002</p> <p>\u5728C\u8bed\u8a00\u4e2d\uff0c\u6ca1\u6709\u4e0e<code>IN</code>\u548c<code>OUT</code>\u6307\u4ee4\u76f8\u5f53\u7684\u8bed\u53e5\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u597d\u62ff\u6c47\u7f16\u8bed\u8a00\u6765\u505a\u4e86\ud83e\udd14\u3002</p> <p>\u8bbe\u5907\u53f7\u7801<code>0x03c8</code>\u548c<code>0x03c9</code>\uff0c\u53ef\u4ee5\u5728osdev\u4e2d\u67e5\u8be2VGA\uff1a</p> <p>Port <code>0x3c8</code>, <code>0x3c9</code>, <code>0x3c7</code> control the DAC. Each register in the DAC consists of 18 bits, 6 bits for each color component. To write a color, write the color index to port <code>0x3c8</code>, then write 3 bytes to <code>0x3c9</code> in the order red, green, blue. If you want to write multiple consecutive DAC entries, you only need to write the first entry's index to 0x3c8 then write all values to <code>0x3c9</code> in the order of red, green, blue, red, green, blue, and so on. The accessed DAC entry will automatically increment after every 3 bytes written. To read the DAC entries, write the index to be read to <code>0x3c7</code>, then read the bytes from port <code>0x3c9</code> in a similar fashion (as with writing, the index will increment after every three bytes read).</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#clisti","title":"<code>CLI</code>\u548c<code>STI</code>","text":"<p><code>CLI</code>\u5c06\u4e2d\u65ad\u6807\u5fd7\u7f6e\u4e3a0\uff0c<code>STI</code>\u5c06\u4e2d\u65ad\u6807\u5fd7\u7f6e\u4e3a1\u3002\u5f53CPU\u9047\u5230\u4e2d\u65ad\u8bf7\u6c42\u65f6\uff0c\u662f\u7acb\u5373\u5904\u7406\u4e2d\u65ad\u8bf7\u6c42(\u4e2d\u65ad\u6807\u5fd7\u4e3a1)\uff0c\u8fd8\u662f\u5ffd\u7565\u4e2d\u65ad\u8bf7\u6c42(\u4e2d\u65ad\u6807\u5fd7\u4e3a0)\uff0c\u5c31\u7531\u8fd9\u4e2a\u4e2d\u65ad\u6807\u5fd7\u4f4d\u6765\u8bbe\u5b9a\u3002</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#eflags","title":"<code>EFLAGS</code>\u5bc4\u5b58\u5668","text":"<p>\u8fd9\u662f\u7531\u540d\u4e3a<code>FLAGS</code>\u768416\u4f4d\u5bc4\u5b58\u5668\u6269\u5c55\u800c\u6765\u768432\u4f4d\u5bc4\u5b58\u5668\u3002<code>FLAGS</code>\u662f\u5b58\u50a8\u8fdb\u4f4d\u6807\u5fd7\u548c\u4e2d\u65ad\u6807\u5fd7\u7b49\u6807\u5fd7\u7684\u5bc4\u5b58\u5668\u3002\u8fdb\u4f4d\u6807\u5fd7\u53ef\u4ee5\u901a\u8fc7<code>JC</code>\u6216\u8005<code>JNC</code>\u7b49\u8df3\u8f6c\u6307\u4ee4\u6765\u7b80\u5355\u5730\u5224\u65ad\u5230\u5e95\u662f0\u8fd8\u662f1\u3002</p> <p>\u4f46\u5bf9\u4e8e\u4e2d\u65ad\u6807\u5fd7\uff0c\u6ca1\u6709\u7c7b\u4f3c\u7684<code>JI</code>\u6216<code>JNI</code>\u547d\u4ee4\uff0c\u6240\u4ee5\u53ea\u80fd\u8bfb\u5165<code>EFLAGS</code>\uff0c\u518d\u68c0\u67e5\u7b2c9\u4f4d\u662f0\u8fd8\u662f1\u3002</p> <p>\u968f\u4fbf\u8bf4\u4e00\u4e0b\uff0c\u8fdb\u4f4d\u6807\u5fd7\u662f<code>EFLAGS</code>\u7684\u7b2c0\u4f4d\u3002</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_8","title":"\u6062\u590d\u4e2d\u65ad\u6807\u5fd7","text":"<p><code>set_palette</code>\u4e2d\u60f3\u8981\u505a\u7684\u4e8b\u60c5\u662f\u5728\u8bbe\u5b9a\u8c03\u8272\u677f\u4e4b\u524d\u9996\u5148\u6267\u884c<code>CLI</code>\uff0c\u4f46\u5904\u7406\u7ed3\u675f\u4ee5\u540e\u4e00\u5b9a\u8981\u6062\u590d\u4e2d\u65ad\u6807\u5fd7\uff0c\u56e0\u6b64\u9700\u8981\u8bb0\u4f4f\u6700\u5f00\u59cb\u7684\u4e2d\u65ad\u6807\u5fd7\u662f\u4ec0\u4e48\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5236\u4f5c\u4e86\u4e00\u4e2a\u51fd\u6570<code>io_load_eflags</code>\uff0c\u8bfb\u53d6\u6700\u521d\u7684<code>eflags</code>\u503c\u3002</p> naskfunc.nas<pre><code>[FORMAT \"WCOFF\"]\n[INSTRSET \"i486p\"]\n[BITS 32]\n[FILE \"naskfunc.nas\"]\n\n    GLOBAL _io_hlt, _io_cli, _io_stihlt\n    GLOBAL _io_in8, _io_in16, _io_in32\n    GLOBAL _io_out8, _io_out16, _io_out32\n    GLOBAL _io_load_eflags, _io_store_eflags\n\n[SECTION .text]\n\n_io_hlt:       ; void io_hlt(void);\n    HLT\n    RET\n\n_io_cli:       ; void io_cli(void);\n    CLI\n    RET\n\n_io_sti:       ; void io_sti(void);\n    STI\n    RET\n\n_io_stihlt:    ; void io_stihlt(void);\n    STI\n    HLT\n    RET\n\n_io_in8:       ; void io_in8(int port);\n    MOV    EDX,[ESP+4]   ; port\n    MOV    EAX,0\n    IN     AL,DX\n    RET\n\n_io_in16:      ; int io_in16(int port);\n    MOV    EDX,[ESP+4]   ; port\n    MOV    EAX,0\n    IN     AX,DX\n    RET\n\n_io_in32:      ; int io_in32(int port);\n    MOV    EDX,[ESP+4]   ; port\n    IN     EAX,DX\n    RET\n\n_io_out8:      ; void io_out8(int port, int data);\n    MOV    EDX,[ESP+4]   ; port\n    MOV    AL,[ESP+8]    ; data\n    OUT    DX,AL\n    RET\n\n_io_out16:    ; void io_out16(int port, int data);\n    MOV    EDX,[ESP+4]   ; port\n    MOV    EAX,[ESP+8]   ; data\n    OUT    DX,AX\n    RET\n\n_io_out32:    ; void io_out32(int port, int data);\n    MOV    EDX,[ESP+4]   ; port\n    MOV    EAX,[ESP+8]   ; data\n    OUT    DX,EAX\n    RET\n\n_io_load_eflags:   ; int io_load_eflags(void);\n    PUSHFD         ; \u6307PUSH EFLAGS\n    POP    EAX\n    RET\n\n_io_store_eflags:  ; void io_store_eflags(int eflags);\n    MOV    EAX,[ESP+4]\n    PUSH   EAX\n    POPFD          ; \u6307POP FLAGS\n    RET\n</code></pre> <p>\u5982\u679c\u6709<code>MOV EAX,EFLAGS</code>\u4e4b\u7c7b\u7684\u6307\u4ee4\u5c31\u7b80\u5355\u591a\u4e86\uff0c\u4f46CPU\u6ca1\u6709\u8fd9\u79cd\u6307\u4ee4\u3002\u80fd\u591f\u7528\u6765\u8bfb\u5199<code>EFLAGS</code>\u7684\uff0c\u53ea\u6709<code>PUSHFD</code>\u548c<code>POPFD</code>\u3002</p> <p><code>PUSHFD</code>\u662f\u201cpush flags double-word\u201d\uff0c\u610f\u601d\u662f\u5c06\u6807\u5fd7\u4f4d\u7684\u503c\u6309\u53cc\u5b57\u957f\u538b\u5165\u6808\u3002\u5176\u5b9e\u5b83\u80fd\u505a\u7684\uff0c\u65e0\u975e\u5c31\u662f\u201cPUSH EFLAGS\u201d\u3002</p> <p><code>POPFD</code>\u662f\u201cpop flags double-word\u201d\u7684\u7f29\u5199\uff0c\u610f\u601d\u662f\u6309\u53cc\u5b57\u8282\u957f\u5c06\u6807\u5fd7\u4f4d\u4ece\u6808\u5f39\u51fa\u3002\u5b83\u6240\u4f5c\u7684\uff0c\u5c31\u662f\u201cPOP EFLAGS \u201d\u3002</p> <pre><code>PUSHFD\nPOP EAX\n</code></pre> <p>\u4ee3\u66ff\u4e86\uff1a</p> <pre><code>MOV    EAX,EFLAGS\n</code></pre> <pre><code>PUSH    EAX\nPOPFD\n</code></pre> <p>\u4ee3\u66ff\u4e86\uff1a</p> <pre><code>MOV    EFLAGS,EAX\n</code></pre>"},{"location":"%E7%AC%AC4%E5%A4%A9/#eax","title":"<code>EAX</code>\u662f\u8fd4\u56de\u503c","text":"<p>\u6700\u540e\u8981\u8bb2\u7684\u662f<code>io_load_eflags</code>\u3002\u5b83\u5bf9\u6211\u4eec\u800c\u8a00\uff0c\u662f\u7b2c\u4e00\u4e2a\u6709\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7684\u4f8b\u5b50\u3002</p> <p>\u6839\u636eC\u8bed\u8a00\u7684\u89c4\u7ea6\uff0c\u6267\u884c<code>RET</code>\u8bed\u53e5\u65f6\uff0c<code>EAX</code>\u4e2d\u7684\u503c\u5c31\u88ab\u770b\u4f5c\u662f\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002</p>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_9","title":"\u7ed8\u5236\u77e9\u5f62","text":"<p>\u5728\u5f53\u524d\u753b\u9762\u6a21\u5f0f\u4e2d\uff0c\u753b\u9762\u4e0a\u6709<code>320x200 (=64000)</code>\u4e2a\u50cf\u7d20\u3002</p> <p>\u5047\u8bbe\u505a\u5546\u5e97\u7684\u5750\u6807\u662f<code>(0,0)</code>\uff0c\u53f3\u4e0b\u70b9\u7684\u5750\u6807\u662f<code>(319,319)</code>\uff0c\u90a3\u4e48\u50cf\u7d20\u5750\u6807<code>(x,y)</code>\u5bf9\u5e94\u7684VRAM\u5730\u5740\u8ba1\u7b97\uff1a</p> <pre><code>0xa0000 + x + y*320\n</code></pre> <p>\u5176\u4ed6\u753b\u9762\u6a21\u5f0f\u4e5f\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u662f<code>0xa0000</code>\u8fd9\u4e2a\u8d77\u59cb\u5730\u5740\u548cy\u7684\u7cfb\u6570<code>320</code>\u6709\u4e9b\u4e0d\u540c\u3002</p> <p>\u6839\u636e\u8fd9\u79cd\u601d\u8def\u6211\u4eec\u5236\u4f5c\u4e86\u51fd\u6570<code>boxfill8</code>\u3002</p> bootpack.c<pre><code>void io_hlt(void);\nvoid io_cli(void);\nvoid io_out8(int port, int data);\nint io_load_eflags(void);\nvoid io_store_eflags(int eflags);\n\nvoid init_palette(void);\nvoid set_palette(int start, int end, unsigned char *rgb);\nvoid boxfill8(unsigned char *vram, int xsize, unsigned char c, int x0, int y0, int x1, int y1);\n\n#define COL8_000000 0\n#define COL8_FF0000 1\n#define COL8_00FF00 2\n#define COL8_FFFF00 3\n#define COL8_0000FF 4\n#define COL8_FF00FF 5\n#define COL8_00FFFF 6\n#define COL8_FFFFFF 7\n#define COL8_C6C6C6 8\n#define COL8_840000 9\n#define COL8_008400 10\n#define COL8_848400 11\n#define COL8_000084 12\n#define COL8_840084 13\n#define COL8_008484 14\n#define COL8_848484 15\n\nvoid HariMain(void)\n{\n    char *p;\n\n    init_palette();\n\n    p = (char *) 0xa0000;\n\n    boxfill8(p, 320, COL8_FF0000, 20, 20, 120, 120);\n    boxfill8(p, 320, COL8_00FF00, 70, 50, 170, 150);\n    boxfill8(p, 320, COL8_0000FF, 120, 80, 220, 180);\n\n    for (;;)\n    {\n        io_hlt();   \n    }\n}\n\nvoid init_palette(void)\n{\n    static unsigned char table_rgb[16 * 3] = {\n        0x00, 0x00, 0x00,\n        0xff, 0x00, 0x00,\n        0x00, 0xff, 0x00,\n        0xff, 0xff, 0x00,\n        0x00, 0x00, 0xff,\n        0xff, 0x00, 0xff,\n        0x00, 0xff, 0xff,\n        0xff, 0xff, 0xff,\n        0xc6, 0xc6, 0xc6,\n        0x84, 0x00, 0x00,\n        0x00, 0x84, 0x00,\n        0x84, 0x84, 0x00,\n        0x00, 0x00, 0x84,\n        0x84, 0x00, 0x84,\n        0x00, 0x84, 0x84,\n        0x84, 0x84, 0x84    \n    };\n    set_palette(0, 15, table_rgb);\n    return;\n}\n\nvoid set_palette(int start, int end, unsigned char *rgb)\n{\n    int i, eflags;\n    eflags = io_load_eflags();\n    io_cli();\n    io_out8(0x03c8, start);\n    for (i = start; i &lt;= end; i++)\n    {\n        io_out8(0x03c9, rgb[0] / 4);\n        io_out8(0x03c9, rgb[1] / 4);    \n        io_out8(0x03c9, rgb[2] / 4);\n        rgb += 3;\n    }\n    io_store_eflags(eflags);\n    return;\n}\n\nvoid boxfill8(unsigned char *vram, int xsize, unsigned char c, int x0, int y0, int x1, int y1)\n{\n    int x, y;\n    for (y = y0; y &lt;= y1; y++)\n    {\n        for (x = x0; x &lt;= x1; x++)\n        {\n            vram[y * xsize + x] = c;    \n        }\n    }\n    return;\n}\n</code></pre>"},{"location":"%E7%AC%AC4%E5%A4%A9/#_10","title":"\u4eca\u5929\u7684\u6210\u679c","text":"<p>\u8fd9\u6b21\u6211\u4eec\u53ea\u4fee\u6539<code>HariMain</code>\u7a0b\u5e8f\uff1a</p> <pre><code>void HariMain(void)\n{\n    char *vram;\n    int xsize, ysize;\n\n    init_palette();\n    vram = (char *) 0xa0000;\n    xsize = 320;\n    ysize = 200;\n\n    boxfill8(vram, xsize, COL8_008484,  0,         0,          xsize -  1, ysize - 29);\n    boxfill8(vram, xsize, COL8_C6C6C6,  0,         ysize - 28, xsize -  1, ysize - 28);\n    boxfill8(vram, xsize, COL8_FFFFFF,  0,         ysize - 27, xsize -  1, ysize - 27);\n    boxfill8(vram, xsize, COL8_C6C6C6,  0,         ysize - 26, xsize -  1, ysize -  1);\n\n    boxfill8(vram, xsize, COL8_FFFFFF,  3,         ysize - 24, 59,         ysize - 24);\n    boxfill8(vram, xsize, COL8_FFFFFF,  2,         ysize - 24,  2,         ysize -  4);\n    boxfill8(vram, xsize, COL8_848484,  3,         ysize -  4, 59,         ysize -  4);\n    boxfill8(vram, xsize, COL8_848484, 59,         ysize - 23, 59,         ysize -  5);\n    boxfill8(vram, xsize, COL8_000000,  2,         ysize -  3, 59,         ysize -  3);\n    boxfill8(vram, xsize, COL8_000000, 60,         ysize - 24, 60,         ysize -  3);\n\n    boxfill8(vram, xsize, COL8_848484, xsize - 47, ysize - 24, xsize -  4, ysize - 24);\n    boxfill8(vram, xsize, COL8_848484, xsize - 47, ysize - 23, xsize - 47, ysize -  4);\n    boxfill8(vram, xsize, COL8_FFFFFF, xsize - 47, ysize -  3, xsize -  4, ysize -  3);\n    boxfill8(vram, xsize, COL8_FFFFFF, xsize -  3, ysize - 24, xsize -  3, ysize -  3);\n\n    for (;;)\n    {\n        io_hlt();   \n    }\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC5%E5%A4%A9/","title":"\u7b2c5\u5929 \u7ed3\u6784\u4f53\u3001\u6587\u5b57\u663e\u793a\u4e0eGDT/IDT\u521d\u59cb\u5316","text":""},{"location":"%E7%AC%AC5%E5%A4%A9/#_1","title":"\u63a5\u6536\u542f\u52a8\u4fe1\u606f","text":"<p>\u5230\u6628\u5929\u4e3a\u6b62\uff0c\u5728<code>bootpack.c</code>\u4e2d\u7684\uff0c\u90fd\u662f\u5c06<code>0xa0000</code>\uff0c320\uff0c200\u7b49\u6570\u5b57\u76f4\u63a5\u5199\u5165\u7a0b\u5e8f\uff0c\u800c\u672c\u6765\u8fd9\u4e9b\u503c\u5e94\u8be5\u4ece<code>asmhead.nas</code>\u5148\u524d\u4fdd\u5b58\u4e0b\u6765\u7684\u503c\u4e2d\u53d6\u3002\u5426\u5219\uff0c\u5f53\u753b\u9762\u6a21\u5f0f\u6539\u53d8\u65f6\uff0c\u7cfb\u7edf\u5c31\u4e0d\u80fd\u6b63\u786e\u8fd0\u884c\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u5c31\u8bd5\u7740\u7528\u6307\u9488\u6765\u53d6\u5f97\u8fd9\u4e9b\u503c\u3002</p> <pre><code>void HariMain(void)\n{\n    char *vram;\n    int xsize, ysize;\n    short *binfo_scrnx, *binfo_scrny;\n    int *binfo_vram;\n\n    init_palette();\n    binfo_scrnx = (short *) 0x0ff4;\n    binfo_scrny = (short *) 0x0ff6;\n    binfo_vram = (int *) 0x0ff8;\n    xsize = *binfo_scrnx;\n    ysize = *binfo_scrny;\n    vram = (char *) *binfo_vram;\n}\n</code></pre>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_2","title":"\u8bd5\u7528\u7ed3\u6784\u4f53","text":"<p>\u4e0a\u9762\u7684\u65b9\u6cd5\u884c\u6570\u591a\u4e86\u4e9b\uff0c\u4e0b\u9762\u6211\u4eec\u7528\u7ed3\u6784\u4f53\u3002</p> <pre><code>struct BOOTINFO\n{\n    char cyls, leds, vmode, reserve;\n    short scrnx, scrny;\n    char *vram;\n}\n\nvoid HariMain(void)\n{\n    char *vram;\n    int xsize, ysize;\n    struct BOOTINFO *binfo;\n\n    init_palette();\n    binfo = (struct BOOTINFO *) 0x0ff0\n    xsize = (*binfo).scrnx;\n    ysize = (*binfo).scrny;\n    vram = (*binfo).vram;\n}\n</code></pre> <p>\u672c\u6765\u60f3\u5199<code>binfo=0x0ff0</code>\uff0c\u4f46\u7531\u4e8e\u603b\u51fa\u8b66\u544a\uff0c\u5f88\u8ba8\u538c\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u8fdb\u884c\u4e86\u7c7b\u578b\u8f6c\u6362\u3002</p>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_3","title":"\u8bd5\u7528\u7bad\u5934\u8bb0\u53f7","text":"<p>\u5728C\u8bed\u8a00\u91cc\u5e38\u5e38\u4f1a\u7528\u5230\u7c7b\u4f3c\u4e8e<code>(*binfo).scrnx</code>\u7684\u8868\u73b0\u624b\u6cd5\uff0c\u56e0\u6b64\u51fa\u73b0\u4e86\u4e00\u79cd\u7701\u7565\u8868\u73b0\u65b9\u5f0f<code>(binfo -&gt; scrnx)</code>\u3002</p> <pre><code>void HariMain(void)\n{\n    struct BOOTINFO *binfo = (struct BOOTINFO *) 0x0ff0;\n    init_palette();\n    init_screen(binfo -&gt; vram, binfo -&gt; scrnx, binfo -&gt; scrny);\n}\n</code></pre>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_4","title":"\u663e\u793a\u5b57\u7b26","text":"<p>\u5b57\u7b26\u53ef\u4ee5\u7528<code>8*16</code>\u7684\u957f\u65b9\u5f62\u50cf\u7d20\u70b9\u9635\u6765\u8868\u793a\uff0c\u50cf\u8fd9\u79cd\u63cf\u753b\u6587\u5b57\u5f62\u72b6\u7684\u6570\u636e\u79f0\u4e3a\u5b57\u4f53\u6570\u636e\u3002</p> <p>\u6709\u4e00\u79cd\u4e34\u65f6\u65b9\u6848\uff1a</p> <pre><code>static char font_A[16] = {\n    0x00, 0x18, 0x18, 0x18, 0x18, 0x24, 0x24, 0x24, 0x24, 0x7e, 0x42, 0x42, 0x42, 0xe7, 0x00, 0x00\n};\n</code></pre> <p>\u5176\u5b9e\u8fd9\u4ec5\u4ec5\u662f\u5c06\u521a\u624d\u76840\u548c1\u7684\u6392\u5217\uff0c\u91cd\u5199\u6210\u5341\u516d\u8fdb\u5236\u800c\u5df2\uff0cC\u8bed\u8a00\u65e0\u6cd5\u7528\u4e8c\u8fdb\u5236\u8bb0\u5f55\u6570\u636e\uff0c\u53ea\u80fd\u5199\u6210\u5341\u516d\u8fdb\u5236\u6216\u516b\u8fdb\u5236\u3002</p> <p>\u6570\u636e\u9f50\u5907\u4ee5\u540e\uff0c\u7528<code>for</code>\u8bed\u53e5\u5c06\u753b8\u4e2a\u50cf\u7d20\u7684\u7a0b\u5e8f\u5faa\u73af16\u904d\uff0c\u5c31\u53ef\u4ee5\u663e\u793a\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e86\u3002</p> <pre><code>void putfont8(char *vram, int xsize, int x, int y, char c, char *font)\n{\n    int i;\n    char *p, d;\n    for (i = 0; i &lt; 16; i++)\n    {\n        p = vram + (y + i) * xsize + x;\n        d = font[i];\n        if ((d &amp; 0x80) != 0) { p[0] = c; }\n        if ((d &amp; 0x40) != 0) { p[1] = c; }\n        if ((d &amp; 0x20) != 0) { p[2] = c; }\n        if ((d &amp; 0x10) != 0) { p[3] = c; }\n        if ((d &amp; 0x08) != 0) { p[4] = c; }\n        if ((d &amp; 0x04) != 0) { p[5] = c; }\n        if ((d &amp; 0x02) != 0) { p[6] = c; }\n        if ((d &amp; 0x01) != 0) { p[7] = c; }\n    }\n    return;\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_5","title":"\u589e\u52a0\u5b57\u4f53","text":"<p>\u6211\u4eec\u6cbf\u7528OSASK\u7684\u5b57\u4f53\u6570\u636e\uff0c\u5c06<code>hankaku.txt</code>\u8fd9\u4e2a\u6587\u672c\u6587\u4ef6\u52a0\u5165\u5230\u6211\u4eec\u7684\u5927\u5bb6\u5ead\u4e2d\u3002</p> <p>\u4f46\u662f\u8fd9\u4e2a\u6587\u4ef6\u91cc\u90fd\u662f<code>*.</code>\u4ec0\u4e48\u7684\uff0c\u6bd4\u5341\u516d\u8fdb\u5236\u548c\u4e8c\u8fdb\u5236\u5bb9\u6613\u770b\u4e00\u4e9b\u3002</p> <p>\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u4e13\u95e8\u7684\u7f16\u8bd1\u5668\uff0c\u8bfb\u5165\u8fd9\u4e2a\u6587\u672c\u6587\u4ef6(256\u4e2a\u5b57\u7b26)\uff0c\u7136\u540e\u8f93\u51fa\u6210<code>16*256=4096</code>\u5b57\u8282\u7684\u6587\u4ef6\u3002</p> <p>\u7f16\u8bd1\u540e\u751f\u6210<code>hankaku.bin</code>\u6587\u4ef6\uff0c\u4f46\u662f\u8fd9\u4e2a\u6587\u4ef6\u8fd8\u4e0d\u80fd\u4e0e<code>bootpack.obj</code>\u76f8\u8fde\u63a5\uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f\u76ee\u6807\u6587\u4ef6\u3002\u8fd9\u9879\u5de5\u4f5c\u7531<code>bin2obj.exe</code>\u6765\u5b8c\u6210\u3002\u5b83\u7684\u529f\u80fd\u662f\u5c06\u6240\u7ed9\u7684\u6587\u4ef6\u81ea\u52a8\u8f6c\u6362\u6210\u76ee\u6807\u7a0b\u5e8f\uff0c\u5c31\u50cf\u5c06\u6e90\u7a0b\u5e8f\u8f6c\u6362\u6210\u6c47\u7f16\u90a3\u6837\uff1a</p> <pre><code>_hankaku:\n    DB \u5404\u79cd\u6570\u636e(\u51714096\u5b57\u8282)\n</code></pre> <p>\u5982\u679c\u5728C\u8bed\u8a00\u4e2d\u4f7f\u7528\u8fd9\u79cd\u5b57\u4f53\u6570\u636e\uff0c\u9700\u8981\u52a0\u4e0a\u5982\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>extern char hankaku[4096];\n</code></pre> <p>\u50cf\u8fd9\u79cd\u5728\u6e90\u7a0b\u5e8f\u4ee5\u5916\u51c6\u5907\u7684\u6570\u636e\uff0c\u90fd\u9700\u8981\u52a0\u4e0a<code>extern</code>\u5c5e\u6027\u3002</p> <p><code>A</code>\u7684\u5b57\u4f53\u6570\u636e\uff0c\u653e\u5728<code>hankaku + 0x41*16</code>\u5f00\u59cb\u768416\u5b57\u8282\u91cc\u3002C\u8bed\u8a00\u4e2d<code>A</code>\u7684\u5b57\u7b26\u7f16\u7801\u53ef\u4ee5\u7528<code>A</code>\u6765\u8868\u793a\uff0c\u6b63\u597d\u5199\u6210<code>hankaku + 'A'*16</code>\u3002</p> <pre><code>void HariMain(void)\n{\n    struct BOOTINFO *binfo = (struct BOOTINFO *) 0x0ff0;\n    extern char hankaku[4096];\n\n    init_palette();\n    init_screen(binfo-&gt;vram, binfo-&gt;scrnx, binfo-&gt;scrny);\n    putfont8(binfo-&gt;vram, binfo-&gt;scrnx,  8, 8, COL8_FFFFFF, hankaku + 'A' * 16);\n    putfont8(binfo-&gt;vram, binfo-&gt;scrnx, 16, 8, COL8_FFFFFF, hankaku + 'B' * 16);\n    putfont8(binfo-&gt;vram, binfo-&gt;scrnx, 24, 8, COL8_FFFFFF, hankaku + 'C' * 16);\n    putfont8(binfo-&gt;vram, binfo-&gt;scrnx, 40, 8, COL8_FFFFFF, hankaku + '1' * 16);\n    putfont8(binfo-&gt;vram, binfo-&gt;scrnx, 48, 8, COL8_FFFFFF, hankaku + '2' * 16);\n    putfont8(binfo-&gt;vram, binfo-&gt;scrnx, 56, 8, COL8_FFFFFF, hankaku + '3' * 16);\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_6","title":"\u663e\u793a\u5b57\u7b26\u4e32","text":"<p>\u4ec5\u4ec5\u663e\u793a6\u4e2a\u5b57\u7b26\uff0c\u8981\u5199\u8fd9\u4e48\u591a\u4ee3\u7801\uff0c\u5b9e\u5728\u4e0d\u597d\u770b\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u505a\u4e00\u4e2a\u51fd\u6570\uff0c\u7528\u6765\u663e\u793a\u5b57\u7b26\u4e32\u3002</p> <pre><code>void putfont8_asc(char *vram, int size, int x, int y, char c, unsigned char *s)\n{\n    extern char hankaku[4096];\n    for (; *s != 0x00; s++)\n    {\n        putfont8(vram, xsize, x, y, c, hankaku + *s * 16);\n        x += 8; \n    }\n    return;\n}\n</code></pre> <p>C\u8bed\u8a00\u4e2d\uff0c\u5b57\u7b26\u4e32\u90fd\u662f\u4ee5<code>0x00</code>\u7ed3\u5c3e\u7684\u3002\u51fd\u6570\u540d\u5e26\u7740<code>asc</code>\uff0c\u662f\u4e3a\u4e86\u8868\u793a\u5b57\u7b26\u7f16\u7801\u4f7f\u7528\u4e86ASCII\u3002</p> <pre><code>putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx,  8,  8, COL8_FFFFFF, \"ABC 123\");\nputfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 31, 31, COL8_000000, \"Haribote OS.\");\nputfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 30, 30, COL8_FFFFFF, \"Haribote OS.\");\n</code></pre> <p></p>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_7","title":"\u663e\u793a\u53d8\u91cf\u503c","text":"<p>\u4e60\u60ef\u4e86\u5728Windows\u4e2d\u5f00\u53d1\u7a0b\u5e8f\u7684\u4eba\uff0c\u5982\u679c\u60f3\u770b\u5230\u53d8\u91cf\u7684\u503c\uff0c\u7528\u8c03\u8bd5\u5668\u5f88\u5bb9\u6613\u5c31\u80fd\u770b\u5230\u3002</p> <p>\u5728\u505a\u51fa\u8c03\u8bd5\u5668\u4e4b\u524d\uff0c\u53ea\u80fd\u901a\u8fc7\u663e\u793a\u53d8\u91cf\u503c\u6765\u67e5\u67e5\u770b\u786e\u8ba4\u95ee\u9898\u7684\u5730\u65b9\u3002</p> <p>\u663e\u793a\u53d8\u91cf\u503c\u53ef\u4ee5\u4f7f\u7528<code>sprintf</code>\u51fd\u6570\u3002\u81ea\u5236\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u4e0d\u80fd\u968f\u4fbf\u4f7f\u7528<code>printf</code>\u51fd\u6570\uff0c\u4f46<code>sprintf</code>\u53ef\u4ee5\u4f7f\u7528\u3002\u56e0\u4e3a<code>sprintf</code>\u4e0d\u662f\u6309\u6307\u5b9a\u683c\u5f0f\u8f93\u51fa\uff0c\u53ea\u662f\u5c06\u8f93\u51fa\u5185\u5bb9\u4f5c\u4e3a\u5b57\u7b26\u4e32\u5199\u5728\u5185\u5b58\u4e2d\u3002</p> <p>\u8fd9\u4e2a<code>sprintf</code>\u51fd\u6570\uff0c\u662f\u672c\u6b21\u4f7f\u7528\u540d\u4e3aGO\u7684C\u7f16\u8bd1\u5668\u9644\u5e26\u7684\u51fd\u6570\u3002\u5b83\u5728\u5236\u4f5c\u8005\u7684\u7cbe\u5fc3\u8bbe\u8ba1\u4e4b\u4e0b\u80fd\u591f\u4e0d\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u7684\u4efb\u4f55\u529f\u80fd\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nsprintf(s, \"scrnx = %d\", binfo -&gt; scrnx)\n</code></pre> <p><code>sprintf</code>\u51fd\u6570\u7684\u4f7f\u7528\u65b9\u6cd5\u662f\uff1asprintf(\u5730\u5740\uff0c\u683c\u5f0f\uff0c\u503c\uff0c\u503c\uff0c\u2026\u2026)\u3002</p>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_8","title":"\u5173\u4e8e\u683c\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e","text":"<ul> <li><code>%d</code>\u662f\u5341\u8fdb\u5236\u6570</li> <li><code>%5d</code>\u662f5\u4f4d\u5341\u8fdb\u5236\u6570\u3002\u5982\u679c\u662f123\uff0c\u5219\u5728\u524d\u9762\u52a0\u4e0a\u4e24\u4e2a\u7a7a\u683c\uff0c\u53d8\u6210<code>\"  123\"</code></li> <li><code>%05d</code>5\u4f4d\u5341\u8fdb\u5236\u6570\u3002\u5982\u679c\u662f123\uff0c\u5219\u5728\u524d\u9762\u52a0\u4e0a0\uff0c\u53d8\u6210<code>\"00123\"</code></li> <li><code>%x</code>\u5341\u516d\u8fdb\u5236\u6570\uff0c\u5b57\u6bcd\u90e8\u5206\u4e3a\u5c0f\u5199<code>abc</code></li> <li><code>%X</code>\u5341\u516d\u8fdb\u5236\u6570\uff0c\u5b57\u6bcd\u90e8\u5206\u4e3a\u5927\u5199<code>ABC</code></li> <li><code>%5x</code></li> <li><code>%05x</code></li> </ul>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_9","title":"\u663e\u793a\u9f20\u6807\u6307\u9488","text":"<p>\u9996\u5148\uff0c\u5c06\u9f20\u6807\u6307\u9488\u7684\u5927\u5c0f\u5b9a\u4e3a<code>16*16</code>\u3002\u5148\u51c6\u5907<code>16*16=256</code>\u5b57\u8282\u7684\u5185\u5b58\uff0c\u7136\u540e\u5f80\u91cc\u9762\u5199\u5165\u9f20\u6807\u6307\u9488\u7684\u6570\u636e\u3002</p> <pre><code>void init_mouse_cursor8(char *mouse, char bc)\n{\n    static char cursor[16][16] = {\n        \"**************..\",\n        \"*OOOOOOOOOOO*...\",\n        \"*OOOOOOOOOO*....\",\n        \"*OOOOOOOOO*.....\",\n        \"*OOOOOOOO*......\",\n        \"*OOOOOOO*.......\",\n        \"*OOOOOOO*.......\",\n        \"*OOOOOOOO*......\",\n        \"*OOOO**OOO*.....\",\n        \"*OOO*..*OOO*....\",\n        \"*OO*....*OOO*...\",\n        \"*O*......*OOO*..\",\n        \"**........*OOO*.\",\n        \"*..........*OOO*\",\n        \"............*OO*\",\n        \".............***\"\n    };\n    int x, y;\n    for (y = 0; y &lt; 16; y++)\n    {\n        for (x = 0; x &lt; 16; x++) {\n            if (cursor[y][x] == '*') {\n                mouse[y * 16 + x] = COL8_000000;\n            }\n            if (cursor[y][x] == 'O') {\n                mouse[y * 16 + x] = COL8_FFFFFF;\n            }\n            if (cursor[y][x] == '.') {\n                mouse[y * 16 + x] = bc;\n            }\n        }\n    }\n    return;\n}\n\nvoid HariMain(void)\n{\n    struct BOOTINFO *binfo = (struct BOOTINFO *) 0x0ff0;\n    char s[40], mcursor[256];\n    int mx, my;\n    init_palette();\n    init_screen8(binfo -&gt; vram, binfo -&gt; scrnx, binfo -&gt; scrny);\n    mx = (binfo -&gt; scrnx - 16) / 2;  //\u753b\u9762\u4e2d\u592e\n    my = (binfo -&gt; scrny - 28 - 16) / 2;\n    init_mouse_cursor8(mcursor, COL8_008484);\n    putblock8_8(binfo -&gt; vram, binfo -&gt; scrnx, 16, 16, mx, my, mcursor, 16)\n}\n</code></pre> <p>\u53d8\u91cf<code>bc</code>\u662f\u6307\u80cc\u666f\u8272\u3002</p> <p>\u8981\u5c06\u80cc\u666f\u8272\u663e\u793a\u51fa\u6765\uff0c\u8fd8\u9700\u8981\u505a\u6210\u4e0b\u9762\u8fd9\u4e2a\u51fd\u6570\uff0c\u53ea\u8981\u5c06<code>buf</code>\u4e2d\u7684\u6570\u636e\u590d\u5236\u5230<code>vram</code>\u4e2d\u53bb\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p><code>vram</code>\u548c<code>vxsize</code>\u662f\u5173\u4e8eVRAM\u7684\u4fe1\u606f\u3002<code>pxsize</code>\u548c<code>pysize</code>\u662f\u60f3\u8981\u663e\u793a\u7684\u56fe\u5f62\u7684\u5927\u5c0f\u3002<code>py0</code>\u548c<code>px0</code>\u6307\u5b9a\u56fe\u5f62\u5728\u753b\u9762\u4e0a\u7684\u663e\u793a\u4f4d\u7f6e\u3002<code>buf</code>\u548c<code>bxsize</code>\u5206\u522b\u6307\u5b9a\u56fe\u5f62\u7684\u5b58\u653e\u4f4d\u7f6e\u548c\u6bcf\u4e00\u884c\u542b\u6709\u7684\u50cf\u7d20\u6570\u3002</p> <pre><code>void putblock8_8(char *vram, int vxsize, int pxsize, int pysize, int px0, int py0, char *buf,int bxsize)\n{\n    int x, y;\n    for (y = 0; y &lt; pysize; y++)\n    {\n        for (x = 0; x &lt; pxsize; x++)\n        {\n            vram[(py0 + y) * vxsize + (px0 + x)] = buf[y * bxsize + x];\n        }   \n    }\n    return;\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC5%E5%A4%A9/#gdtidt","title":"GDT\u4e0eIDT\u7684\u521d\u59cb\u5316","text":"<p>\u600e\u6837\u8ba9\u9f20\u6807\u6307\u9488\u52a8\u8d77\u6765\u5462\ud83e\udd14\uff1f\u9996\u5148\u8981\u5c06GDT\u548cIDT\u521d\u59cb\u5316\u3002</p> <p>GDT\u548cIDT\u90fd\u662f\u4e0eCPU\u6709\u5173\u7684\u8bbe\u5b9a\u3002\u4e3a\u4e86\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u4f7f\u752832\u4f4d\u6a21\u5f0f\uff0c\u9700\u8981\u5bf9CPU\u505a\u5404\u79cd\u8bbe\u5b9a\u3002</p> <p>\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u591a\u7528C\u8bed\u8a00\u6765\u5199\uff0c\u6211\u4eec\u7684<code>asmhead.nas</code>\u6709\u4e9b\u5077\u5de5\u51cf\u6599\uff0c\u53ea\u505a\u4e86\u8fd0\u884c<code>bootpack.c</code>\u6240\u5fc5\u9700\u7684\u4e00\u4e9b\u8bbe\u5b9a\u3002</p>"},{"location":"%E7%AC%AC5%E5%A4%A9/#_10","title":"\u5206\u6bb5","text":"<p>\u56de\u60f3\u6c47\u7f16\u4e2d\u6709\u4e00\u4e2a\u6307\u4ee4\u53eb<code>ORG</code>\uff0c\u5982\u679c\u4e0d\u7528<code>ORG</code>\u6307\u4ee4\u660e\u786e\u58f0\u660e\u7a0b\u5e8f\u8981\u8bfb\u5165\u7684\u5185\u5b58\u5730\u5740\uff0c\u5c31\u4e0d\u80fd\u5199\u51fa\u6b63\u786e\u7684\u7a0b\u5e8f\u6765\u3002</p> <p>\u6700\u8fd1\u7684\u64cd\u4f5c\u7cfb\u7edf\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\u3002\u8fd9\u79cd\u65f6\u5019\uff0c\u5982\u679c\u5185\u5b58\u7684\u4f7f\u7528\u8303\u56f4\u91cd\u53e0\u4e86\u600e\u4e48\u529e\uff1f\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5206\u6bb5\u3002</p> <p>\u6240\u8c13\u5206\u6bb5\uff0c\u5c31\u662f\u6309\u7167\u81ea\u5df1\u559c\u6b22\u7684\u65b9\u5f0f\uff0c\u5c064GB\u7684\u5185\u5b58\u5206\u6210\u5f88\u591a\u5757\uff0c\u6bcf\u4e00\u5757\u7684\u8d77\u59cb\u5730\u5740\u90fd\u770b\u4f5c0\u6765\u5904\u7406\u3002\u8fd9\u6837\uff0c\u4efb\u4f55\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u5148\u5199\u4e0a\u4e00\u53e5<code>ORG 0</code>\u3002\u50cf\u8fd9\u6837\u5206\u5272\u51fa\u6765\u7684\u5757\uff0c\u5c31\u79f0\u4e3a\u6bb5\u3002</p> <p>\u6211\u4eec\u752816\u4f4d\u7684\u5bc4\u5b58\u5668\u7684\u65f6\u5019\u66fe\u7ecf\u8bb2\u89e3\u8fc7\u6bb5\u5bc4\u5b58\u5668\u3002\u4f46\u662f16\u4f4d\u7684\u65f6\u5019\uff0c\u5982\u679c\u8ba1\u7b97\u5730\u5740\uff0c\u53ea\u8981\u5c06\u5730\u5740\u4e58\u4ee516\u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\u73b0\u572832\u4f4d\u4e0d\u80fd\u8fd9\u4e48\u7528\u4e86\u3002\u5982\u679c\u5199\u6210<code>MOV AL,[DS:EBX]</code>\uff0cCPU\u4f1a\u5f80EBX\u91cc\u52a0\u4e0a\u67d0\u4e2a\u503c\u6765\u8ba1\u7b97\u5730\u5740\uff0c\u8fd9\u4e2a\u503c\u4e0d\u662f<code>DS</code>\u768416\u500d\uff0c\u800c\u662f<code>DS</code>\u6240\u8868\u793a\u6bb5\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p>\u5373\u4f7f\u7701\u7565\u4e86\u6bb5\u5bc4\u5b58\u5668\u7684\u5730\u5740\uff0c\u4e5f\u4f1a\u81ea\u52a8\u8ba4\u4e3a\u662f\u6307\u5b9a\u4e86<code>DS</code>\u3002\u8fd9\u4e2a\u89c4\u5219\u572816\u4f4d\u548c32\u4f4d\u90fd\u662f\u4e00\u6837\u7684\u3002</p> <p>\u6309\u8fd9\u79cd\u5206\u6bb5\u65b9\u6cd5\uff0c\u4e3a\u4e86\u8868\u793a\u4e00\u4e2a\u6bb5\uff0c\u9700\u8981\u6709\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>\u6bb5\u7684\u5927\u5c0f\u662f\u591a\u5c11</li> <li>\u6bb5\u7684\u8d77\u59cb\u5730\u5740\u5728\u54ea\u91cc</li> <li>\u6bb5\u7684\u7ba1\u7406\u5c5e\u6027(\u7981\u6b62\u5199\u5165\u3001\u7981\u6b62\u6267\u884c\u3001\u7cfb\u7edf\u4e13\u7528\u7b49)</li> </ul> <p>CPU\u75288\u4e2a\u5b57\u8282(64\u4f4d)\u7684\u6570\u636e\u6765\u8868\u793a\u8fd9\u4e9b\u4fe1\u606f\u3002\u4f46\u662f\uff0c\u7528\u4e8e\u6307\u5b9a\u6bb5\u7684\u5bc4\u5b58\u5668\u53ea\u670916\u4f4d\u3002</p> <p>\u90a3\u8be5\u600e\u4e48\u529e\u624d\u597d\u5462\ud83e\udd14\uff1f\u53ef\u4ee5\u6a21\u4eff\u56fe\u50cf\u8c03\u8272\u677f\u7684\u505a\u6cd5\uff1a\u5148\u6709\u4e00\u4e2a\u6bb5\u53f7\uff0c\u5b58\u653e\u5728\u6bb5\u5bc4\u5b58\u5668\u91cc\uff0c\u7136\u540e\u9884\u5148\u8bbe\u5b9a\u597d\u6bb5\u53f7\u4e0e\u6bb5\u7684\u5bf9\u5e94\u5173\u7cfb\u3002</p> <p>\u8c03\u8272\u677f\u4e2d\uff0c\u8272\u53f7\u53ef\u4ee5\u4f7f\u7528<code>0~255</code>\u7684\u6570\u3002\u6bb5\u53f7\u53ef\u4ee5\u7528<code>0~8191</code>\u7684\u6570\u3002\u56e0\u4e3a\u6bb5\u5bc4\u5b58\u5668\u662f16\u4f4d\uff0c\u4f46\u662f\u7531\u4e8eCPU\u8bbe\u8ba1\u4e0a\u7684\u539f\u56e0\uff0c\u6bb5\u5bc4\u5b58\u5668\u7684\u4f4e3\u4f4d\u4e0d\u80fd\u4f7f\u7528\u3002\u56e0\u6b64\u80fd\u591f\u4f7f\u7528\u7684\u6bb5\u53f7\u53ea\u670913\u4f4d\u3002</p> <p>\u5bf9\u4e8eCPU\u7684\u8bbe\u5b9a\uff0c\u4e0d\u9700\u8981\u50cf\u8c03\u8272\u677f\u90a3\u6837\u4f7f\u7528<code>io_out</code>\u3002\u8bbe\u5b9a\u8fd9\u4e48\u591a\u6bb5\u5c31\u9700\u8981<code>8192*8=65535</code>\u5b57\u8282(64KB)\u3002\u8fd964KB\u5199\u5165\u5185\u5b58\u7684\u6570\u636e\u5c31\u79f0\u4e3aGDT\u3002</p> <p>GDT\u662f\"global segment descriptor table\"\u7684\u7f29\u5199\uff0c\u610f\u601d\u662f\u5168\u5c40\u6bb5\u53f7\u8bb0\u5f55\u8868\u3002\u5c06\u8fd9\u4e9b\u6570\u636e\u6574\u9f50\u5730\u6392\u5217\u5728\u5185\u5b58\u7684\u67d0\u4e2a\u5730\u65b9\uff0c\u7136\u540e\u5c06\u5185\u5b58\u7684\u8d77\u59cb\u5730\u5740\u548c\u6709\u6548\u8bbe\u5b9a\u4e2a\u6570\u653e\u5728CPU\u5185\u500d\u79f0\u4f5cGDTR\u7684\u7279\u6b8a\u5bc4\u5b58\u5668\u4e2d\uff0c\u8bbe\u5b9a\u5c31\u5b8c\u6210\u4e86\u3002</p> <p>IDT\u662f\"interrupt descriptor table\"\u7684\u7f29\u5199\uff0c\u76f4\u8bd1\u8fc7\u6765\u5c31\u662f\u4e2d\u65ad\u8bb0\u5f55\u8868\u3002\u5f53CPU\u9047\u5230\u5916\u90e8\u72b6\u51b5\u53d8\u5316\uff0c\u6216\u8005\u662f\u5185\u90e8\u5076\u7136\u53d1\u751f\u67d0\u4e9b\u9519\u8bef\u65f6\uff0c\u4f1a\u4e34\u65f6\u5207\u6362\u8fc7\u53bb\u5904\u7406\u8fd9\u79cd\u7a81\u53d1\u4e8b\u4ef6\u3002\u8fd9\u5c31\u662f\u4e2d\u65ad\u529f\u80fd\u3002</p> <p>CPU\u7684\u901f\u5ea6\u6781\u5feb\uff0c\u6bcf\u6267\u884c200\u4e07\u6761\u6307\u4ee4\uff0c\u67e5\u8be2\u4e00\u6b21\u952e\u76d8\u7684\u72b6\u6001\u5c31\u8db3\u591f\u4e86\u3002\u9664\u4e86\u952e\u76d8\uff0c\u8fd8\u6709\u9f20\u6807\u3001\u8f6f\u9a71\u7b49\u7b49\u5176\u4ed6\u8bbe\u5907\u3002\u5176\u4e2d\uff0c\u7f51\u5361\u8fd8\u9700\u8981CPU\u7684\u5feb\u901f\u54cd\u5e94\u3002\u54cd\u5e94\u4e0d\u53ca\u65f6\u7684\u8bdd\uff0c\u6570\u636e\u5c31\u53ef\u80fd\u63a5\u53d7\u5931\u8d25\u3002</p> <p>\u5982\u679c\u56e0\u4e3a\u5bb3\u6015\u5904\u7406\u4e0d\u53ca\u65f6\u800c\u9760\u67e5\u8be2\u7684\u65b9\u6cd5\u8f6e\u6d41\u67e5\u770b\u5404\u4e2a\u8bbe\u5907\u72b6\u6001\u7684\u8bdd\uff0cCPU\u5c31\u4f1a\u7a77\u4e8e\u5e94\u4ed8\uff0c\u4e0d\u80fd\u5b8c\u6210\u6b63\u5e38\u7684\u5904\u7406\u3002</p> <p>\u6b63\u662f\u4e3a\u89e3\u51b3\u4ee5\u4e0a\u95ee\u9898\uff0c\u624d\u6709\u4e86\u4e2d\u65ad\u673a\u5236\u3002\u5404\u4e2a\u8bbe\u5907\u6709\u53d8\u5316\u65f6\u5c31\u4ea7\u751f\u4e2d\u65ad\uff0c\u4e2d\u65ad\u53d1\u751f\u540e\uff0cCPU\u6682\u65f6\u505c\u6b62\u6b63\u5728\u5904\u7406\u7684\u4efb\u52a1\uff0c\u5e76\u505a\u597d\u63a5\u4e0b\u6765\u80fd\u591f\u7ee7\u7eed\u5904\u7406\u7684\u51c6\u5907\uff0c\u8f6c\u800c\u6267\u884c\u4e2d\u65ad\u7a0b\u5e8f\u3002\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\u5b8c\u4ee5\u540e\uff0c\u518d\u8c03\u7528\u4e8b\u5148\u8bbe\u5b9a\u597d\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u5904\u7406\u4e2d\u7684\u4efb\u52a1\u3002CPU\u53ef\u4ee5\u4e0d\u7528\u4e00\u76f4\u67e5\u8be2\u8bbe\u5907\uff0c\u800c\u5c06\u7cbe\u529b\u96c6\u4e2d\u5728\u5904\u7406\u4efb\u52a1\u4e0a\u3002</p> <p>\u8981\u4f7f\u7528\u9f20\u6807\uff0c\u5c31\u5fc5\u987b\u8981\u4f7f\u7528\u4e2d\u65ad\u3002\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u8bbe\u5b9aIDT\u3002IDT\u8bb0\u5f55\u4e86<code>0~255</code>\u7684\u4e2d\u65ad\u53f7\u7801\u4e0e\u8c03\u7528\u51fd\u6570\u7684\u5173\u7cfb\u3002</p> <pre><code>struct SEGMENT_DESCRIPTOR {\n    short limit_low, base_low;\n    char base_mid, access_right;\n    char limit_high, base_high;\n};\n\nstruct GATE_DESCRIPTOR {\n    short offset_low, selector;\n    char dw_count, access_right;\n    short offset_high;\n};\n\nvoid init_gdtidt(void)\n{\n    struct SEGMENT_DESCRIPTOR *gdt = (struct SEGMENT_DESCRIPTOR *) 0x00270000;\n    struct GATE_DESCRIPTOR    *idt = (struct GATE_DESCRIPTOR    *) 0x0026f800;\n    int i;\n\n    /* GDT\u306e\u521d\u671f\u5316 */\n    for (i = 0; i &lt; 8192; i++) {\n        set_segmdesc(gdt + i, 0, 0, 0);\n    }\n    set_segmdesc(gdt + 1, 0xffffffff, 0x00000000, 0x4092);\n    set_segmdesc(gdt + 2, 0x0007ffff, 0x00280000, 0x409a);\n    load_gdtr(0xffff, 0x00270000);\n\n    /* IDT\u306e\u521d\u671f\u5316 */\n    for (i = 0; i &lt; 256; i++) {\n        set_gatedesc(idt + i, 0, 0, 0);\n    }\n    load_idtr(0x7ff, 0x0026f800);\n\n    return;\n}\n\nvoid set_segmdesc(struct SEGMENT_DESCRIPTOR *sd, unsigned int limit, int base, int ar)\n{\n    if (limit &gt; 0xfffff) {\n        ar |= 0x8000; /* G_bit = 1 */\n        limit /= 0x1000;\n    }\n    sd-&gt;limit_low    = limit &amp; 0xffff;\n    sd-&gt;base_low     = base &amp; 0xffff;\n    sd-&gt;base_mid     = (base &gt;&gt; 16) &amp; 0xff;\n    sd-&gt;access_right = ar &amp; 0xff;\n    sd-&gt;limit_high   = ((limit &gt;&gt; 16) &amp; 0x0f) | ((ar &gt;&gt; 8) &amp; 0xf0);\n    sd-&gt;base_high    = (base &gt;&gt; 24) &amp; 0xff;\n    return;\n}\n\nvoid set_gatedesc(struct GATE_DESCRIPTOR *gd, int offset, int selector, int ar)\n{\n    gd-&gt;offset_low   = offset &amp; 0xffff;\n    gd-&gt;selector     = selector;\n    gd-&gt;dw_count     = (ar &gt;&gt; 8) &amp; 0xff;\n    gd-&gt;access_right = ar &amp; 0xff;\n    gd-&gt;offset_high  = (offset &gt;&gt; 16) &amp; 0xffff;\n    return;\n}\n</code></pre> <ul> <li><code>limit</code>\uff1a\u4e0a\u9650\uff0c\u6bb5\u7684\u5b57\u8282\u6570-1</li> <li><code>base</code>\uff1a\u57fa\u5740</li> <li>\u8bbf\u95ee\u6743\u9650</li> </ul> <p></p> <p>8192\u4e2a\u6bb5\u7684\u4e0a\u9650limit\uff0c\u57fa\u5740base\uff0c\u8bbf\u95ee\u6743\u9650access\u90fd\u8bbe\u4e3a0\u3002</p> <p>\u4ee5\u4e0a\u8bed\u53e5\u662f\u5bf9\u6bb5\u53f7\u4e3a1\u548c2\u7684\u4e24\u4e2a\u6bb5\u8fdb\u884c\u7684\u8bbe\u5b9a\u3002\u6bb5\u53f7\u4e3a1\u7684\u6bb5\uff0c\u4e0a\u9650\u503c\u4e3a<code>0xffffffff</code>\u5373\u5927\u5c0f\u6b63\u597d\u662f4GB),\u5730\u5740\u662f0\uff0c\u5b83\u8868\u793a\u7684\u662fCPU\u6240\u80fd\u7ba1\u7406\u7684\u5168\u90e8\u5185\u5b58\u672c\u8eab\u3002\u6bb5\u7684\u5c5e\u6027\u8bbe\u4e3a<code>0x4092</code>,\u5b83\u7684\u542b\u4e49\u6211\u4eec\u7559\u5f85\u660e\u5929\u518d\u8bf4\u3002\u4e0b\u9762\u6765\u770b\u770b\u6bb5\u53f7\u4e3a2\u7684\u6bb5\uff0c\u5b83\u7684\u5927\u5c0f\u662f512KB,\u5730\u5740\u662f<code>0x280000</code>\u3002\u8fd9\u6b63\u597d\u662f\u4e3a<code>bootpack.hrb</code>\u800c\u51c6\u5907\u7684\u3002\u7528\u8fd9\u4e2a\u6bb5\uff0c\u5c31\u53ef\u4ee5\u6267\u884c<code>bootpack.hrb</code>\u3002\u56e0\u4e3a<code>bootpack.hrb</code>\u662f\u4ee5<code>ORG 0</code>\u4e3a\u524d\u63d0\u7ffb\u8bd1\u6210\u7684\u673a\u5668\u8bed\u8a00\u3002</p>"},{"location":"%E7%AC%AC6%E5%A4%A9/","title":"\u7b2c6\u5929 \u5206\u5272\u7f16\u8bd1\u4e0e\u4e2d\u65ad\u5904\u7406","text":""},{"location":"%E7%AC%AC6%E5%A4%A9/#_1","title":"\u5206\u5272\u6e90\u6587\u4ef6","text":""},{"location":"%E7%AC%AC6%E5%A4%A9/#makefile","title":"\u6574\u7406Makefile","text":"<pre><code>bootpack.gas : bootpack.c Makefile\n    $(CC1) -o bootpack.gas bootpack.c\n</code></pre> <p>\u4e00\u822c\u89c4\u5219:\uff08\u666e\u901a\u89c4\u5219\u7684\u4f18\u5148\u7ea7\u66f4\u9ad8\uff09</p> <pre><code>%.gas : %.c Makefile\n    $(CC1) -o $*.gas $*.c\n</code></pre>"},{"location":"%E7%AC%AC6%E5%A4%A9/#_2","title":"\u6574\u7406\u5934\u6587\u4ef6","text":"<p>\u4e0d\u518d\u91cd\u590d\u58f0\u660e<code>void io_out8 (int port, int data)</code>\uff0c\u653e\u5230\u540d\u4e3a<code>bootpack.h</code>\u7684\u6587\u4ef6\u91cc\u3002</p> <pre><code>#include \"bootpack.h\"\n</code></pre>"},{"location":"%E7%AC%AC6%E5%A4%A9/#_3","title":"\u610f\u72b9\u672a\u5c3d","text":"naskfunc.nas<pre><code>    MOV    AX,[ESP+4]\n    MOV    [ESP+6],AX\n    LGDT   [ESP+6]\n    RET\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u7528\u6765\u5c06\u6307\u5b9a\u7684\u6bb5\u4e0a\u9650(limit)\u548c\u5730\u5740\u503c\u8d4b\u503c\u7ed9\u540d\u4e3a<code>GDTR</code>\u768448\u4f4d\u5bc4\u5b58\u5668\u3002\u8fd9\u4e2a\u5bc4\u5b58\u5668\u4e0d\u80fd\u7528<code>MOV</code>\u8d4b\u503c\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u662f\u6307\u5b9a\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff0c\u7136\u540e\u8bfb6\u4e2a\u5b57\u8282\u3002\u5b8c\u6210\u8fd9\u4e00\u4efb\u52a1\u7684\u6307\u4ee4\u5c31\u662f<code>LGDT</code>\u3002</p> <p>\u6267\u884c\u51fd\u6570\u4e4b\u524d\uff0c<code>DWORD [ESP+4]</code>\u91cc\u5b58\u653e\u7684\u662f\u6bb5\u4e0a\u9650<code>0x0000ffff</code>\uff0c<code>DWORD [ESP+8]</code>\u91cc\u5b58\u653e\u7684\u662f\u5730\u5740<code>0x00270000</code>\uff0c\u4e5f\u5c31\u662f<code>FF FF 00 00 00 00 27 00</code>\uff0c\u73b0\u5728\u8981\u4ece<code>[ESP+6]</code>\u5f00\u59cb\u8bfb6\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u8981\u5c06<code>[ESP+4]</code>\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230<code>[ESP+6]</code>\u4e2d\u3002</p> <pre><code>void set_segmdesc(struct SEGMENT_DESCRIPTOR *sd, unsigned int limit, int base, int ar)\n{\n    if (limit &gt; 0xfffff) {\n        ar |= 0x8000; /* G_bit = 1 */\n        limit /= 0x1000;\n    }\n    sd-&gt;limit_low    = limit &amp; 0xffff;\n    sd-&gt;base_low     = base &amp; 0xffff;\n    sd-&gt;base_mid     = (base &gt;&gt; 16) &amp; 0xff;\n    sd-&gt;access_right = ar &amp; 0xff;\n    sd-&gt;limit_high   = ((limit &gt;&gt; 16) &amp; 0x0f) | ((ar &gt;&gt; 8) &amp; 0xf0);\n    sd-&gt;base_high    = (base &gt;&gt; 24) &amp; 0xff;\n    return;\n}\n</code></pre> <p>\u5730\u5740\u5f53\u7136\u662f\u752832\u4f4d\u6765\u8868\u793a\uff0c\u8fd9\u4e2a\u5730\u5740\u5728CPU\u7684\u8bed\u8a00\u91cc\uff0c\u88ab\u79f0\u4e3a\u6bb5\u7684\u57fa\u5740\u3002<code>base</code>\u53c8\u5206\u4e3a<code>low</code>\u3001<code>mid</code>\u3001<code>high</code>3\u6bb5\uff0c\u6b63\u597d\u662f32\u4f4d\u3002</p> <p>\u6bb5\u4e0a\u9650\u6700\u5927\u662f4GB\uff0c\u662f\u4e00\u4e2a32\u4f4d\u6570\u5b57\uff0c\u672c\u8eab\u8981\u53604\u5b57\u8282\uff0c\u518d\u52a0\u4e0a\u57fa\u5740\uff0c\u4e00\u51718\u5b57\u8282\uff0c\u8fd9\u6837\u5c31\u628a\u6574\u4e2a\u7ed3\u6784\u4f53\u5360\u6ee1\u4e86\u3002</p> <p>\u56e0\u6b64\u6bb5\u4e0a\u9650\u53ea\u80fd\u4f7f\u752820\u4f4d\uff0c\u8fd9\u6837\u4e00\u6765\uff0c\u6bb5\u4e0a\u9650\u6700\u5927\u4e5f\u53ea\u80fd\u6307\u5b9a\u52301MB\u4e3a\u6b62\u3002\u5206\u522b\u5199\u5230<code>limit_low</code>\u548c<code>limit_high</code>\u91cc\u3002\u63a5\u7740\u8981\u628a\u6bb5\u5c5e\u6027\u5199\u5165<code>limit_high</code>\u7684\u9ad84\u4f4d\u91cc\u3002</p> <p>\u4e3a\u4e86\u8868\u793a4GB\uff0c\u6bb5\u7684\u5c5e\u6027\u91cc\u6709\u4e00\u4e2a\u6807\u5fd7\u4f4dG bit\u3002\u8fd9\u4e2a\u6807\u5fd7\u4f4d\u662f1\u7684\u65f6\u5019\uff0climit\u7684\u5355\u4f4d\u4e0d\u89e3\u91ca\u6210\u5b57\u8282\uff0c\u800c\u89e3\u91ca\u6210\u9875\u3002\u5728\u7535\u8111\u7684CPU\u91cc\uff0c1\u9875\u662f4KB\u3002\\(4KB \\times 1M = 4GB\\)</p> <p></p> <p>\u6bb5\u7684\u5c5e\u6027\uff0c\u53c8\u79f0\u4e3a\u6bb5\u7684\u8bbf\u95ee\u6743\u5c5e\u6027\u3002\u4e00\u517112\u4f4d\uff0c\u7528<code>access_right</code>\u6216<code>ar</code>\u6765\u8868\u793a\uff1a</p> <pre><code>xxxx0000xxxxxxxx\n</code></pre> <p><code>ar</code>\u7684\u9ad84\u4f4d\u88ab\u79f0\u4e3a\u6269\u5c55\u8bbf\u95ee\u6743\uff0c\u572880286\u65f6\u4ee3\u8fd8\u4e0d\u5b58\u5728\u3002\u8fd94\u4f4d\u7531GD00\u6784\u6210\uff0cG\u6307G bit\uff0cD\u6307\u6bb5\u7684\u6a21\u5f0f\uff0c1\u630732\u4f4d\u6a21\u5f0f\uff0c0\u630716\u4f4d\u6a21\u5f0f\u3002</p> <p><code>ar</code>\u7684\u4f4e8\u4f4d\u4ece80286\u65f6\u4ee3\u5c31\u6709\u4e86\uff1a</p> <p></p>"},{"location":"%E7%AC%AC6%E5%A4%A9/#pic","title":"\u521d\u59cb\u5316PIC","text":"<p>PIC\u5c068\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u96c6\u5408\u62101\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u3002\u4e3bPIC\u8d1f\u8d230-7\u53f7\u4e2d\u65ad\uff0c\u4ecePIC\u8d1f\u8d238-15\u53f7\u4e2d\u65ad\u3002PIC\u5185\u90e8\u6709\u5f88\u591a\u5bc4\u5b58\u5668\uff0c\u7528\u7aef\u53e3\u53f7\u7801\u533a\u522b\u3002</p> <p></p> int.c<pre><code>#include \"bootpack.h\"\n\nvoid init_pic(void)\n//PIC\u521d\u59cb\u5316\u7a0b\u5e8f\n{\n    io_out8(PIC0_IMR,  0xff  ); //\u7981\u6b62\u6240\u6709\u4e2d\u65ad\n    io_out8(PIC1_IMR,  0xff  ); //\u7981\u6b62\u6240\u6709\u4e2d\u65ad\n\n    io_out8(PIC0_ICW1, 0x11  ); //\u8fb9\u6cbf\u89e6\u53d1\u6a21\u5f0f\n    io_out8(PIC0_ICW2, 0x20  ); //IRQ0-7\u7531INT20-27\u63a5\u6536\n    io_out8(PIC0_ICW3, 1 &lt;&lt; 2); //PIC1\u7531IRQ2\u8fde\u63a5\n    io_out8(PIC0_ICW4, 0x01  ); //\u65e0\u7f13\u51b2\u533a\u6a21\u5f0f\n\n    io_out8(PIC1_ICW1, 0x11  ); //\u8fb9\u6cbf\u89e6\u53d1\u6a21\u5f0f\n    io_out8(PIC1_ICW2, 0x28  ); //IRQ\u7531INT28-2f\u63a5\u6536\n    io_out8(PIC1_ICW3, 2     ); //PIC1\u7531IRQ2\u8fde\u63a5\n    io_out8(PIC1_ICW4, 0x01  ); //\u65e0\u7f13\u51b2\u533a\u6a21\u5f0f\n\n    io_out8(PIC0_IMR,  0xfb  ); //11111011 PIC1\u4ee5\u5916\u5168\u90e8\u7981\u6b62 \n    io_out8(PIC1_IMR,  0xff  ); //\u7981\u6b62\u6240\u6709\u4e2d\u65ad\n\n    return;\n}\n</code></pre> <p>\u4e0b\u9762\u4ecb\u7ecdPIC\u7684\u5bc4\u5b58\u5668\uff0c\u5b83\u4eec\u90fd\u662f8\u4f4d\u5bc4\u5b58\u5668\u3002</p> <p><code>IMR</code>\u662f\u201cinterrupt mask register\u201d\uff0c\u610f\u601d\u662f\u4e2d\u65ad\u5c4f\u853d\u5bc4\u5b58\u5668\u30028\u4f4d\u5206\u522b\u5bf9\u5e948\u8defIRQ\u4fe1\u53f7\u3002\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u503c\u662f1\uff0c\u5219\u8be5\u4f4d\u6240\u5bf9\u5e94\u7684IRQ\u4fe1\u53f7\u88ab\u5c4f\u853d\uff0cPIC\u5c31\u5ffd\u89c6\u8be5\u8def\u4fe1\u53f7\u3002\u539f\u56e0\u5982\u4e0b\uff1a</p> <ul> <li>\u6b63\u5728\u5bf9\u4e2d\u65ad\u8bbe\u5b9a\u8fdb\u884c\u66f4\u6539\u65f6\uff0c\u5982\u679c\u518d\u63a5\u6536\u522b\u7684\u4e2d\u65ad\u4f1a\u5f15\u8d77\u6df7\u4e71\uff0c\u4e3a\u4e86\u9632\u6b62\u8fd9\u79cd\u60c5\u51b5\u7684\u53d1\u751f\uff0c\u5c31\u5fc5\u987b\u5c4f\u853d\u4e2d\u65ad\u3002</li> <li>\u9759\u7535\u5e72\u6270\u4e5f\u53ef\u80fd\u4f1a\u5f15\u8d77\u53cd\u5e94\u3002</li> </ul> <p><code>ICW</code>\u662f\u201cinitial control word\u201d\uff0c\u610f\u4e3a\u521d\u59cb\u5316\u63a7\u5236\u6570\u636e\u3002\u8fd9\u91cc\u4e0d\u662fCPU\uff0cword\u4e0d\u518d\u4ee3\u886816\u4f4d\u3002<code>ICW</code>\u67094\u4e2a\uff0c\u5206\u522b\u7f16\u53f71-4\uff0c\u5171\u67094\u4e2a\u5b57\u8282\u7684\u6570\u636e\u3002<code>ICW1</code>\u548c<code>ICW4</code>\u4e0e<code>PIC</code>\u4e3b\u677f\u914d\u7ebf\u65b9\u5f0f\u3001\u4e2d\u65ad\u4fe1\u53f7\u7684\u7535\u6c14\u7279\u6027\u6709\u5173\u3002<code>ICW3</code>\u662f\u6709\u5173\u4e3b\u4ece\u8fde\u63a5\u7684\u8bbe\u7f6e\uff0c\u75288\u4f4d\u8bbe\u5b9a<code>00000100</code>\u3002</p> <p><code>ICW2</code>\u51b3\u5b9a\u4e86IRQ\u4ee5\u54ea\u4e00\u53f7\u4e2d\u65ad\u901a\u77e5CPU\u3002\u4e2d\u65ad\u53d1\u751f\u4ee5\u540e\uff0c\u5982\u679cCPU\u53ef\u4ee5\u53d7\u7406\u8fd9\u4e2a\u4e2d\u65ad\uff0cCPU\u5c31\u4f1a\u547d\u4ee4PIC\u53d1\u90012\u4e2a\u5b57\u8282\u7684\u6570\u636e\u3002\u9001\u8fc7\u6765\u7684\u6570\u636e\u662f<code>0xcd 0x??</code>\u8fd9\u4e24\u4e2a\u5b57\u8282\u3002\u7531\u4e8e\u7535\u8def\u8bbe\u8ba1\u7684\u539f\u56e0\uff0c\u8fd9\u4e24\u4e2a\u5b57\u8282\u7684\u6570\u636e\u4eceCPU\u770b\u6765\uff0c\u4e0e\u4ece\u5185\u5b58\u8bfb\u8fdb\u6765\u7684\u7a0b\u5e8f\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff0c\u4e8e\u662f\u5c31\u628a\u6570\u636e\u5f53\u4f5c\u7a0b\u5e8f\u6267\u884c\u3002</p>"},{"location":"%E7%AC%AC6%E5%A4%A9/#_4","title":"\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u5236\u4f5c","text":"<p>\u9f20\u6807\u662f<code>IRQ12</code>\u3001\u952e\u76d8\u662f<code>IRQ1</code>\uff0c\u6240\u4ee5\u6211\u4eec\u7f16\u5199\u4e86\u7528\u4e8e<code>INT 0x2c</code>\u548c<code>INT 0x21</code>\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>\u5176\u5b9e\u5bf9\u4e8e\u67d0\u4e9b\u673a\u578b\u6765\u8bf4\uff0c\u968f\u7740PIC\u7684\u521d\u59cb\u5316\uff0c\u4f1a\u4ea7\u751f\u4e00\u6b21<code>IRQ7</code>\u4e2d\u65ad\uff0c\u5982\u679c\u4e0d\u5bf9\u8be5\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6267\u884c<code>STI</code>\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u542f\u52a8\u4f1a\u5931\u8d25\u3002</p> int.c<pre><code>void inthandler21(int *esp)\n//\u6765\u81eaPS/2\u952e\u76d8\u7684\u4e2d\u65ad\n{\n    struct BOOTINFO *binfo = (struct BOOTINFO *) ADR_BOOTINFO;\n    boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_000000, 0, 0, 32 * 8 - 1, 15);\n    putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 0, COL8_FFFFFF, \"INT 21 (IRQ-1) : PS/2 keyboard\");\n    for (;;) {\n        io_hlt();\n    }\n}\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u53ea\u662f\u663e\u793a\u4e00\u6761\u4fe1\u606f\uff0c\u7136\u540e\u4fdd\u6301\u5728\u5f85\u673a\u72b6\u6001\u3002</p> <p>\u4e2d\u65ad\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u4e0d\u80fd\u6267\u884c<code>return(RET)</code>\uff0c\u800c\u662f\u5fc5\u987b\u6267\u884c<code>IRETD</code>\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u501f\u52a9\u6c47\u7f16\u8bed\u8a00<code>naskfunc.nas</code>\u3002</p> naskfunc.nas<pre><code>EXTERN  _inthandler21, _inthandler27, _inthandler2c\n\n_asm_inthandler21:\n        PUSH    ES\n        PUSH    DS\n        PUSHAD\n        MOV     EAX,ESP\n        PUSH    EAX\n        MOV     AX,SS\n        MOV     DS,AX\n        MOV     ES,AX\n        CALL    _inthandler21\n        POP     EAX\n        POPAD\n        POP     DS\n        POP     ES\n        IRETD\n</code></pre>"},{"location":"%E7%AC%AC6%E5%A4%A9/#_5","title":"\u6808","text":"<p>\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u9700\u8981\u6682\u65f6\u8bb0\u5fc6\u67d0\u4e9b\u4e1c\u897f\u4ee5\u5907\u540e\u7528\u3002\u8fd9\u79cd\u76ee\u7684\u6027\u7684\u8bb0\u5fc6\u88ab\u79f0\u4e3a\u7f13\u51b2\u533a(buffer)\u3002\u7a81\u7136\u4e00\u4e0b\u5b50\u63a5\u6536\u5230\u5927\u91cf\u4fe1\u606f\u65f6\uff0c\u5148\u628a\u4ed6\u4eec\u90fd\u4fdd\u5b58\u5230\u7f13\u51b2\u533a\u91cc\uff0c\u7136\u540e\u518d\u6162\u6162\u5904\u7406\u3002</p> <ul> <li>\u5148\u8fdb\u5148\u51fa FIFO</li> <li>\u5148\u8fdb\u540e\u51fa FILO</li> </ul> <p>\u6808\u662fFILO\u578b\u7684\u7f13\u51b2\u533a\u3002</p> <p><code>PUSH EAX</code>\u8fd9\u4e2a\u6307\u4ee4\u76f8\u5f53\u4e8e\uff1a</p> <pre><code>ADD    ESP,-4\nMOV    [SS:ESP],EAX\n</code></pre> <p><code>POP EAX</code>\u76f8\u5f53\u4e8e\uff1a</p> <pre><code>MOV   EAX,[SS:ESP]\nADD   ESP,4\n</code></pre> <p>\u6240\u4ee5\uff0c\u5982\u679c\u5199\u4e86\u4ee5\u4e0b\u7a0b\u5e8f\uff1a</p> <pre><code>PUSH EAX\nPUSH ECX\nPUSH EDX\n\u5404\u79cd\u5904\u7406\nPOP  EDX\nPOP  ECX\nPOP  EAX\n</code></pre> <p>\u5728\u5404\u79cd\u5904\u7406\u90a3\u91cc\uff0c\u5373\u4f7f\u628a<code>EAX ECX EDX</code>\u90fd\u6539\u4e86\uff0c\u6700\u540e\u4e5f\u4f1a\u6062\u590d\u56de\u539f\u6765\u7684\u503c\u3002</p> <p><code>PUSHAD</code>\u76f8\u5f53\u4e8e\uff1a</p> <pre><code>PUSH EAX\nPUSH ECX\nPUSH EDX\nPUSH EBX\nPUSH ESP\nPUSH EBP\nPUSH ESI\nPUSH EDI\n</code></pre> <p>\u53cd\u8fc7\u6765\uff0c<code>POPAD</code>\u6307\u4ee4\u76f8\u5f53\u4e8e\u6309\u4ee5\u4e0a\u76f8\u53cd\u7684\u987a\u5e8f\uff0c\u628a\u5b83\u4eec\u5168\u90fd<code>POP</code>\u51fa\u6765\u3002</p> <p>\u7ed3\u679c\uff0c\u8fd9\u4e2a\u51fd\u6570\u53ea\u662f\u5c06\u5bc4\u5b58\u5668\u7684\u503c\u4fdd\u5b58\u5230\u6808\u91cc\uff0c\u7136\u540e\u5c06<code>DS</code>\u548c<code>ES</code>\u8c03\u6574\u5230\u4e0e<code>SS</code>\u76f8\u7b49\uff0c\u518d\u8c03\u7528<code>_inthandler21</code>\uff0c\u8fd4\u56de\u4ee5\u540e\uff0c\u5c06\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c\u518d\u8fd4\u56de\u5230\u539f\u6765\u7684\u503c\uff0c\u7136\u540e\u6267\u884c<code>IRETD</code>\u3002</p> <p>\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u5c0f\u5fc3\u7ffc\u7ffc\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u4e5f\u9700\u8981\u8ba9<code>DS</code>\u548c<code>ES</code>\u4e0e<code>SS</code>\u76f8\u7b49 \uff0c\u56e0\u4e3aC\u8bed\u8a00\u8ba4\u4e3a<code>DS</code>\u3001<code>ES</code>\u3001<code>SS</code>\uff0c\u4ed6\u4eec\u90fd\u662f\u6307\u540c\u4e00\u4e2a\u6bb5\u3002</p> <p><code>CALL</code>\u662f\u8c03\u7528\u51fd\u6570\u7684\u6307\u4ee4\uff0c\u8fd9\u6b21\u8981\u8c03\u7528\u4e00\u4e2a\u6ca1\u6709\u5728<code>naskfunc.nas</code>\u4e2d\u7684\u51fd\u6570\uff0c\u6240\u4ee5\u6700\u521d\u6211\u4eec\u7528\u4e00\u4e2a<code>EXTERN</code>\u6765\u901a\u77e5<code>nask</code> \u3002</p> <p>\u4e0b\u9762\u8981\u5c06\u8fd9\u4e00\u51fd\u6570\u6ce8\u518c\u5230<code>IDT</code>\u4e2d\u53bb\uff1a</p> dsctbl.c<pre><code>set_gatedesc(idt + 0x21, (int) asm_inthandler21, 2 * 8, AR_INTGATE32);\n    set_gatedesc(idt + 0x27, (int) asm_inthandler27, 2 * 8, AR_INTGATE32);\n    set_gatedesc(idt + 0x2c, (int) asm_inthandler2c, 2 * 8, AR_INTGATE32);\n</code></pre> <p><code>asm_inthandler21</code>\u6ce8\u518c\u5728idt\u7684\u7b2c<code>0x21</code>\u53f7\uff0c<code>2 * 8</code>\u4ee3\u8868\u6bb5\u53f7\u662f2\uff0c\u4f4e\u4e09\u4f4d\u6709\u5176\u4ed6\u7684\u610f\u601d\u3002</p> <p>\u53f7\u7801\u4e3a2\u7684\u6bb5\u662f\u4ec0\u4e48\u6837\u7684\u6bb5\u5462\uff1f</p> <pre><code>set_segmdesc(gdt + 2, LIMIT_BOTPAK, ADR_BOTPAK, AR_CODE32_ER);\n\n#define ADR_BOTPAK      0x00280000\n#define LIMIT_BOTPAK    0x0007ffff\n#define AR_CODE32_ER    0x409a\n\n#define AR_INTGATE32    0x008e\n</code></pre> <p>\u7a0b\u5e8f\u4e2d\u6709\u4ee5\u4e0a\u8bed\u53e5\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6bb5\u6b63\u597d\u6db5\u76d6\u4e86\u6574\u4e2a<code>bootpack.hrb</code>\u3002</p> <p>\u6700\u540e\u7684<code>AR_INTGATE32</code>\u5c06<code>IDT</code>\u7684\u5c5e\u6027\uff0c\u8bbe\u5b9a\u4e3a<code>0x008e</code>\u3002\u5b83\u8868\u793a\u8fd9\u662f\u7528\u4e8e\u4e2d\u65ad\u5904\u7406\u7684\u6709\u6548\u8bbe\u5b9a\u3002</p> <p>\u6700\u540e\u522b\u5fd8\u4e86\uff1a</p> <pre><code>io_sti();\nio_out8(PIC0_IMR, 0xf9); /* PIC1\u3068\u30ad\u30fc\u30dc\u30fc\u30c9\u3092\u8a31\u53ef(11111001) */\nio_out8(PIC1_IMR, 0xef); /* \u30de\u30a6\u30b9\u3092\u8a31\u53ef(11101111) *\n</code></pre> <p></p>"},{"location":"%E7%AC%AC7%E5%A4%A9/","title":"\u7b2c7\u5929 FIFO\u4e0e\u9f20\u6807\u63a7\u5236","text":""},{"location":"%E7%AC%AC7%E5%A4%A9/#_1","title":"\u83b7\u53d6\u6848\u4ef6\u7f16\u7801","text":"<p>\u6211\u4eec\u5c06\u7a0b\u5e8f\u6539\u5584\u4e00\u4e0b\uff0c\u8ba9\u7a0b\u5e8f\u5728\u6309\u4e0b\u4e00\u4e2a\u952e\u540e\u4e0d\u7ed3\u675f\uff0c\u800c\u662f\u628a\u6240\u6309\u952e\u7684\u7f16\u7801\u5728\u753b\u9762\u4e0a\u663e\u793a\u51fa\u6765\u3002</p> int.c<pre><code>#define PORT_KEYDAT     0x0060\n\nvoid inthandler21(int *esp)\n{\n    struct BOOTINFO *binfo = (struct BOOTINFO *) ADR_BOOTINFO;\n    unsigned char data, s[4];\n    io_out8(PIC0_OCW2, 0x61);   /* IRQ-01\u53d7\u4ed8\u5b8c\u4e86\u3092PIC\u306b\u901a\u77e5 */\n    data = io_in8(PORT_KEYDAT);\n\n    sprintf(s, \"%02X\", data);\n    boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 0, 16, 15, 31);\n    putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n\n    return;\n}\n</code></pre> <p><code>io_out8(PIC0_OCW2, 0x61);</code>\u7528\u6765\u901a\u77e5PIC\uff1a\u5df2\u7ecf\u77e5\u9053\u751f\u4e86IRQ1\u4e2d\u65ad\u4e86\u3002\u5982\u679c\u662fIRQ3\uff0c\u5219\u5199\u6210<code>0x63</code>\uff0c\u8f93\u51fa\u7ed9<code>OCW2</code>\u5c31\u53ef\u4ee5\u3002</p> <p>\u6267\u884c\u8fd9\u53e5\u8bdd\u4e4b\u540e\uff0cPIC\u7ee7\u7eed\u76d1\u89c6IRQ1\u4e2d\u65ad\u662f\u5426\u53d1\u751f\u3002</p> <p></p> <p>\u952e\u6309\u4e0b\u53bb\u548c\u677e\u5f00\u4f1a\u5206\u522b\u51fa\u73b0\u4e00\u4e2a\u5341\u516d\u8fdb\u5236\u6570\u5b57\u3002</p>"},{"location":"%E7%AC%AC7%E5%A4%A9/#_2","title":"\u52a0\u5feb\u4e2d\u65ad\u5904\u7406","text":"<p>\u95ee\u9898\u662f\uff0c\u5b57\u7b26\u663e\u793a\u7684\u5185\u5bb9\u88ab\u653e\u5728\u4e86\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e2d\u3002\u6240\u8c13\u4e2d\u65ad\u5904\u7406\uff0c\u672c\u6765\u5c31\u662f\u6253\u65adCPU\u672c\u6765\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u5fc5\u987b\u5b8c\u6210\u7684\u5e72\u51c0\u5229\u7d22\u3002\u800c\u4e14\u4e2d\u65ad\u5904\u7406\u671f\u95f4\uff0c\u4e0d\u518d\u63a5\u6536\u522b\u7684\u4e2d\u65ad\u3002\u6240\u4ee5\u5982\u679c\u5904\u7406\u952e\u76d8\u7684\u4e2d\u65ad\u901f\u5ea6\u592a\u6162\uff0c\u5c31\u4f1a\u51fa\u73b0\u9f20\u6807\u7684\u8fd0\u52a8\u4e0d\u8fde\u8d2f\u3001\u4e0d\u80fd\u4ece\u7f51\u4e0a\u63a5\u6536\u6570\u636e\u7b49\u60c5\u51b5\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u5b57\u7b26\u663e\u793a\u8981\u82b1\u5927\u5757\u65f6\u95f4\u6765\u8fdb\u884c\u5904\u7406\u3002\u4ec5\u4ec5\u753b\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c31\u8981\u6267\u884c<code>8*16=128</code>\u6b21if\u8bed\u53e5\u3002</p> <p>\u90a3\u8be5\u5982\u4f55\u662f\u597d\u5462\uff1f\u7ed3\u8bba\u5c31\u662f\uff0c\u5148\u5c06\u6309\u952e\u7684\u7f16\u7801\u63a5\u6536\u4e0b\u6765\uff0c\u4fdd\u5b58\u5230\u53d8\u91cf\u91cc\uff0c\u7136\u540e\u7531<code>HariMain</code>\u5076\u5c14\u53bb\u67e5\u770b\u8fd9\u4e2a\u53d8\u91cf\u3002\u5982\u679c\u53d1\u73b0\u6709\u4e86\u6570\u636e\uff0c\u5c31\u628a\u5b83\u663e\u793a\u51fa\u6765\u3002</p> <pre><code>struct KEYBUF {\n    unsigned char data, flag;\n};\nstruct KEYBUF keybuf;\n\nvoid inthandler21(int *esp)\n{\n    unsigned char data;\n    io_out8(PIC0_OCW2, 0x61);   /* IRQ-01\u53d7\u4ed8\u5b8c\u4e86\u3092PIC\u306b\u901a\u77e5 */\n    data = io_in8(PORT_KEYDAT);\n    if (keybuf.flag == 0) {\n        keybuf.data = data;\n        keybuf.flag = 1;\n    }\n    return;\n}\n</code></pre> <p>\u5bf9<code>HariMain</code>\u6700\u540e\u7684\u65e0\u9650\u5faa\u73af\u8fdb\u884c\u4fee\u6539\uff1a</p> <pre><code>    for (;;) {\n        io_cli();\n        if (keybuf.flag == 0) {\n            io_stihlt();\n        } else {\n            i = keybuf.data;\n            keybuf.flag = 0;\n            io_sti();\n            sprintf(s, \"%02X\", i);\n            boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 0, 16, 15, 31);\n            putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n        }\n    }\n</code></pre> <p>\u6839\u636eCPU\u7684\u89c4\u8303\uff0c\u673a\u5668\u8bed\u8a00\u7684<code>STI</code>\u6307\u4ee4\u4e4b\u540e\uff0c\u5982\u679c\u7d27\u8ddf\u7740<code>HLT</code>\u6307\u4ee4\uff0c\u90a3\u4e48\u5c31\u6682\u4e0d\u53d7\u7406\u8fd9\u4e24\u6761\u6307\u4ee4\u4e4b\u95f4\u7684\u4e2d\u65ad\uff0c\u800c\u8981\u7b49\u5230<code>HLT</code>\u6307\u4ee4\u4e4b\u540e\u624d\u53d7\u7406\uff0c\u6240\u4ee5\u4f7f\u7528<code>io_stihlt</code>\u51fd\u6570\u5c31\u80fd\u514b\u670d\u8fd9\u4e00\u95ee\u9898\u3002</p> <p></p> <p>\u4f46\u662f\u952e\u76d8\u7684\u53f3<code>ctrl</code>\u6309\u4e0b\u8fd8\u662f\u677e\u5f00\uff0c\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u90fd\u662f<code>E0</code>\uff0c\u539f\u56e0\u662f\u6309\u4e0b\u65f6\uff0c\u4ea7\u751f\u952e\u7801\u503c<code>E0 1D</code>\uff0c\u800c\u677e\u5f00\u540e\u4ea7\u751f<code>E0 9D</code>\uff0c\u6240\u4ee5\u4e00\u6b21\u6309\u952e\u4ea7\u751f\u4e24\u6b21\u4e2d\u65ad\uff0c\u7b2c\u4e00\u6b21\u4e2d\u65ad\u53d1\u9001<code>E0</code>\uff0c\u7b2c\u4e8c\u6b21\u4e2d\u65ad\u65f6\u53d1\u9001<code>1D</code>\u3002\u4f46\u662f<code>1D</code>\u88ab\u820d\u5f03\u4e86\uff0c\u56e0\u4e3a\u8981\u663e\u793a<code>E0</code>\u3002</p>"},{"location":"%E7%AC%AC7%E5%A4%A9/#fifo","title":"\u5236\u4f5cFIFO\u7f13\u51b2\u533a","text":"<p>\u95ee\u9898\u51fa\u5728\u7f13\u51b2\u533a\uff0c\u5b83\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u5b57\u8282\uff1a</p> <pre><code>struct KEYBUF {\n    unsigned char data, flag;\n};\n</code></pre> <p>\u53ef\u4ee5\u6539\u4e3a\uff1a</p> <pre><code>struct KEYBUF\n{\n    unsigned char data[4];\n}\n</code></pre> <p>\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u4e2aFIFO\u578b\u7f13\u51b2\u533a\uff0c\u5e0c\u671b\u8f93\u5165ABC\uff0c\u8f93\u51faABC\u3002</p> int.c<pre><code>struct KEYBUF {\n    unsigned char data[32];\n    int next;\n};\nvoid inthandler21(int *esp)\n{\n    unsigned char data;\n    io_out8(PIC0_OCW2, 0x61);   //\u901a\u77e5PIC IRQ-01\u5df2\u7ecf\u53d7\u7406\u5b8c\u6bd5\n    data = io_in8(PORT_KEYDAT);\n    if (keybuf.next &lt; 32) {\n        keybuf.data[keybuf.next] = data;\n        keybuf.next++;\n    }\n    return;\n}\n</code></pre> bootpack.c<pre><code>    for (;;) {\n        io_cli();\n        if (keybuf.next == 0) {\n            io_stihlt();\n        } else {\n            i = keybuf.data[0];\n            keybuf.next--;\n            for (j = 0; j &lt; keybuf.next; j++) {\n                keybuf.data[j] = keybuf.data[j + 1];\n            }\n            io_sti();\n            sprintf(s, \"%02X\", i);\n            boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 0, 16, 15, 31);\n            putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n        }\n    }\n</code></pre> <p>\u73b0\u5728<code>inthandler21</code>\u6ca1\u6709\u95ee\u9898\u4e86\uff0c\u4f46\u662f<code>HariMain</code>\u4e2d\uff0c\u7981\u6b62\u4e2d\u65ad\u671f\u95f4\u9700\u8981\u79fb\u9001\u5927\u91cf\u6570\u636e\u3002</p>"},{"location":"%E7%AC%AC7%E5%A4%A9/#fifo_1","title":"\u6539\u5584FIFO\u7f13\u51b2\u533a","text":"<p>\u6211\u4eec\u80fd\u5f00\u53d1\u4e00\u4e2a\u4e0d\u9700\u8981\u6570\u636e\u79fb\u9001\u64cd\u4f5c\u7684FIFO\u578b\u7f13\u51b2\u533a\u3002</p> <p>\u8fd9\u4e2a\u6280\u5de7\u7684\u601d\u8def\u662f\uff0c\u4e0d\u4ec5\u8981\u7ef4\u62a4\u4e0b\u4e00\u4e2a\u8981\u5199\u5165\u6570\u636e\u7684\u4f4d\u7f6e\uff0c\u8fd8\u8981\u7ef4\u62a4\u4e0b\u4e00\u4e2a\u8981\u8bfb\u51fa\u6570\u636e\u7684\u4f4d\u7f6e\uff0c\u8fd9\u5c31\u597d\u50cf\u6570\u636e\u8bfb\u51fa\u4f4d\u7f6e\u5728\u8ffd\u7740\u6570\u636e\u5199\u5165\u4f4d\u7f6e\u8dd1\u4e00\u6837\u3002</p> <p></p> <p>\u5982\u679c\u5f53\u4e0b\u4e00\u4e2a\u6570\u636e\u5199\u5165\u4f4d\u7f6e\u5230\u8fbe\u7f13\u51b2\u533a\u7ec8\u70b9\u65f6\uff0c\u6570\u636e\u8bfb\u51fa\u4f4d\u7f6e\u4e5f\u6070\u597d\u5230\u8fbe\u7f13\u51b2\u533a\u7684\u7ec8\u70b9\uff0c\u4e5f\u5c31\u662f\u8bf4\u7f13\u51b2\u533a\u6b63\u597d\u53d8\u7a7a\u3002\u90a3\u8fd8\u597d\u8bf4\uff0c\u6211\u4eec\u53ea\u8981\u5c06\u4e0b\u4e00\u4e2a\u6570\u636e\u5199\u5165\u4f4d\u7f6e\u548c\u4e0b\u4e00\u4e2a\u6570\u636e\u8bfb\u51fa\u4f4d\u7f6e\u90fd\u518d\u7f6e0\u5c31\u884c\u4e86\u3002</p> <p>\u4f46\u603b\u8fd8\u662f\u6709\u6570\u636e\u8bfb\u51fa\u4f4d\u7f6e\u6ca1\u6709\u8ffd\u4e0a\u6570\u636e\u5199\u5165\u4f4d\u7f6e\u7684\u60c5\u51b5\u3002\u8fd9\u65f6\uff0c\u53c8\u4e0d\u5f97\u4e0d\u8fdb\u884c\u6570\u636e\u79fb\u9001\u64cd\u4f5c\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u201c\u5708\u201d\uff1a</p> bootpack.h<pre><code>struct KEYBUF {\n    unsigned char data[32];\n    int next_r, next_w, len;\n};\n</code></pre> <p><code>len</code>\u6307\u7f13\u51b2\u533a\u80fd\u8bb0\u5f55\u591a\u5c11\u5b57\u8282\u7684\u6570\u636e\u3002</p> int.c<pre><code>void inthandler21(int *esp)\n{\n    unsigned char data;\n    io_out8(PIC0_OCW2, 0x61);   /* IRQ-01\u53d7\u4ed8\u5b8c\u4e86\u3092PIC\u306b\u901a\u77e5 */\n    data = io_in8(PORT_KEYDAT);\n    if (keybuf.len &lt; 32) {\n        keybuf.data[keybuf.next_w] = data;\n        keybuf.len++;\n        keybuf.next_w++;\n        if (keybuf.next_w == 32) {\n            keybuf.next_w = 0;\n        }\n    }\n    return;\n}\n</code></pre> <p>\u8bfb\u51fa\u6570\u636e\u7684\u7a0b\u5e8f\u5982\u4e0b\uff1a</p> bootpack.c<pre><code>for (;;) {\n    io_cli();\n    if (keybuf.len == 0) {\n        io_stihlt();\n    } else {\n        i = keybuf.data[keybuf.next_r];\n        keybuf.len--;\n        keybuf.next_r++;\n        if (keybuf.next_r == 32) {\n            keybuf.next_r = 0;\n        }\n        io_sti();\n        sprintf(s, \"%02X\", i);\n        boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 0, 16, 15, 31);\n        putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n    }\n}\n</code></pre>"},{"location":"%E7%AC%AC7%E5%A4%A9/#fifo_2","title":"\u6574\u7406FIFO\u7f13\u51b2\u533a","text":"<p>\u6211\u4eec\u8ba9FIFO\u6709\u4e00\u4e9b\u901a\u7528\u6027\uff0c\u5728\u522b\u7684\u5730\u65b9\u4e5f\u80fd\u53d1\u6325\u4f5c\u7528\u3002</p> <p>\u9f20\u6807\u53ea\u8981\u7a0d\u5fae\u52a8\u4e00\u52a8\uff0c\u5c31\u4f1a\u8fde\u7eed\u53d1\u90013\u4e2a\u5b57\u8282\u7684\u6570\u636e\u3002</p> fifo.c<pre><code>void fifo8_init(struct FIFO8 *fifo, int size, unsigned char *buf)\n//\u521d\u59cb\u5316FIFO\u7f13\u51b2\u533a\n{\n    fifo-&gt;size = size;\n    fifo-&gt;buf = buf;\n    fifo-&gt;free = size; //\u7f13\u51b2\u533a\u5927\u5c0f\n    fifo-&gt;flags = 0;\n    fifo-&gt;p = 0; //\u4e0b\u4e00\u4e2a\u6570\u636e\u5199\u5165\u4f4d\u7f6e\n    fifo-&gt;q = 0; //\u4e0b\u4e00\u4e2a\u6570\u636e\u8bfb\u51fa\u4f4d\u7f6e\n    return;\n}\n</code></pre> fifo.c<pre><code>#define FLAGS_OVERRUN       0x0001\n\nint fifo8_put(struct FIFO8 *fifo, unsigned char data)\n//\u5411FIFO\u4f20\u9001\u6570\u636e\u5e76\u4fdd\u5b58\n{\n    if (fifo-&gt;free == 0) {\n        //\u7a7a\u4f59\u6ca1\u6709\u4e86\uff0c\u6ea2\u51fa\n        fifo-&gt;flags |= FLAGS_OVERRUN;\n        return -1;\n    }\n    fifo-&gt;buf[fifo-&gt;p] = data;\n    fifo-&gt;p++;\n    if (fifo-&gt;p == fifo-&gt;size) {\n        fifo-&gt;p = 0;\n    }\n    fifo-&gt;free--;\n    return 0;\n}\n</code></pre> fifo.c<pre><code>int fifo8_get(struct FIFO8 *fifo)\n//\u4eceFIFO\u53d6\u5f97\u4e00\u4e2a\u6570\u636e\n{\n    int data;\n    if (fifo-&gt;free == fifo-&gt;size) {\n        //\u5982\u679c\u7f13\u51b2\u533a\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de-1\n        return -1;\n    }\n    data = fifo-&gt;buf[fifo-&gt;q];\n    fifo-&gt;q++;\n    if (fifo-&gt;q == fifo-&gt;size) {\n        fifo-&gt;q = 0;\n    }\n    fifo-&gt;free++;\n    return data;\n}\n</code></pre> fifo8_status<pre><code>int fifo8_status(struct FIFO8 *fifo)\n//**\u62a5\u544a\u4e00\u4e0b\u5230\u5e95\u79ef\u6512\u4e86**\n{\n    return fifo-&gt;size - fifo-&gt;free;\n}\n</code></pre> <p>\u4f7f\u7528\u4ee5\u4e0a\u51fd\u6570\u5199\u6210\u4e86\u4e0b\u9762\u7684\u7a0b\u5e8f\u6bb5\uff1a</p> int.c<pre><code>struct fifo8 {\n    unsigned char *buf;\n    int p, q, size, free, flags;\n};\n\nstruct FIFO8 keyfifo;\n\nvoid inthandler21(int *esp)\n{\n    unsigned char data;\n    io_out8(PIC0_OCW2, 0x61);   /* IRQ-01\u53d7\u4ed8\u5b8c\u4e86\u3092PIC\u306b\u901a\u77e5 */\n    data = io_in8(PORT_KEYDAT);\n    fifo8_put(&amp;keyfifo, data);\n    return;\n}\n</code></pre> bootpack.c<pre><code>//MariMain\n\nchar s[40], mcursor[256], keybuf[32];\nfifo8_init(&amp;keyfifo, 32, keybuf);\n\nfor (;;) {\n        io_cli();\n        if (fifo8_status(&amp;keyfifo) == 0) {\n            io_stihlt();\n        } else {\n            i = fifo8_get(&amp;keyfifo);\n            io_sti();\n            sprintf(s, \"%02X\", i);\n            boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 0, 16, 15, 31);\n            putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n        }\n    }\n</code></pre>"},{"location":"%E7%AC%AC7%E5%A4%A9/#_3","title":"\u603b\u7b97\u8bb2\u5230\u9f20\u6807\u4e86","text":"bootpack.c<pre><code>#define PORT_KEYDAT             0x0060\n#define PORT_KEYSTA             0x0064\n#define PORT_KEYCMD             0x0064\n#define KEYSTA_SEND_NOTREADY    0x02\n#define KEYCMD_WRITE_MODE       0x60\n#define KBC_MODE                0x47\n\nvoid wait_KBC_sendready(void)\n{\n    //\u7b49\u5f85\u952e\u76d8\u63a7\u5236\u7535\u8def\u51c6\u5907\u5b8c\u6bd5\n    for (;;) {\n        if ((io_in8(PORT_KEYSTA) &amp; KEYSTA_SEND_NOTREADY) == 0) {\n            break;\n        }\n    }\n    return;\n}\nvoid init_keyboard(void)\n{\n    //\u521d\u59cb\u5316\u952e\u76d8\u63a7\u5236\u7535\u8def\n    wait_KBC_sendready();\n    io_out8(PORT_KEYCMD, KEYCMD_WRITE_MODE);\n    wait_KBC_sendready();\n    io_out8(PORT_KEYDAT, KBC_MODE);\n    return;\n}\n</code></pre> <p>\u51fd\u6570<code>wait_KBC_sendready</code>\u7684\u4f5c\u7528\u662f\u8ba9\u952e\u76d8\u63a7\u5236\u7535\u8def\u505a\u597d\u51c6\u5907\u52a8\u4f5c\uff0c\u7b49\u5f85\u63a7\u5236\u6307\u4ee4\u7684\u5230\u6765\u3002\u56e0\u4e3aCPU\u5f88\u5feb\uff0c\u4f46\u662f\u952e\u76d8\u63a7\u5236\u7535\u8def\u5374\u4e0d\u5feb\uff0cCPU\u7684\u6709\u4e9b\u6307\u4ee4\u5f97\u4e0d\u5230\u6267\u884c\u3002</p> <p><code>init_keyboard</code>\u4e00\u8fb9\u786e\u8ba4\u53ef\u5426\u5f80\u952e\u76d8\u63a7\u5236\u7535\u8def\u4f20\u9001\u4fe1\u606f\uff0c\u4e00\u8fb9\u53d1\u9001\u6a21\u5f0f\u8bbe\u5b9a\u6307\u4ee4\u3002</p> <p>\u4e0b\u9762\uff0c\u6211\u4eec\u6765\u6fc0\u6d3b\u9f20\u6807\uff1a</p> bootpack.c<pre><code>#define KEYCMD_SENDTO_MOUSE     0xd4\n#define MOUSECMD_ENABLE         0xf4\n\nvoid enable_mouse(void)\n{\n    //\u6fc0\u6d3b\u9f20\u6807\n    wait_KBC_sendready();\n    io_out8(PORT_KEYCMD, KEYCMD_SENDTO_MOUSE);\n    wait_KBC_sendready();\n    io_out8(PORT_KEYDAT, MOUSECMD_ENABLE);\n    return; //\u987a\u5229\u7684\u8bdd\uff0c\u952e\u76d8\u63a7\u5236\u5176\u4f1a\u8fd4\u9001\u56deACK(0xfa)\n}\n</code></pre> <p>\u8fd9\u4e2a\u51fd\u6570\u4e0e<code>init_ketboard</code>\u51fd\u6570\u975e\u5e38\u76f8\u4f3c\u3002\u4e0d\u540c\u70b9\u4ec5\u5728\u4e8e\u5199\u5165\u7684\u6570\u636e\u4e0d\u540c\u3002\u5982\u679c\u5f80\u952e\u76d8\u63a7\u5236\u7535\u8def\u53d1\u9001\u6307\u4ee4<code>0xd4</code>\uff0c\u4e0b\u4e00\u4e2a\u6570\u636e\u5c31\u4f1a\u81ea\u52a8\u53d1\u9001\u7ed9\u9f20\u6807\u3002</p> <p></p>"},{"location":"%E7%AC%AC7%E5%A4%A9/#_4","title":"\u4ece\u9f20\u6807\u63a5\u6536\u6570\u636e","text":"<p>\u65e2\u7136\u4e2d\u65ad\u5df2\u7ecf\u6765\u4e86\uff0c\u73b0\u5728\u5c31\u8ba9\u6211\u4eec\u53d6\u51fa\u4e2d\u65ad\u6570\u636e\u5427\u3002</p> int.c<pre><code>struct FIFO8 mousefifo;\n\nvoid inthandler2c(int *esp)\n//\u6765\u81eaPS/2\u9f20\u6807\u7684\u4e2d\u65ad\n{\n    unsigned char data;\n    io_out8(PIC1_OCW2, 0x64);   //\u901a\u77e5PIC1 IRQ12\u7684\u53d7\u7406\u5df2\u7ecf\u5b8c\u6210\n    io_out8(PIC0_OCW2, 0x62);   //\u901a\u77e5PIC0 IRQ12\u7684\u53d7\u7406\u5df2\u7ecf\u5b8c\u6210\n    data = io_in8(PORT_KEYDAT);\n    fifo8_put(&amp;mousefifo, data);\n    return;\n}\n</code></pre> bootpack.c<pre><code>fifo8_init(&amp;keyfifo, 32, keybuf);\nfifo8_init(&amp;mousefifo, 128, mousebuf);\n\nfor (;;) {\n        io_cli();\n        if (fifo8_status(&amp;keyfifo) + fifo8_status(&amp;mousefifo) == 0) {\n            io_stihlt();\n        } else {\n            if (fifo8_status(&amp;keyfifo) != 0) {\n                i = fifo8_get(&amp;keyfifo);\n                io_sti();\n                sprintf(s, \"%02X\", i);\n                boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484,  0, 16, 15, 31);\n                putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n            } else if (fifo8_status(&amp;mousefifo) != 0) {\n                i = fifo8_get(&amp;mousefifo);\n                io_sti();\n                sprintf(s, \"%02X\", i);\n                boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 32, 16, 47, 31);\n                putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 32, 16, COL8_FFFFFF, s);\n            }\n        }\n    }\n</code></pre> <p></p>"},{"location":"%E7%AC%AC8%E5%A4%A9/","title":"\u9f20\u6807\u63a7\u5236\u4e0e32\u4f4d\u6a21\u5f0f\u5207\u6362","text":""},{"location":"%E7%AC%AC8%E5%A4%A9/#1","title":"\u9f20\u6807\u89e3\u8bfb(1)","text":"<p>\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u80fd\u4ece\u9f20\u6807\u53d6\u5f97\u6570\u636e\u4e86\u3002\u7d27\u63a5\u7684\u95ee\u9898\u662f\u8981\u600e\u4e48\u89e3\u8bfb\u8fd9\u4e9b\u6570\u636e\uff0c\u8ba9\u9f20\u6807\u6307\u9488\u76f8\u5e94\u7684\u52a8\u8d77\u6765\u3002</p> bootpack.c<pre><code>unsigned char mouse_dbuf[3], mouse_phase;\n\nenable_mouse();\n    mouse_phase = 0; //\u8fdb\u5165\u5230\u7b49\u5f85\u9f20\u6807\u76840xfa\u72b6\u6001\n\n    for (;;) {\n        io_cli();\n        if (fifo8_status(&amp;keyfifo) + fifo8_status(&amp;mousefifo) == 0) {\n            io_stihlt();\n        } else {\n            if (fifo8_status(&amp;keyfifo) != 0) {\n                i = fifo8_get(&amp;keyfifo);\n                io_sti();\n                sprintf(s, \"%02X\", i);\n                boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484,  0, 16, 15, 31);\n                putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n            } else if (fifo8_status(&amp;mousefifo) != 0) {\n                i = fifo8_get(&amp;mousefifo);\n                io_sti();\n                if (mouse_phase == 0) {\n                //\u7b49\u5f85\u9f20\u6807\u76840xfa\u72b6\u6001\n                    if (i == 0xfa) {\n                        mouse_phase = 1;\n                    }\n                } else if (mouse_phase == 1) {\n                    //\u7b49\u5f85\u9f20\u6807\u7684\u7b2c\u4e00\u5b57\u8282\n                    mouse_dbuf[0] = i;\n                    mouse_phase = 2;\n                } else if (mouse_phase == 2) {\n                    //\u7b49\u5f85\u9f20\u6807\u7684\u7b2c\u4e8c\u5b57\u8282\n                    mouse_dbuf[1] = i;\n                    mouse_phase = 3;\n                } else if (mouse_phase == 3) {\n                    //\u7b49\u5f85\u9f20\u6807\u7684\u7b2c\u4e09\u5b57\u8282 \n                    mouse_dbuf[2] = i;\n                    mouse_phase = 1;\n                    //\u9f20\u6807\u76843\u4e2a\u5b57\u8282\u90fd\u9f50\u4e86\uff0c\u663e\u793a\u51fa\u6765\n                    sprintf(s, \"%02X %02X %02X\", mouse_dbuf[0], mouse_dbuf[1], mouse_dbuf[2]);\n                    boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 32, 16, 32 + 8 * 8 - 1, 31);\n                    putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 32, 16, COL8_FFFFFF, s);\n                }\n            }\n        }\n    }\n</code></pre> <p>\u8fd9\u6bb5\u7a0b\u5e8f\uff0c\u9996\u5148\u8981\u628a\u6700\u521d\u8bfb\u5230\u7684<code>0xfa</code>\u820d\u5f03\u6389\u3002\u4e4b\u540e\uff0c\u6bcf\u6b21\u4ece\u9f20\u6807\u90a3\u91cc\u9001\u8fc7\u6765\u7684\u6570\u636e\u90fd\u5e94\u8be5\u662f3\u4e2a\u5b57\u8282\u4e00\u7ec4\uff0c\u663e\u793a\u5230\u5c4f\u5e55\u4e0a\u3002</p> <p></p> <p><code>mouse_dbuf[0]</code>\u4e0e\u9f20\u6807\u70b9\u51fb\u6709\u5173\uff0c<code>mouse_dbuf[1]</code>\u4e0e\u9f20\u6807\u5de6\u53f3\u79fb\u52a8\u6709\u5173\uff0c<code>mouse_dbuf[2]</code>\u4e0e\u9f20\u6807\u4e0a\u4e0b\u79fb\u52a8\u6709\u5173\u3002</p>"},{"location":"%E7%AC%AC8%E5%A4%A9/#_1","title":"\u7a0d\u4e8b\u6574\u7406","text":"bootpack.c<pre><code>struct MOUSE_DEC {\n    unsigned char buf[3], phase;\n};\n\nint mouse_decode(struct MOUSE_DEC *mdec, unsigned char dat)\n{\n    if (mdec-&gt;phase == 0) {\n        /* \u30de\u30a6\u30b9\u306e0xfa\u3092\u5f85\u3063\u3066\u3044\u308b\u6bb5\u968e */\n        if (dat == 0xfa) {\n            mdec-&gt;phase = 1;\n        }\n        return 0;\n    }\n    if (mdec-&gt;phase == 1) {\n        /* \u30de\u30a6\u30b9\u306e1\u30d0\u30a4\u30c8\u76ee\u3092\u5f85\u3063\u3066\u3044\u308b\u6bb5\u968e */\n        mdec-&gt;buf[0] = dat;\n        mdec-&gt;phase = 2;\n        return 0;\n    }\n    if (mdec-&gt;phase == 2) {\n        /* \u30de\u30a6\u30b9\u306e2\u30d0\u30a4\u30c8\u76ee\u3092\u5f85\u3063\u3066\u3044\u308b\u6bb5\u968e */\n        mdec-&gt;buf[1] = dat;\n        mdec-&gt;phase = 3;\n        return 0;\n    }\n    if (mdec-&gt;phase == 3) {\n        /* \u30de\u30a6\u30b9\u306e3\u30d0\u30a4\u30c8\u76ee\u3092\u5f85\u3063\u3066\u3044\u308b\u6bb5\u968e */\n        mdec-&gt;buf[2] = dat;\n        mdec-&gt;phase = 1;\n        return 1;\n    }\n    return -1; /* \u3053\u3053\u306b\u6765\u308b\u3053\u3068\u306f\u306a\u3044\u306f\u305a */\n}\n\nenable_mouse(&amp;mdec);\n\nfor (;;) {\n    io_cli();\n    if (fifo8_status(&amp;keyfifo) + fifo8_status(&amp;mousefifo) == 0) {\n        io_stihlt();\n    } else {\n        if (fifo8_status(&amp;keyfifo) != 0) {\n            i = fifo8_get(&amp;keyfifo);\n            io_sti();\n            sprintf(s, \"%02X\", i);\n            boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484,  0, 16, 15, 31);\n            putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 16, COL8_FFFFFF, s);\n        } else if (fifo8_status(&amp;mousefifo) != 0) {\n            i = fifo8_get(&amp;mousefifo);\n            io_sti();\n            if (mouse_decode(&amp;mdec, i) != 0) {\n                /* \u30c7\u30fc\u30bf\u304c3\u30d0\u30a4\u30c8\u63c3\u3063\u305f\u306e\u3067\u8868\u793a */\n                sprintf(s, \"%02X %02X %02X\", mdec.buf[0], mdec.buf[1], mdec.buf[2]);\n                boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 32, 16, 32 + 8 * 8 - 1, 31);\n                putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 32, 16, COL8_FFFFFF, s);\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"%E7%AC%AC8%E5%A4%A9/#2","title":"\u9f20\u6807\u89e3\u8bfb(2)","text":"bootpack.cc<pre><code>struct MOUSE_DEC {\n    unsigned char buf[3], phase;\n    int x, y, btn;\n};\n\nint mouse_decode(struct MOUSE_DEC *mdec, unsigned char dat)\n{\n    if (mdec-&gt;phase == 0) {\n        //\u7b49\u5f85\u9f20\u6807\u76840xfa\u7684\u9636\u6bb5\n        if (dat == 0xfa) {\n            mdec-&gt;phase = 1;\n        }\n        return 0;\n    }\n    if (mdec-&gt;phase == 1) {\n        //\u7b49\u5f85\u9f20\u6807\u7b2c\u4e00\u5b57\u8282\u7684\u9636\u6bb5\n        if ((dat &amp; 0xc8) == 0x08) {\n            //\u5982\u679c\u7b2c\u4e00\u5b57\u8282\u6b63\u786e\n            mdec-&gt;buf[0] = dat;\n            mdec-&gt;phase = 2;\n        }\n        return 0;\n    }\n    if (mdec-&gt;phase == 2) {\n        //\u7b49\u5f85\u9f20\u6807\u7b2c\u4e8c\u5b57\u8282\u7684\u9636\u6bb5\n        mdec-&gt;buf[1] = dat;\n        mdec-&gt;phase = 3;\n        return 0;\n    }\n    if (mdec-&gt;phase == 3) {\n        //\u7b49\u5f85\u9f20\u6807\u7b2c\u4e09\u5b57\u8282\u7684\u9636\u6bb5\n        mdec-&gt;buf[2] = dat;\n        mdec-&gt;phase = 1;\n        mdec-&gt;btn = mdec-&gt;buf[0] &amp; 0x07;\n        mdec-&gt;x = mdec-&gt;buf[1];\n        mdec-&gt;y = mdec-&gt;buf[2];\n        if ((mdec-&gt;buf[0] &amp; 0x10) != 0) {\n            mdec-&gt;x |= 0xffffff00;\n        }\n        if ((mdec-&gt;buf[0] &amp; 0x20) != 0) {\n            mdec-&gt;y |= 0xffffff00;\n        }\n        mdec-&gt;y = - mdec-&gt;y; //\u9f20\u6807\u7684y\u65b9\u5411\u4e0e\u753b\u9762\u7b26\u53f7\u76f8\u53cd \n        return 1;\n    }\n    return -1; /* \u3053\u3053\u306b\u6765\u308b\u3053\u3068\u306f\u306a\u3044\u306f\u305a */\n}\n</code></pre> <p>\u7ed3\u6784\u4f53\u91cc\u589e\u52a0\u7684\u51e0\u4e2a\u53d8\u91cf\u7528\u4e8e\u5b58\u653e\u89e3\u8bfb\u7ed3\u679c\uff0c\u8fd9\u51e0\u4e2a\u53d8\u91cf\u662f<code>x</code>\u3001<code>y</code>\u548c<code>btn</code>\uff0c\u5206\u522b\u7528\u4e8e\u5b58\u653e\u79fb\u52a8\u4fe1\u606f\u548c\u9f20\u6807\u6309\u952e\u72b6\u6001\u3002</p> <p>\u540c\u65f6\uff0c\u8fd8\u8981\u68c0\u67e5<code>if (mdec-&gt;phase == 1)</code>\u4e2d\u7b2c\u4e00\u5b57\u8282\u5bf9\u79fb\u52a8\u6709\u53cd\u5e94\u7684\u90e8\u5206\u662f\u5426\u5728<code>0~3</code>\u8303\u56f4\u5185\uff0c\u5bf9\u70b9\u51fb\u6709\u53cd\u5e94\u7684\u90e8\u5206\u662f\u5426\u5728<code>8~F</code>\u8303\u56f4\u5185<code>if (mdec-&gt;phase == 1)</code>\u3002</p> <p>\u9f20\u6807\u952e\u7684\u72b6\u6001\uff0c\u653e\u5728<code>buf[0]</code>\u7684\u4f4e3\u4f4d\uff0c<code>mdec-&gt;btn = mdec-&gt;buf[0] &amp; 0x07;</code>\u3002</p> <p>x\u548cy\uff0c\u57fa\u672c\u4e0a\u662f\u76f4\u63a5\u4f7f\u7528<code>buf[1]</code>\u548c<code>buf[2]</code>\uff0c\u4f46\u662f\u9700\u8981\u4f7f\u7528\u7b2c\u4e00\u5b57\u8282\u4e2d\u5bf9\u9f20\u6807\u79fb\u52a8\u6709\u53cd\u5e94\u7684\u51e0\u4f4d\u4fe1\u606f\u3002\u8fd8\u6709\uff0c\u8981\u5c06x\u548cy\u7684\u7b2c8\u4f4d\u53ca\u7b2c8\u4f4d\u4ee5\u540e\u5168\u90e8\u90fd\u8bbe\u62101\u62160\u3002</p> <p>\u8fd8\u6709\u9f20\u6807\u4e0e\u5c4f\u5e55\u7684y\u65b9\u5411\u6b63\u597d\u76f8\u53cd\u3002</p> <p>\u4e0b\u9762\u662f\u663e\u793a\u90e8\u5206\uff1a</p> bootpack.c<pre><code>} else if (fifo8_status(&amp;mousefifo) != 0) {\n    i = fifo8_get(&amp;mousefifo);\n    io_sti();\n    if (mouse_decode(&amp;mdec, i) != 0) {\n        //\u6570\u636e\u76843\u4e2a\u5b57\u8282\u90fd\u9f50\u4e86\uff0c\u663e\u793a\u51fa\u6765\n        sprintf(s, \"[lcr %4d %4d]\", mdec.x, mdec.y);\n        if ((mdec.btn &amp; 0x01) != 0) {\n            s[1] = 'L';\n        }\n        if ((mdec.btn &amp; 0x02) != 0) {\n            s[3] = 'R';\n        }\n        if ((mdec.btn &amp; 0x04) != 0) {\n            s[2] = 'C';\n        }\n        boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 32, 16, 32 + 15 * 8 - 1, 31);\n        putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 32, 16, COL8_FFFFFF, s);\n    }\n}\n</code></pre> <p></p>"},{"location":"%E7%AC%AC8%E5%A4%A9/#_2","title":"\u79fb\u52a8\u9f20\u6807\u6307\u9488","text":"bootpack.c<pre><code>} else if (fifo8_status(&amp;mousefifo) != 0) {\n    i = fifo8_get(&amp;mousefifo);\n    io_sti();\n    if (mouse_decode(&amp;mdec, i) != 0) {\n        /* \u30c7\u30fc\u30bf\u304c3\u30d0\u30a4\u30c8\u63c3\u3063\u305f\u306e\u3067\u8868\u793a */\n        sprintf(s, \"[lcr %4d %4d]\", mdec.x, mdec.y);\n        if ((mdec.btn &amp; 0x01) != 0) {\n            s[1] = 'L';\n        }\n        if ((mdec.btn &amp; 0x02) != 0) {\n            s[3] = 'R';\n        }\n        if ((mdec.btn &amp; 0x04) != 0) {\n            s[2] = 'C';\n        }\n        boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 32, 16, 32 + 15 * 8 - 1, 31);\n        putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 32, 16, COL8_FFFFFF, s);\n        //\u9f20\u6807\u6307\u9488\u7684\u79fb\u52a8\n        boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, mx, my, mx + 15, my + 15); //\u9690\u85cf\u9f20\u6807\n        mx += mdec.x;\n        my += mdec.y;\n        if (mx &lt; 0) {\n            mx = 0;\n        }\n        if (my &lt; 0) {\n            my = 0;\n        }\n        if (mx &gt; binfo-&gt;scrnx - 16) {\n            mx = binfo-&gt;scrnx - 16;\n        }\n        if (my &gt; binfo-&gt;scrny - 16) {\n            my = binfo-&gt;scrny - 16;\n        }\n        sprintf(s, \"(%3d, %3d)\", mx, my);\n        boxfill8(binfo-&gt;vram, binfo-&gt;scrnx, COL8_008484, 0, 0, 79, 15); //\u9690\u85cf\u5750\u6807\n        putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 0, COL8_FFFFFF, s); //\u663e\u793a\u5750\u6807\n        putblock8_8(binfo-&gt;vram, binfo-&gt;scrnx, 16, 16, mx, my, mcursor, 16); //\u63cf\u753b\u9f20\u6807\n    }\n}\n}\n}\n</code></pre>"},{"location":"%E7%AC%AC8%E5%A4%A9/#32_1","title":"\u901a\u5f8032\u4f4d\u6a21\u5f0f\u4e4b\u8def","text":"asmhead.nas<pre><code>; PIC\u5173\u95ed\u4e00\u5207\u4e2d\u65ad\n; \u6839\u636eAT\u517c\u5bb9\u673a\u7684\u89c4\u683c\uff0c\u5982\u679c\u8981\u521d\u59cb\u5316PIC\n; \u5fc5\u987b\u5728CLI\u4e4b\u524d\u8fdb\u884c\uff0c\u5426\u5219\u6709\u65f6\u4f1a\u6302\u8d77\n; \u968f\u540e\u8fdb\u884cPIC\u7684\u521d\u59cb\u5316   \n\n        MOV     AL,0xff\n        OUT     0x21,AL\n        NOP                     ; \u5982\u679c\u8fde\u7eed\u6267\u884cOUT\u6307\u4ee4\uff0c\u6709\u4e9b\u673a\u79cd\u4f1a\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c \n        OUT     0xa1,AL\n\n        CLI                     ; \u7981\u6b62CPU\u7ea7\u522b\u7684\u4e2d\u65ad\n</code></pre> <p>\u8fd9\u6bb5\u7a0b\u5e8f\u7b49\u540c\u4e8e\u4ee5\u4e0b\u5185\u5bb9\u7684C\u7a0b\u5e8f\uff1a</p> <pre><code>io_out(PIC0_IMR, 0xff); //\u7981\u6b62\u4e3bPIC\u7684\u5168\u90e8\u4e2d\u65ad\nio_out(PIC1_IMR, 0xff); //\u7981\u6b62\u4ecePIC\u7684\u5168\u90e8\u4e2d\u65ad\nio_cli();               //\u7981\u6b62CPU\u7ea7\u522b\u7684\u4e2d\u65ad\n</code></pre> <p>\u5982\u679c\u5f53CPU\u8fdb\u884c\u6a21\u5f0f\u8f6c\u6362\u65f6\u8fdb\u6765\u4e86\u4e2d\u65ad\u4fe1\u53f7\uff0c\u90a3\u53ef\u5c31\u9ebb\u70e6\u4e86\u3002\u800c\u4e14\uff0c\u540e\u6765\u8fd8\u8981\u8fdb\u884cPIC\u7684\u521d\u59cb\u5316\uff0c\u521d\u59cb\u5316\u65f6\u4e5f\u4e0d\u5141\u8bb8\u6709\u4e2d\u65ad\u53d1\u751f\u3002</p> <p><code>NOP</code>\u6307\u4ee4\u4ec0\u4e48\u90fd\u4e0d\u505a\uff0c\u5b83\u53ea\u662f\u8ba9CPU\u4f11\u606f\u4e00\u4e2a\u65f6\u949f\u957f\u7684\u65f6\u95f4\u3002</p> asmhead.nas<pre><code>; \u4e3a\u4e86\u8ba9CPU\u80fd\u591f\u8bbf\u95ee1MB\u4ee5\u4e0a\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u8bbe\u5b9aA20GATE \n\n        CALL    waitkbdout\n        MOV     AL,0xd1\n        OUT     0x64,AL\n        CALL    waitkbdout\n        MOV     AL,0xdf         ; enable A20\n        OUT     0x60,AL\n        CALL    waitkbdout\n</code></pre> <p>\u8fd9\u91cc\u7684<code>waitbdout</code>\uff0c\u7b49\u540c\u4e8e<code>wait_KBC_sedready</code>\u3002\u8fd9\u6bb5\u7a0b\u5e8f\u5728C\u8bed\u8a00\u91cc\u7684\u5199\u6cd5\u5927\u81f4\u4e3a\uff1a</p> <pre><code>#define KEYCMD_WRITE_OUTPORT 0xd1\n#define KBC_OUTPORT_A20G_ENABLE 0xdf\n\n//A20G\u7684\u8bbe\u5b9a\nwait_KBC_sendready();\nio_out8(PORT_KEYCMD, KEYCMD_WRITEi_OUTPORT);\nwait_KBC_sendready();\nio_out8(PORT_KETDAT, KBC_OUTPORT_A20G_ENABLE);\nwait_KBC_sendready();  //\u8fd9\u53e5\u8bdd\u662f\u4e3a\u4e86\u7b49\u5f85\u5b8c\u6210\u6267\u884c\u6307\u4ee4\n</code></pre> <p>\u8f93\u51fa<code>0xdf</code>\u6240\u8981\u5b8c\u6210\u7684\u529f\u80fd\uff0c\u662f\u8ba9<code>A20GATE</code>\u4fe1\u53f7\u7ebf\u53d8\u6210<code>ON</code>\u7684\u72b6\u6001\u3002\u8fd9\u6761\u4fe1\u53f7\u7ebf\u7684\u4f5c\u7528\u662f\uff0c\u80fd\u4f7f\u5185\u5b58\u76841MB\u4ee5\u4e0a\u7684\u90e8\u5206\u53d8\u6210\u53ef\u4f7f\u7528\u72b6\u6001\u3002</p> asmhead.nas<pre><code>; \u5207\u6362\u5230\u4fdd\u62a4\u6a21\u5f0f\n\n[INSTRSET \"i486p\"]              ; \u60f3\u8981\u4f7f\u7528486\u547d\u4ee4\u7684\u53d9\u8ff0 \n\n        LGDT    [GDTR]          ; \u8bbe\u5b9a\u4e34\u65f6GDT\n        MOV     EAX,CR0\n        AND     EAX,0x7fffffff  ; \u8bbebit31\u4e3a0\uff0c\u4e3a\u4e86\u7981\u6b62\u5206\u9875\n        OR      EAX,0x00000001  ; \u8bbebit0\u4e3a1\uff0c\u4e3a\u4e86\u5207\u6362\u5230\u4fdd\u62a4\u6a21\u5f0f \n        MOV     CR0,EAX\n        JMP     pipelineflush\npipelineflush:\n        MOV     AX,1*8          ; \u53ef\u8bfb\u5199\u7684\u6bb5 32bit \n        MOV     DS,AX\n        MOV     ES,AX\n        MOV     FS,AX\n        MOV     GS,AX\n        MOV     SS,AX\n</code></pre> <p><code>[INSTRSET \"i486p\"]</code>\u662f\u4e3a\u4e86\u80fd\u591f\u4f7f\u7528386\u4ee5\u540e\u7684<code>LGDT</code>\u3001<code>EAX</code>\u3001<code>CR0</code>\u7b49\u5173\u952e\u5b57\u3002</p> <p><code>LGDT</code>\u6307\u4ee4\uff0c\u628a\u51c6\u5907\u7684<code>GDT</code>\u7ed9\u8bfb\u8fdb\u6765\uff0c\u7136\u540e\u5c06<code>CR0</code>\u8fd9\u4e00\u7279\u6b8a\u768432\u4f4d\u5bc4\u5b58\u5668\u7684\u503c\u4ee3\u5165<code>EAX</code>\uff0c\u5e76\u5c06\u5176\u6700\u9ad8\u4f4d\u7f6e\u4e3a0\uff0c\u6700\u4f4e\u4f4d\u7f6e\u4e3a1\uff0c\u5728\u5c06\u8fd9\u4e2a\u503c\u8fd4\u56de\u7ed9<code>CR0</code>\u5bc4\u5b58\u5668\uff0c\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u6a21\u5f0f\u8f6c\u6362\u3002</p> <p><code>CR0</code>\uff0ccontrol register0\uff0c\u53ea\u6709\u64cd\u4f5c\u7cfb\u7edf\u624d\u80fd\u64cd\u4f5c\u5b83\u3002</p> <p>\u4fdd\u62a4\u6a21\u5f0f\u4e0e\u5148\u524d\u768416\u4f4d\u6a21\u5f0f\u4e0d\u540c\uff0c\u6bb5\u5bc4\u5b58\u5668\u7684\u89e3\u91ca\u4e0d\u662f16\u500d\uff0c\u800c\u662f\u80fd\u591f\u4f7f\u7528<code>GDT</code>\u3002\u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u65e2\u4e0d\u80fd\u968f\u4fbf\u6539\u53d8\u6bb5\u7684\u8bbe\u5b9a\uff0c\u53c8\u4e0d\u80fd\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u4e13\u7528\u7684\u6bb5\u3002</p> <p>\u6211\u4eec\u8981\u4f7f\u7528\u7684\uff0c\u662f\u5e26\u4fdd\u62a4\u768432\u4f4d\u6a21\u5f0f\u3002</p> <p>\u5207\u6362\u5230\u4fdd\u62a4\u6a21\u5f0f\u65f6\uff0c\u8981\u9a6c\u4e0a\u6267\u884c<code>JMP</code>\u3002\u56e0\u4e3a\u53d8\u6210\u4fdd\u62a4\u6a21\u5f0f\u540e\uff0c\u673a\u5668\u8bed\u8a00\u7684\u89e3\u91ca\u8981\u53d1\u751f\u53d8\u5316\u3002CPU\u4e3a\u4e86\u52a0\u5feb\u6307\u4ee4\u7684\u6267\u884c\u901f\u5ea6\u800c\u4f7f\u7528\u4e86\u7ba1\u9053(pipeline)\u8fd9\u4e00\u673a\u5236\u3002</p> <p>\u6b64\u5916\uff0c\u6bb5\u5bc4\u5b58\u5668\u7684\u610f\u601d\u4e5f\u53d8\u4e86\uff0c\u9664\u4e86<code>CS</code>\u4ee5\u5916\u6240\u6709\u6bb5\u5bc4\u5b58\u5668\u7684\u503c\u90fd\u4ece<code>0x0000</code>\u53d8\u6210\u4e86<code>0x0008</code>\uff0c\u76f8\u5f53\u4e8e<code>gdt+1</code>\u6bb5\u3002</p> asmhead.nas<pre><code>; bootpack\u7684\u4f20\u9001\n\n        MOV     ESI,bootpack    ; \u4f20\u9001\u6e90\n        MOV     EDI,BOTPAK      ; \u4f20\u9001\u76ee\u7684\u5730\n        MOV     ECX,512*1024/4\n        CALL    memcpy\n\n; \u78c1\u76d8\u6570\u636e\u6700\u7ec8\u4f20\u9001\u5230\u5b83\u672c\u6765\u7684\u4f4d\u7f6e\u53bb\n\n; \u9996\u5148\u4ece\u542f\u52a8\u6247\u533a\u5f00\u59cb\n\n        MOV     ESI,0x7c00      ; \u4f20\u9001\u6e90\n        MOV     EDI,DSKCAC      ; \u4f20\u9001\u76ee\u7684\u5730\n        MOV     ECX,512/4\n        CALL    memcpy\n\n; \u6240\u6709\u5269\u4e0b\u7684\n\n        MOV     ESI,DSKCAC0+512 ; \u4f20\u9001\u6e90\n        MOV     EDI,DSKCAC+512  ; \u8f6c\u9001\u76ee\u7684\u5730\n        MOV     ECX,0\n        MOV     CL,BYTE [CYLS]\n        IMUL    ECX,512*18*2/4  ; \u4ece\u67f1\u9762\u6570\u53d8\u6362\u4e3a\u5b57\u8282\u6570/4\n        SUB     ECX,512/4       ; \u51cf\u53bbIPL \n        CALL    memcpy\n</code></pre> <p>\u7ffb\u8bd1\u6210C\u8bed\u8a00\u662f\uff1a</p> <pre><code>memcpy(bootpack, BOTPAK, 512*1024/4);\nmemcpy(0x7c00, DSKCAC, 512/4);\nmemcpy(DESKCAC0+512, DSKCAC+512, cyls * 512*18*2/4 - 512/4);\n</code></pre> <p><code>memcpy</code>\u662f\u590d\u5236\u5185\u5b58\u7684\u51fd\u6570\uff1a</p> <pre><code>memcpy(\u4f20\u9001\u6e90\u5730\u5740, \u4f20\u9001\u76ee\u7684\u5730\u5740, \u4f20\u9001\u6570\u636e\u7684\u5927\u5c0f);\n</code></pre> <p><code>memcpy(bootpack, BOTPAK, 512*1024/4);</code>\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u4ece<code>0x7c00</code>\u590d\u5236512\u5b57\u8282\u5230<code>0x00100000</code>\u3002\u8fd9\u6b63\u597d\u662f\u5c06\u542f\u52a8\u6247\u533a\u590d\u5236\u52301MB\u4ee5\u540e\u7684\u5185\u5b58\u53bb\u7684\u610f\u601d\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u8fd8\u6ca1\u8bf4\u660e\u7684\u51fd\u6570\u5c31\u53ea\u6709<code>memcpy</code>\u4e86\u3002<code>bootpack</code>\u662f<code>asmhead.nas</code>\u7684\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u3002<code>haribote.sys</code>\u662f\u901a\u8fc7<code>asmhead.bin</code>\u548c<code>bootpack.hrb</code>\u8fde\u63a5\u8d77\u6765\u751f\u6210\u7684\uff0c\u6240\u4ee5<code>asmhead</code>\u7ed3\u675f\u7684\u5730\u65b9\uff0c\u7d27\u63a5\u7740\u4e32\u8054\u7740<code>bootpack.hrb</code>\u6700\u524d\u9762\u7684\u90e8\u5206\u3002  </p> bootpack.nas<pre><code>; \u5fc5\u987b\u7531asmhead\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u81f3\u6b64\u5168\u90e8\u5b8c\u6bd5\n; \u4ee5\u540e\u5c31\u4ea4\u7531bootpack\u6765\u5b8c\u6210  \n\n; bootpack\u7684\u542f\u52a8\n\n        MOV     EBX,BOTPAK\n        MOV     ECX,[EBX+16]\n        ADD     ECX,3           ; ECX += 3;\n        SHR     ECX,2           ; ECX /= 4;\n        JZ      skip            ; \u6ca1\u6709\u8981\u8f6c\u9001\u7684\u4e1c\u897f\u65f6\n        MOV     ESI,[EBX+20]    ; \u8f6c\u9001\u6e90\n        ADD     ESI,EBX\n        MOV     EDI,[EBX+12]    ; \u8f6c\u9001\u76ee\u7684\u5730\n        CALL    memcpy\nskip:\n        MOV     ESP,[EBX+12]    ; \u6808\u521d\u59cb\u503c\n        JMP     DWORD 2*8:0x0000001b\n</code></pre> <p>\u8fd9\u6bb5\u7a0b\u5e8f\u5bf9<code>bootpack.hrb</code>\u7684\u5934\u90e8\u5185\u5bb9\u8fdb\u884c\u89e3\u6790\uff0c\u5c06\u6267\u884c\u6240\u5fc5\u9700\u7684\u6570\u636e\u4f20\u9001\u8fc7\u53bb\u3002</p> <p><code>SHR</code>\u662f\u53f3\u79fb\u6307\u4ee4\uff0c<code>JZ</code>-jump if zero\u3002<code>JMP       DWORD 2*8:0x0000001b</code>\u5c06<code>2*8</code>\u4ee3\u5165\u5230<code>CS</code>\u91cc\uff0c\u540c\u65f6\u79fb\u52a8\u5230<code>0x1b</code>\u5730\u5740\u3002\u8fd9\u91cc\u7684<code>0x1b</code>\u5730\u5740\u662f\u6307\u7b2c2\u4e2a\u6bb5\u7684<code>0x1b</code>\u5730\u5740\uff0c\u7b2c\u4e8c\u4e2a\u6bb5\u7684\u57fa\u5730\u5740\u662f<code>0x280000</code>\u3002 </p> asmhead.nas<pre><code>waitkbdout:\n        IN       AL,0x64\n        AND      AL,0x02\n        IN       AL,0x60        ; \u7a7a\u8bfb\uff0c\u4e3a\u4e86\u6e05\u7a7a\u6570\u636e\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\u7684\u5783\u573e\u6570\u636e \n        JNZ     waitkbdout      \n        RET\n</code></pre> asmhead.nas<pre><code>memcpy:\n        MOV     EAX,[ESI]\n        ADD     ESI,4\n        MOV     [EDI],EAX\n        ADD     EDI,4\n        SUB     ECX,1     ; \u51cf\u6cd5\u8fd0\u7b97\n        JNZ     memcpy          \n        RET\n</code></pre> asmhead.nas<pre><code>        ALIGNB  16\nGDT0:\n        RESB    8               ; NULL selector\n        DW      0xffff,0x0000,0x9200,0x00cf ; \u53ef\u4ee5\u8bfb\u5199\u7684\u6bb5 32bit\n        DW      0xffff,0x0000,0x9a28,0x0047 ; \u53ef\u4ee5\u6267\u884c\u7684\u6bb5\n\n        DW      0\nGDTR0:\n        DW      8*3-1\n        DD      GDT0\n\n        ALIGNB  16\nbootpack:\n</code></pre> <p><code>ALIGNB 16</code>\u5730\u5740\u80fd\u88ab16\u6574\u9664\u7684\u65f6\u5019\uff0c\u5c31\u505c\u6b62\u6dfb\u52a00\u3000\u3002</p> <p><code>GDT0</code>\u4e5f\u662f\u4e00\u79cd\u7279\u5b9a\u7684GDT\u30020\u53f7\u662f\u7a7a\u533a\u57df\uff0c\u4e0d\u80fd\u591f\u5728 \u90a3\u91cc\u5b9a\u4e49\u6bb5\u3002<code>GDTR0</code>\u662f<code>LGDT</code>\u6307\u4ee4\uff0c\u610f\u601d\u662f\u901a\u77e5<code>GDT0</code>\u6709\u4e86<code>GDT</code>\u3002<code>GDT0</code>\u91cc\uff0c\u5199\u5165\u4e8616\u4f4d\u7684\u6bb5\u4e0a\u9650\u548c32\u4f4d\u7684\u8d77\u59cb\u5730\u5740\u3002</p> <p>\u5c31\u662f\u8bf4\uff0c\u6700\u521d\u72b6\u6001\u65f6\uff0c<code>GDT</code>\u5728<code>asmhead.nas</code>\u91cc\uff0c\u5e76\u4e0d\u5728<code>0x002700~0x0027ffff</code>\u7684\u8303\u56f4\u91cc\u3002<code>IDT</code>\u8fde\u8bbe\u5b9a\u90fd\u6ca1\u8bbe\u5b9a\uff0c\u4ecd\u5904\u4e8e\u4e2d\u65ad\u7981\u6b62\u7684\u72b6\u6001\u3002\u6240\u4ee5\u5e94\u5c3d\u5feb\u5f00\u653e\u4e2d\u65ad\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u4fee\u6539<code>HariMain</code>\u51fd\u6570\uff0c\u5728\u4e00\u5207\u4e8b\u60c5\u4e4b\u524d\u5c31\u521b\u5efa\u597d\u4e2d\u65ad\uff1a</p> bootpack.c<pre><code>void HariMain(void)\n{\n    struct BOOTINFO *binfo = (struct BOOTINFO *) ADR_BOOTINFO;\n    char s[40], mcursor[256], keybuf[32], mousebuf[128];\n    int mx, my, i;\n    struct MOUSE_DEC mdec;\n\n    init_gdtidt();\n    init_pic();\n    io_sti(); /* IDT/PIC\u306e\u521d\u671f\u5316\u304c\u7d42\u308f\u3063\u305f\u306e\u3067CPU\u306e\u5272\u308a\u8fbc\u307f\u7981\u6b62\u3092\u89e3\u9664 */\n    fifo8_init(&amp;keyfifo, 32, keybuf);\n    fifo8_init(&amp;mousefifo, 128, mousebuf);\n    io_out8(PIC0_IMR, 0xf9); /* PIC1\u3068\u30ad\u30fc\u30dc\u30fc\u30c9\u3092\u8a31\u53ef(11111001) */\n    io_out8(PIC1_IMR, 0xef); /* \u30de\u30a6\u30b9\u3092\u8a31\u53ef(11101111) */\n\n    init_keyboard();\n\n    init_palette();\n}\n</code></pre>"},{"location":"%E7%AC%AC9%E5%A4%A9/","title":"\u7b2c9\u5929 \u5185\u5b58\u7ba1\u7406","text":""},{"location":"%E7%AC%AC9%E5%A4%A9/#_1","title":"\u6574\u7406\u6e90\u6587\u4ef6","text":""},{"location":"%E7%AC%AC9%E5%A4%A9/#_2","title":"\u5185\u5b58\u5bb9\u91cf\u68c0\u67e5","text":""},{"location":"%E7%AC%AC9%E5%A4%A9/#_3","title":"\u7f13\u5b58","text":"<p>CPU\u4e2d\u6709\u4e00\u4e2a\u544a\u8bc9\u7f13\u51b2\u5b58\u50a8\u5668<code>cache</code>\u3002\u6bcf\u6b21\u8bbf\u95ee\u5185\u5b58\uff0c\u90fd\u8981\u8bb2\u6240\u8bbf\u95ee\u7684\u5730\u5740\u548c\u5185\u5bb9\u5b58\u5165\u5230\u9ad8\u901f\u7f13\u5b58\u91cc\u3002\u7531\u4e8e\u673a\u5668\u8bed\u8a009\u6210\u4ee5\u4e0a\u7684\u65f6\u95f4\u82b1\u8d39\u5728\u5faa\u73af\u4e0a\uff0c\u8fd9\u6837\u6267\u884c\u901f\u5ea6\u4f1a\u52a0\u5feb\u3002</p> <p>\u8fd8\u6709\uff0c\u5373\u4f7f\u662f\u53d8\u91cf\uff0c\u5982<code>for</code>\u5faa\u73af\u4e2d\u7684<code>i</code>\uff0c\u4e00\u6b21\u53c8\u4e00\u6b21\u5199\u5165\u4e0d\u540c\u7684\u503c\uff0c\u7f13\u5b58\u63a7\u5236\u7535\u8def\u4f1a\u89c2\u5bdf\u5230\u8fd9\u4e00\u7279\u6027\uff0c\u5c3d\u91cf\u5728\u7f13\u5b58\u5185\u5904\u7406\u3002 </p>"},{"location":"%E7%AC%AC9%E5%A4%A9/#_4","title":"\u5185\u5b58\u68c0\u67e5","text":"<p>\u5185\u5b58\u68c0\u67e5\u65f6\uff0c\u8981\u5f80\u5185\u5b58\u91cc\u968f\u4fbf\u5199\u5165\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u9a6c\u4e0a\u8bfb\u53d6\uff0c\u6765\u68c0\u67e5\u8bfb\u53d6\u7684\u503c\u4e0e\u5199\u5165\u7684\u503c\u662f\u5426\u76f8\u7b49\u3002\u4f46\u662f\u5982\u679cCPU\u91cc\u52a0\u4e0a\u4e86\u7f13\u5b58\uff0c\u5199\u5165\u548c\u8bfb\u51fa\u7684\u5c31\u4e0d\u662f\u5185\u5b58\uff0c\u800c\u662f\u7f13\u5b58\uff0c\u68c0\u67e5\u5904\u7406\u4e0d\u80fd\u5b8c\u6210\u3002</p> <p>\u6240\u4ee5\u53ea\u6709\u5728\u5185\u5b58\u68c0\u67e5\u65f6\u624d\u5c06\u7f13\u5b58\u8bbe\u4e3a<code>OFF</code>\u3002\u5f53\u7136\uff0c\u4e4b\u524d\u6211\u4eec\u8fd8\u9700\u8981\u68c0\u67e5CPU\u662f\u4e0d\u662f\u5728486\u4ee5\u4e0a\uff1a</p> bootpack.c<pre><code>#define EFLAGS_AC_BIT       0x00040000\n#define CR0_CACHE_DISABLE   0x60000000\n\nunsigned int memtest(unsigned int start, unsigned int end)\n{\n    char flg486 = 0;\n    unsigned int eflg, cr0, i;\n\n    //\u786e\u8ba4CPU386\u8fd8\u662f486\u4ee5\u4e0a\u7684\n    eflg = io_load_eflags();\n    eflg |= EFLAGS_AC_BIT; /* AC-bit = 1 */\n    io_store_eflags(eflg);\n    eflg = io_load_eflags();\n    if ((eflg &amp; EFLAGS_AC_BIT) != 0) { //\u5982\u679c\u662f386\uff0c\u5373\u4f7f\u8bbe\u5b9aAC=1\uff0cAC\u7684\u503c\u8fd8\u4f1a\u81ea\u52a8\u56de\u52300\n        flg486 = 1;\n    }\n    eflg &amp;= ~EFLAGS_AC_BIT; /* AC-bit = 0 */\n    io_store_eflags(eflg);\n\n    if (flg486 != 0) {\n        cr0 = load_cr0();\n        cr0 |= CR0_CACHE_DISABLE; //\u7981\u6b62\u7f13\u5b58\n        store_cr0(cr0);\n    }\n\n    i = memtest_sub(start, end);\n\n    if (flg486 != 0) {\n        cr0 = load_cr0();\n        cr0 &amp;= ~CR0_CACHE_DISABLE; //\u5141\u8bb8\u7f13\u5b58\n        store_cr0(cr0);\n    }\n\n    return i;\n}\n</code></pre> <p>\u4e3a\u4e86\u7981\u6b62\u7f13\u5b58\uff0c\u9700\u8981\u5bf9<code>CR0</code>\u5bc4\u5b58\u5668\u7684\u67d0\u4e00\u6807\u5fd7\u4f4d\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd8\u6709\u9700\u8981<code>load_cr0</code>\u548c<code>store_cr0</code>\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u53ea\u80fd\u7528\u6c47\u7f16\u8bed\u8a00\u5199\uff1a</p> naskfunc.nas<pre><code>_load_cr0:      ; int load_cr0(void);\n        MOV     EAX,CR0\n        RET\n\n_store_cr0:     ; void store_cr0(int cr0);\n        MOV     EAX,[ESP+4]\n        MOV     CR0,EAX\n        RET\n</code></pre> <p><code>memtest_sub</code>\u51fd\u6570\uff0c\u662f\u5185\u5b58\u68c0\u67e5\u5904\u7406\u7684\u5b9e\u73b0\u90e8\u5206\u3002</p> bootpack.c<pre><code>unsigned int memtest_sub(unsigned int start, unsigned int end)\n{\n    unsigned int i, *p, old, pat0 = 0xaa55aa55, pat1 = 0x55aa55aa;\n    for (i = start; i &lt;= end; i += 0x1000) {\n        p = (unsigned int *) (i + 0xffc);\n        old = *p;           //\u5148\u8bb0\u4f4f\u4fee\u6539\u524d\u7684\u503c\n        *p = pat0;          //\u8bd5\u5199\n        *p ^= 0xffffffff;   //\u53cd\u8f6c \n        if (*p != pat1) {   //\u68c0\u67e5\u53cd\u8f6c\u7ed3\u679c\nnot_memory:\n            *p = old;\n            break;\n        }\n        *p ^= 0xffffffff;   //\u518d\u6b21\u53cd\u8f6c\n        if (*p != pat0) {   //\u68c0\u67e5\u503c\u662f\u5426\u6062\u590d\n            goto not_memory;\n        }\n        *p = old;           /* \u3044\u3058\u3063\u305f\u5024\u3092\u5143\u306b\u623b\u3059 */\n    }\n    return i;\n}\n</code></pre> <p><code>^</code>\u662f\u5f02\u6216<code>XOR</code></p> bootpack.c<pre><code>    i = memtest(0x00400000, 0xbfffffff) / (1024 * 1024);\n    sprintf(s, \"memory %dMB\", i);\n    putfonts8_asc(binfo-&gt;vram, binfo-&gt;scrnx, 0, 32, COL8_FFFFFF, s);\n</code></pre> <p>\u8fd9\u4e2a\u7a0b\u5e8f\u6700\u5927\u53ef\u4ee5\u8bc6\u522b3GB\u8303\u56f4\u7684\u5185\u5b58\u3002</p> <p></p> <p>\u4f46\u662fqemu\u7684\u5185\u5b58\u4e3a32MB\uff0c\u539f\u56e0\u4e3a\u7f16\u8bd1\u5668\u592a\u8fc7\u4f18\u79c0\uff0c\u5c06<code>memtest_sub</code>\u4f18\u5316\u4e86\uff0c\u89e3\u51b3\u529e\u6cd5\u662f\u7528\u6c47\u7f16\u5199\u8fd9\u4e2a\u51fd\u6570\uff1a</p> bootpack.c<pre><code>_memtest_sub:   ; unsigned int memtest_sub(unsigned int start, unsigned int end)\n        PUSH    EDI                     ; \uff08\u7531\u4e8e\u8981\u4f7f\u7528EBX, ESI, EDI)\n        PUSH    ESI\n        PUSH    EBX\n        MOV     ESI,0xaa55aa55          ; pat0 = 0xaa55aa55;\n        MOV     EDI,0x55aa55aa          ; pat1 = 0x55aa55aa;\n        MOV     EAX,[ESP+12+4]          ; i = start;\nmts_loop:\n        MOV     EBX,EAX\n        ADD     EBX,0xffc               ; p = i + 0xffc;\n        MOV     EDX,[EBX]               ; old = *p;\n        MOV     [EBX],ESI               ; *p = pat0;\n        XOR     DWORD [EBX],0xffffffff  ; *p ^= 0xffffffff;\n        CMP     EDI,[EBX]               ; if (*p != pat1) goto fin;\n        JNE     mts_fin\n        XOR     DWORD [EBX],0xffffffff  ; *p ^= 0xffffffff;\n        CMP     ESI,[EBX]               ; if (*p != pat0) goto fin;\n        JNE     mts_fin\n        MOV     [EBX],EDX               ; *p = old;\n        ADD     EAX,0x1000              ; i += 0x1000;\n        CMP     EAX,[ESP+12+8]          ; if (i &lt;= end) goto mts_loop;\n        JBE     mts_loop\n        POP     EBX\n        POP     ESI\n        POP     EDI\n        RET\nmts_fin:\n        MOV     [EBX],EDX               ; *p = old;\n        POP     EBX\n        POP     ESI\n        POP     EDI\n        RET\n</code></pre> <p></p>"},{"location":"%E7%AC%AC9%E5%A4%A9/#_5","title":"\u6311\u6218\u5185\u5b58\u7ba1\u7406","text":"<p>\u5fc5\u987b\u6070\u5f53\u7ba1\u7406\u597d\u54ea\u4e9b\u5185\u5b58\u53ef\u4ee5\u4f7f\u7528\uff0c\u54ea\u4e9b\u5185\u5b58\u4e0d\u53ef\u4ee5\u4f7f\u7528\u3002</p> <p>\u5185\u5b58\u7ba1\u7406\u7684\u57fa\u7840\uff0c\u4e00\u662f\u5185\u5b58\u5206\u914d\uff0c\u4e8c\u662f\u5185\u5b58\u91ca\u653e\u3002</p> <p>\u5148\u5047\u8bbe\u6709128MB\u7684\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709<code>0x08000000</code>\u4e2a\u5b57\u8282\u3002\u53e6\u5916\u6211\u4eec\u5047\u8bbe\u4ee5<code>0x1000</code>\u4e2a\u5b57\u8282(4KB)\u4e3a\u5355\u4f4d\u8fdb\u884c\u7ba1\u7406\u3002</p> <p>\u6211\u4eec\u4e00\u5171\u9700\u8981\u6807\u8bb0<code>0x08000=32768</code>\u5b57\u8282\u7684\u533a\u57df\uff0c\u53ef\u4ee5\u5f80\u5176\u4e2d\u5199\u51650\u6216\u80051\u6765\u6807\u8bb0\u54ea\u91cc\u662f\u7a7a\u7684\uff0c\u54ea\u91cc\u662f\u6b63\u5728\u4f7f\u7528\u7684\u3002</p> <pre><code>char a[32768];\nfor (i = 0; i &lt; 1024; i++)\n{\n    a[i] = 1;   //\u4e00\u76f4\u52304MB\u4e3a\u6b62\uff0c\u6807\u8bb0\u4e3a\u6b63\u5728\u4f7f\u7528\n}\nfor (i = 1024; i &lt; 32768; i++)\n{\n    a[i] = 0;   //\u5269\u4e0b\u7684\u5168\u90e8\u6807\u8bb0\u4e3a\u7a7a\n}\n</code></pre> <p>\u5982\u679c\u9700\u8981100KB\u7684\u7a7a\u95f4\uff0c\u90a3\u4e48\u53ea\u8981\u4ece<code>a</code>\u4e2d\u627e\u51fa\u8fde\u7eed25\u4e2a\u6807\u8bb0\u4e3a0\u7684\u5730\u65b9\u3002</p> <pre><code>j = 0;\n\n\u518d\u6765\u4e00\u6b21\uff1a\n    for (i = 0; i &lt; 25; i++)\n    {\n        if (a[j + i] != 0)\n        {\n            j++;    \n        }\n        if (j &lt; 32768 - 25)\n        {\n            goto \u518d\u6765\u4e00\u6b21;  \n        }\n        \"\u6ca1\u6709\u53ef\u7528\u5185\u5b58\u4e86\"\n    }\n\"\u4ecea[j]\u5230a[j+24]\u4e3a\u6b62\uff0c\u6807\u8bb0\u8fde\u7eed\u4e3a0\"\n</code></pre> <p>\u90a3\u4e48\u5982\u679c\u7528\u5b8c\u4e86\uff0c\u9700\u8981\u5f52\u8fd8\u8fd9\u4ece<code>0x0012300</code>\u5f00\u59cb\u7684100KB\uff1a</p> <pre><code>j = 0x00123000 / 0x1000;\nfor (i = 0;i &lt; 25; i++)\n{\n    a[j + i] = 0;\n}\n</code></pre> <p>\u4f46\u662f\u4e3a\u4e86\u8282\u7701\u5bb9\u91cf\uff0c\u8fd9\u4e2a\u5185\u5b58\u7ba1\u7406\u8868\u53ef\u4ee5\u4e0d\u7528<code>char</code>\u6765\u6784\u6210\uff0c\u800c\u662f\u4f7f\u7528<code>bit</code>\uff0c\u4f46\u662f\u8fd0\u7b97\u5f88\u9ebb\u70e6\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0eWindows\u7ba1\u7406\u8f6f\u76d8\u7684\u65b9\u6cd5\u5f88\u63a5\u8fd1(1.44MB\u7684\u5bb9\u91cf\uff0c\u4ee5512\u5b57\u8282\u4e3a\u5355\u4f4d\u8fdb\u884c\u5206\u5757)\u3002</p> <p>\u53e6\u5916\u4e00\u79cd\u5217\u8868\u7ba1\u7406\u65b9\u6cd5\u662f\uff0c\u628a\u7c7b\u4f3c\u4e8e\u201c\u4ecexxx\u53f7\u5730\u5740\u5f00\u59cb\u7684yyy\u5b57\u8282\u7684\u7a7a\u95f4\u662f\u7a7a\u7740\u7684\u201d\u8fd9\u79cd\u4fe1\u606f\u90fd\u5217\u5728\u8868\u91cc\uff1a</p> <pre><code>struct FREEINFO  \n{\n    //\u53ef\u7528\u72b6\u51b5\n    unsigned int addr, size;\n};\n\nstruct MENMAN\n{\n    //\u5185\u5b58\u7ba1\u7406\n    int frees;\n    struct FREEINFO free[1000];\n};\n\nstruct MEMMAN memman;\nmemman.frees = 1; //\u53ef\u7528\u72b6\u51b5list\u4e2d\u53ea\u67091\u4ef6\nmemman.free[0].addr = 0x00400000;\n//\u4ece0x00400000\u53f7\u5730\u5740\u5f00\u59cb\uff0c\u6709124MB\u53ef\u7528\nmemman.free[0].size = 0x07c00000J\n</code></pre> <p>\u6bd4\u5982\uff0c\u5982\u679c\u9700\u8981100KB\u7684\u7a7a\u95f4\uff0c\u53ea\u8981\u67e5\u770b<code>memman</code>\u4e2d<code>free</code>\u7684\u72b6\u6001\uff0c\u4ece\u4e2d\u627e\u5230100MB\u4ee5\u4e0a\u7684\u53ef\u7528\u7a7a\u95f4\u5c31\u884c\u4e86\u3002</p> <p>\u91ca\u653e\u5185\u5b58\u65f6\uff0c<code>frees</code>\u52a01\u3002\u800c\u4e14\uff0c\u8fd8\u8981\u8c03\u67e5\u4e00\u4e0b\u8fd9\u6bb5\u65b0\u91ca\u653e\u51fa\u6765\u7684\u5185\u5b58\uff0c\u4e0e\u76f8\u90bb\u7684\u53ef\u7528\u7a7a\u95f4\u80fd\u4e0d\u80fd\u8fde\u5230\u4e00\u8d77\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u5360\u7528\u7a7a\u95f4\u5c11\uff0c\u800c\u4e141000\u662f\u4e2a\u5f88\u5145\u88d5\u7684\u6570\u5b57\u3002\u7f3a\u70b9\u662f\u5f53\u53ef\u7528\u7a7a\u95f4\u96f6\u96f6\u6563\u6563\uff0c\u4f1a\u5c061000\u6761\u53ef\u7528\u7a7a\u95f4\u5168\u90e8\u7528\u5b8c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8981\u4e48\u5148\u5272\u820d\u6389\u5c0f\u5757\u5185\u5b58\uff0c\u6700\u540e\u518d\u6361\u56de\u6765\uff1b\u8981\u4e48\u5c31\u81ea\u52a8\u5207\u6362\u5230\u4e4b\u524d\u90a3\u79cd\u7ba1\u7406\u65b9\u6cd5\u3002</p> bootpack.c<pre><code>#define MEMMAN_FREES        4090    /* \u3053\u308c\u3067\u7d0432KB */\n\nstruct FREEINFO {   /* \u3042\u304d\u60c5\u5831 */\n    unsigned int addr, size;\n};\n\nstruct MEMMAN {     /* \u30e1\u30e2\u30ea\u7ba1\u7406 */\n    int frees, maxfrees, lostsize, losts;\n    struct FREEINFO free[MEMMAN_FREES];\n};\n\nvoid memman_init(struct MEMMAN *man)\n{\n    man-&gt;frees = 0;         //\u53ef\u7528\u4fe1\u606f\u6570\u76ee\n    man-&gt;maxfrees = 0;      //\u7528\u4e8e\u89c2\u5bdf\u53ef\u7528\u72b6\u51b5\uff1afrees\u7684\u6700\u5927\u503c\n    man-&gt;lostsize = 0;      //\u91ca\u653e\u5931\u8d25\u7684\u5185\u5b58\u7684\u5927\u5c0f\u603b\u548c\n    man-&gt;losts = 0;         //\u91ca\u653e\u5931\u8d25\u6b21\u6570\n    return;\n}\n\nunsigned int memman_total(struct MEMMAN *man)\n//\u62a5\u544a\u7a7a\u4f59\u5185\u5b58\u5927\u5c0f\u7684\u5408\u8ba1\n{\n    unsigned int i, t = 0;\n    for (i = 0; i &lt; man-&gt;frees; i++) {\n        t += man-&gt;free[i].size;\n    }\n    return t;\n}\n\nunsigned int memman_alloc(struct MEMMAN *man, unsigned int size)\n//\u5206\u914d\n{\n    unsigned int i, a;\n    for (i = 0; i &lt; man-&gt;frees; i++) {\n        if (man-&gt;free[i].size &gt;= size) {\n            //\u627e\u5230\u4e86\u8db3\u591f\u5927\u7684\u5185\u5b58\n            a = man-&gt;free[i].addr;\n            man-&gt;free[i].addr += size;\n            man-&gt;free[i].size -= size;\n            if (man-&gt;free[i].size == 0) {\n                //\u5982\u679cfree[i]\u53d8\u6210\u4e860\uff0c\u5c31\u51cf\u6389\u4e00\u6761\u53ef\u7528\u4fe1\u606f\n                man-&gt;frees--;\n                for (; i &lt; man-&gt;frees; i++) {\n                    man-&gt;free[i] = man-&gt;free[i + 1]; //\u4ee3\u5165\u7ed3\u6784\u4f53\n                }\n            }\n            return a;\n        }\n    }\n    return 0; //\u6ca1\u6709\u53ef\u7528\u7a7a\u95f4\n}\n\nint memman_free(struct MEMMAN *man, unsigned int addr, unsigned int size)\n//\u91ca\u653e\n{\n    int i, j;\n    //\u4e3a\u4fbf\u4e8e\u5f52\u7eb3\u5185\u5b58\uff0c\u5c06free[]\u6309\u7167addr\u7684\u987a\u5e8f\u6392\u5217 \n    //\u6240\u4ee5\uff0c\u5148\u51b3\u5b9a\u5e94\u8be5\u653e\u5728\u54ea\u91cc\n    for (i = 0; i &lt; man-&gt;frees; i++) {\n        if (man-&gt;free[i].addr &gt; addr) {\n            break;\n        }\n    }\n    /* free[i - 1].addr &lt; addr &lt; free[i].addr */\n    if (i &gt; 0) {\n        //\u524d\u9762\u6709\u53ef\u7528\u5185\u5b58\n        if (man-&gt;free[i - 1].addr + man-&gt;free[i - 1].size == addr) {\n            //\u53ef\u4ee5\u4e0e\u524d\u9762\u7684\u53ef\u7528\u5185\u5b58\u5f52\u7eb3\u5230\u4e00\u8d77\n            man-&gt;free[i - 1].size += size;\n            if (i &lt; man-&gt;frees) {\n                //\u540e\u9762\u4e5f\u6709\n                if (addr + size == man-&gt;free[i].addr) {\n                    //\u4e5f\u53ef\u4ee5\u4e0e\u540e\u9762\u7684\u53ef\u7528\u5185\u5b58\u5f52\u7eb3\u5230\u4e00\u8d77 \n                    man-&gt;free[i - 1].size += man-&gt;free[i].size;\n                    //man -&gt; free[i]\u5220\u9664\n                    //free[i]\u53d8\u62100\u540e\u5f52\u7eb3\u5230\u524d\u9762\u53bb\n                    man-&gt;frees--;\n                    for (; i &lt; man-&gt;frees; i++) {\n                        man-&gt;free[i] = man-&gt;free[i + 1]; \n                    }\n                }\n            }\n            return 0; /* \u6210\u529f\u7d42\u4e86 */\n        }\n    }\n    //\u4e0d\u80fd\u4e0e\u524d\u9762\u7684\u53ef\u7528\u7a7a\u95f4\u5f52\u7eb3\u5230\u4e00\u8d77\n    if (i &lt; man-&gt;frees) {\n        //\u540e\u9762\u8fd8\u6709\n        if (addr + size == man-&gt;free[i].addr) {\n            //\u53ef\u4ee5\u4e0e\u540e\u9762\u7684\u5185\u5bb9\u5f52\u7eb3\u5230\u4e00\u8d77\n            man-&gt;free[i].addr = addr;\n            man-&gt;free[i].size += size;\n            return 0; /* \u6210\u529f\u7d42\u4e86 */\n        }\n    }\n    //\u65e2\u4e0d\u80fd\u4e0e\u524d\u9762\u5f52\u7eb3\u5230\u4e00\u8d77\uff0c\u4e5f\u4e0d\u80fd\u4e0e\u540e\u9762\u5f52\u7eb3\u5230\u4e00\u8d77\n    if (man-&gt;frees &lt; MEMMAN_FREES) {\n        //free[i]\u4e4b\u540e\u7684\uff0c\u5411\u540e\u79fb\u52a8\uff0c\u817e\u51fa\u4e00\u70b9\u53ef\u7528\u7a7a\u95f4\n        for (j = man-&gt;frees; j &gt; i; j--) {\n            man-&gt;free[j] = man-&gt;free[j - 1];\n        }\n        man-&gt;frees++;\n        if (man-&gt;maxfrees &lt; man-&gt;frees) {\n            man-&gt;maxfrees = man-&gt;frees; /* \u6700\u5927\u5024\u3092\u66f4\u65b0 */\n        }\n        man-&gt;free[i].addr = addr;\n        man-&gt;free[i].size = size;\n        return 0; /* \u6210\u529f\u7d42\u4e86 */\n    }\n    //\u4e0d\u80fd\u5f80\u540e\u79fb\u52a8\n    man-&gt;losts++;\n    man-&gt;lostsize += size;\n    return -1; /* \u5931\u6557\u7d42\u4e86 */\n}\n</code></pre> bootpack.c<pre><code>void HariMain(void)\n{\n    struct MEMMAN *memman = (struct MEMMAN *) MEMMAN_ADDR;\n    memtotal = memtest(0x00400000, 0xbfffffff);\n    memman_free(memman, 0x00001000, 0x0009e000); /* 0x00001000 - 0x0009efff */\n    memman_free(memman, 0x00400000, memtotal - 0x00400000);\n}\n</code></pre> <p></p>"}]}